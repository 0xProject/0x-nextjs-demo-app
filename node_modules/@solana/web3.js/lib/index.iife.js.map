{"version":3,"file":"index.iife.js","sources":["../../../node_modules/.pnpm/base64-js@1.5.1/node_modules/base64-js/index.js","../../../node_modules/.pnpm/ieee754@1.2.1/node_modules/ieee754/index.js","../../../node_modules/.pnpm/buffer@6.0.3/node_modules/buffer/index.js","../../../node_modules/.pnpm/@noble+hashes@1.3.0/node_modules/@noble/hashes/esm/_assert.js","../../../node_modules/.pnpm/@noble+hashes@1.3.0/node_modules/@noble/hashes/esm/crypto.js","../../../node_modules/.pnpm/@noble+hashes@1.3.0/node_modules/@noble/hashes/esm/utils.js","../../../node_modules/.pnpm/@noble+hashes@1.3.0/node_modules/@noble/hashes/esm/_sha2.js","../../../node_modules/.pnpm/@noble+hashes@1.3.0/node_modules/@noble/hashes/esm/_u64.js","../../../node_modules/.pnpm/@noble+hashes@1.3.0/node_modules/@noble/hashes/esm/sha512.js","../../../node_modules/.pnpm/@noble+curves@1.0.0/node_modules/@noble/curves/esm/abstract/utils.js","../../../node_modules/.pnpm/@noble+curves@1.0.0/node_modules/@noble/curves/esm/abstract/modular.js","../../../node_modules/.pnpm/@noble+curves@1.0.0/node_modules/@noble/curves/esm/abstract/curve.js","../../../node_modules/.pnpm/@noble+curves@1.0.0/node_modules/@noble/curves/esm/abstract/edwards.js","../../../node_modules/.pnpm/@noble+curves@1.0.0/node_modules/@noble/curves/esm/abstract/montgomery.js","../../../node_modules/.pnpm/@noble+curves@1.0.0/node_modules/@noble/curves/esm/abstract/hash-to-curve.js","../../../node_modules/.pnpm/@noble+curves@1.0.0/node_modules/@noble/curves/esm/ed25519.js","../src/utils/ed25519.ts","../src/utils/to-buffer.ts","../../../node_modules/.pnpm/bn.js@5.2.1/node_modules/bn.js/lib/bn.js","../../../node_modules/.pnpm/safe-buffer@5.2.1/node_modules/safe-buffer/index.js","../../../node_modules/.pnpm/base-x@3.0.9/node_modules/base-x/src/index.js","../../../node_modules/.pnpm/bs58@4.0.1/node_modules/bs58/index.js","../../../node_modules/.pnpm/@noble+hashes@1.3.0/node_modules/@noble/hashes/esm/sha256.js","../../../node_modules/.pnpm/text-encoding-utf-8@1.0.2/node_modules/text-encoding-utf-8/lib/encoding.lib.js","../../../node_modules/.pnpm/borsh@0.7.0/node_modules/borsh/lib/index.js","../src/utils/borsh-schema.ts","../src/publickey.ts","../src/account.ts","../src/bpf-loader-deprecated.ts","../../../node_modules/.pnpm/@solana+buffer-layout@4.0.1/node_modules/@solana/buffer-layout/lib/Layout.js","../src/transaction/constants.ts","../src/transaction/expiry-custom-errors.ts","../src/message/account-keys.ts","../src/layout.ts","../src/utils/shortvec-encoding.ts","../src/utils/assert.ts","../src/message/compiled-keys.ts","../src/message/legacy.ts","../src/message/v0.ts","../src/message/versioned.ts","../src/transaction/legacy.ts","../src/transaction/message.ts","../src/transaction/versioned.ts","../src/timing.ts","../src/sysvar.ts","../src/utils/send-and-confirm-transaction.ts","../src/utils/sleep.ts","../src/instruction.ts","../src/fee-calculator.ts","../src/nonce-account.ts","../../../node_modules/.pnpm/bigint-buffer@1.1.5/node_modules/bigint-buffer/dist/browser.js","../src/utils/bigint.ts","../src/programs/system.ts","../src/loader.ts","../src/bpf-loader.ts","../../../node_modules/.pnpm/fast-stable-stringify@1.0.0/node_modules/fast-stable-stringify/index.js","../../../node_modules/.pnpm/superstruct@0.14.2/node_modules/superstruct/lib/index.es.js","../../../node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/rng.js","../../../node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/regex.js","../../../node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/validate.js","../../../node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/stringify.js","../../../node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/v1.js","../../../node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/parse.js","../../../node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/v35.js","../../../node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/md5.js","../../../node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/v3.js","../../../node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/v4.js","../../../node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/sha1.js","../../../node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/v5.js","../../../node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/nil.js","../../../node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/version.js","../../../node_modules/.pnpm/jayson@4.1.0/node_modules/jayson/lib/generateRequest.js","../../../node_modules/.pnpm/jayson@4.1.0/node_modules/jayson/lib/client/browser/index.js","../src/epoch-schedule.ts","../src/errors.ts","../src/__forks__/browser/fetch-impl.ts","../../../node_modules/.pnpm/@babel+runtime@7.20.13/node_modules/@babel/runtime/helpers/interopRequireDefault.js","../../../node_modules/.pnpm/@babel+runtime@7.20.13/node_modules/@babel/runtime/helpers/typeof.js","../../../node_modules/.pnpm/@babel+runtime@7.20.13/node_modules/@babel/runtime/helpers/regeneratorRuntime.js","../../../node_modules/.pnpm/@babel+runtime@7.20.13/node_modules/@babel/runtime/regenerator/index.js","../../../node_modules/.pnpm/@babel+runtime@7.20.13/node_modules/@babel/runtime/helpers/asyncToGenerator.js","../../../node_modules/.pnpm/@babel+runtime@7.20.13/node_modules/@babel/runtime/helpers/classCallCheck.js","../../../node_modules/.pnpm/@babel+runtime@7.20.13/node_modules/@babel/runtime/helpers/toPrimitive.js","../../../node_modules/.pnpm/@babel+runtime@7.20.13/node_modules/@babel/runtime/helpers/toPropertyKey.js","../../../node_modules/.pnpm/@babel+runtime@7.20.13/node_modules/@babel/runtime/helpers/createClass.js","../../../node_modules/.pnpm/@babel+runtime@7.20.13/node_modules/@babel/runtime/helpers/setPrototypeOf.js","../../../node_modules/.pnpm/@babel+runtime@7.20.13/node_modules/@babel/runtime/helpers/inherits.js","../../../node_modules/.pnpm/@babel+runtime@7.20.13/node_modules/@babel/runtime/helpers/assertThisInitialized.js","../../../node_modules/.pnpm/@babel+runtime@7.20.13/node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","../../../node_modules/.pnpm/@babel+runtime@7.20.13/node_modules/@babel/runtime/helpers/getPrototypeOf.js","../../../node_modules/.pnpm/eventemitter3@4.0.7/node_modules/eventemitter3/index.js","../../../node_modules/.pnpm/rpc-websockets@7.5.1/node_modules/rpc-websockets/dist/lib/client.js","../../../node_modules/.pnpm/rpc-websockets@7.5.1/node_modules/rpc-websockets/dist/lib/client/websocket.browser.js","../src/rpc-websocket.ts","../src/account-data.ts","../src/programs/address-lookup-table/state.ts","../src/utils/makeWebsocketUrl.ts","../src/connection.ts","../src/keypair.ts","../src/programs/address-lookup-table/index.ts","../src/programs/compute-budget.ts","../src/programs/ed25519.ts","../../../node_modules/.pnpm/@noble+hashes@1.3.0/node_modules/@noble/hashes/esm/sha3.js","../../../node_modules/.pnpm/@noble+curves@1.0.0/node_modules/@noble/curves/esm/abstract/weierstrass.js","../../../node_modules/.pnpm/@noble+hashes@1.3.0/node_modules/@noble/hashes/esm/hmac.js","../../../node_modules/.pnpm/@noble+curves@1.0.0/node_modules/@noble/curves/esm/_shortw_utils.js","../../../node_modules/.pnpm/@noble+curves@1.0.0/node_modules/@noble/curves/esm/secp256k1.js","../src/utils/secp256k1.ts","../src/programs/secp256k1.ts","../src/programs/stake.ts","../src/programs/vote.ts","../src/validator-info.ts","../src/vote-account.ts","../src/utils/cluster.ts","../src/utils/send-and-confirm-raw-transaction.ts","../src/index.ts"],"sourcesContent":["'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n","export function number(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error(`Wrong positive integer: ${n}`);\n}\nexport function bool(b) {\n    if (typeof b !== 'boolean')\n        throw new Error(`Expected boolean, not ${b}`);\n}\nexport function bytes(b, ...lengths) {\n    if (!(b instanceof Uint8Array))\n        throw new TypeError('Expected Uint8Array');\n    if (lengths.length > 0 && !lengths.includes(b.length))\n        throw new TypeError(`Expected Uint8Array of length ${lengths}, not of length=${b.length}`);\n}\nexport function hash(hash) {\n    if (typeof hash !== 'function' || typeof hash.create !== 'function')\n        throw new Error('Hash should be wrapped by utils.wrapConstructor');\n    number(hash.outputLen);\n    number(hash.blockLen);\n}\nexport function exists(instance, checkFinished = true) {\n    if (instance.destroyed)\n        throw new Error('Hash instance has been destroyed');\n    if (checkFinished && instance.finished)\n        throw new Error('Hash#digest() has already been called');\n}\nexport function output(out, instance) {\n    bytes(out);\n    const min = instance.outputLen;\n    if (out.length < min) {\n        throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n    }\n}\nconst assert = {\n    number,\n    bool,\n    bytes,\n    hash,\n    exists,\n    output,\n};\nexport default assert;\n//# sourceMappingURL=_assert.js.map","export const crypto = typeof globalThis === 'object' && 'crypto' in globalThis ? globalThis.crypto : undefined;\n//# sourceMappingURL=crypto.js.map","/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// We use `globalThis.crypto`, but node.js versions earlier than v19 don't\n// declare it in global scope. For node.js, package.json#exports field mapping\n// rewrites import from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated, we can just drop the import.\nimport { crypto } from '@noble/hashes/crypto';\n// Cast array to different type\nexport const u8 = (arr) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u32 = (arr) => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n// Cast array to view\nexport const createView = (arr) => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n// The rotate right (circular right shift) operation for uint32\nexport const rotr = (word, shift) => (word << (32 - shift)) | (word >>> shift);\n// big-endian hardware is rare. Just in case someone still decides to run hashes:\n// early-throw an error because we don't support BE yet.\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\nif (!isLE)\n    throw new Error('Non little-endian hardware is not supported');\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xde, 0xad, 0xbe, 0xef])) // 'deadbeef'\n */\nexport function bytesToHex(uint8a) {\n    // pre-caching improves the speed 6x\n    if (!(uint8a instanceof Uint8Array))\n        throw new Error('Uint8Array expected');\n    let hex = '';\n    for (let i = 0; i < uint8a.length; i++) {\n        hex += hexes[uint8a[i]];\n    }\n    return hex;\n}\n/**\n * @example hexToBytes('deadbeef') // Uint8Array.from([0xde, 0xad, 0xbe, 0xef])\n */\nexport function hexToBytes(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n    }\n    if (hex.length % 2)\n        throw new Error('hexToBytes: received invalid unpadded hex');\n    const array = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () => { };\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick)\n            continue;\n        await nextTick();\n        ts += diff;\n    }\n}\nexport function utf8ToBytes(str) {\n    if (typeof str !== 'string') {\n        throw new TypeError(`utf8ToBytes expected string, got ${typeof str}`);\n    }\n    return new TextEncoder().encode(str);\n}\nexport function toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    if (!(data instanceof Uint8Array))\n        throw new TypeError(`Expected input type is Uint8Array (got ${typeof data})`);\n    return data;\n}\n/**\n * Concats Uint8Array-s into one; like `Buffer.concat([buf1, buf2])`\n * @example concatBytes(buf1, buf2)\n */\nexport function concatBytes(...arrays) {\n    if (!arrays.every((a) => a instanceof Uint8Array))\n        throw new Error('Uint8Array list expected');\n    if (arrays.length === 1)\n        return arrays[0];\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\n    const result = new Uint8Array(length);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const arr = arrays[i];\n        result.set(arr, pad);\n        pad += arr.length;\n    }\n    return result;\n}\n// For runtime check if class implements interface\nexport class Hash {\n    // Safe version that clones internal state\n    clone() {\n        return this._cloneInto();\n    }\n}\n// Check if object doens't have custom constructor (like Uint8Array/Array)\nconst isPlainObject = (obj) => Object.prototype.toString.call(obj) === '[object Object]' && obj.constructor === Object;\nexport function checkOpts(defaults, opts) {\n    if (opts !== undefined && (typeof opts !== 'object' || !isPlainObject(opts)))\n        throw new TypeError('Options should be object or undefined');\n    const merged = Object.assign(defaults, opts);\n    return merged;\n}\nexport function wrapConstructor(hashConstructor) {\n    const hashC = (message) => hashConstructor().update(toBytes(message)).digest();\n    const tmp = hashConstructor();\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = () => hashConstructor();\n    return hashC;\n}\nexport function wrapConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\n/**\n * Secure PRNG. Uses `globalThis.crypto` or node.js crypto module.\n */\nexport function randomBytes(bytesLength = 32) {\n    if (crypto && typeof crypto.getRandomValues === 'function') {\n        return crypto.getRandomValues(new Uint8Array(bytesLength));\n    }\n    throw new Error('crypto.getRandomValues must be defined');\n}\n//# sourceMappingURL=utils.js.map","import assert from './_assert.js';\nimport { Hash, createView, toBytes } from './utils.js';\n// Polyfill for Safari 14\nfunction setBigUint64(view, byteOffset, value, isLE) {\n    if (typeof view.setBigUint64 === 'function')\n        return view.setBigUint64(byteOffset, value, isLE);\n    const _32n = BigInt(32);\n    const _u32_max = BigInt(0xffffffff);\n    const wh = Number((value >> _32n) & _u32_max);\n    const wl = Number(value & _u32_max);\n    const h = isLE ? 4 : 0;\n    const l = isLE ? 0 : 4;\n    view.setUint32(byteOffset + h, wh, isLE);\n    view.setUint32(byteOffset + l, wl, isLE);\n}\n// Base SHA2 class (RFC 6234)\nexport class SHA2 extends Hash {\n    constructor(blockLen, outputLen, padOffset, isLE) {\n        super();\n        this.blockLen = blockLen;\n        this.outputLen = outputLen;\n        this.padOffset = padOffset;\n        this.isLE = isLE;\n        this.finished = false;\n        this.length = 0;\n        this.pos = 0;\n        this.destroyed = false;\n        this.buffer = new Uint8Array(blockLen);\n        this.view = createView(this.buffer);\n    }\n    update(data) {\n        assert.exists(this);\n        const { view, buffer, blockLen } = this;\n        data = toBytes(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            // Fast path: we have at least one block in input, cast it to view and process\n            if (take === blockLen) {\n                const dataView = createView(data);\n                for (; blockLen <= len - pos; pos += blockLen)\n                    this.process(dataView, pos);\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            pos += take;\n            if (this.pos === blockLen) {\n                this.process(view, 0);\n                this.pos = 0;\n            }\n        }\n        this.length += data.length;\n        this.roundClean();\n        return this;\n    }\n    digestInto(out) {\n        assert.exists(this);\n        assert.output(out, this);\n        this.finished = true;\n        // Padding\n        // We can avoid allocation of buffer for padding completely if it\n        // was previously not allocated here. But it won't change performance.\n        const { buffer, view, blockLen, isLE } = this;\n        let { pos } = this;\n        // append the bit '1' to the message\n        buffer[pos++] = 0b10000000;\n        this.buffer.subarray(pos).fill(0);\n        // we have less than padOffset left in buffer, so we cannot put length in current block, need process it and pad again\n        if (this.padOffset > blockLen - pos) {\n            this.process(view, 0);\n            pos = 0;\n        }\n        // Pad until full block byte with zeros\n        for (let i = pos; i < blockLen; i++)\n            buffer[i] = 0;\n        // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n        // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n        // So we just write lowest 64 bits of that value.\n        setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n        this.process(view, 0);\n        const oview = createView(out);\n        const len = this.outputLen;\n        // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n        if (len % 4)\n            throw new Error('_sha2: outputLen should be aligned to 32bit');\n        const outLen = len / 4;\n        const state = this.get();\n        if (outLen > state.length)\n            throw new Error('_sha2: outputLen bigger than state');\n        for (let i = 0; i < outLen; i++)\n            oview.setUint32(4 * i, state[i], isLE);\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n    _cloneInto(to) {\n        to || (to = new this.constructor());\n        to.set(...this.get());\n        const { blockLen, buffer, length, finished, destroyed, pos } = this;\n        to.length = length;\n        to.pos = pos;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        if (length % blockLen)\n            to.buffer.set(buffer);\n        return to;\n    }\n}\n//# sourceMappingURL=_sha2.js.map","const U32_MASK64 = BigInt(2 ** 32 - 1);\nconst _32n = BigInt(32);\n// We are not using BigUint64Array, because they are extremely slow as per 2022\nexport function fromBig(n, le = false) {\n    if (le)\n        return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n    return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\nexport function split(lst, le = false) {\n    let Ah = new Uint32Array(lst.length);\n    let Al = new Uint32Array(lst.length);\n    for (let i = 0; i < lst.length; i++) {\n        const { h, l } = fromBig(lst[i], le);\n        [Ah[i], Al[i]] = [h, l];\n    }\n    return [Ah, Al];\n}\nexport const toBig = (h, l) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\n// for Shift in [0, 32)\nconst shrSH = (h, l, s) => h >>> s;\nconst shrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h, l, s) => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h, l, s) => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h, l, s) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (h, l) => l;\nconst rotr32L = (h, l) => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h, l, s) => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h, l, s) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h, l, s) => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h, l, s) => (h << (s - 32)) | (l >>> (64 - s));\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\n// Removing \"export\" has 5% perf penalty -_-\nexport function add(Ah, Al, Bh, Bl) {\n    const l = (Al >>> 0) + (Bl >>> 0);\n    return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nconst add3L = (Al, Bl, Cl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low, Ah, Bh, Ch) => (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al, Bl, Cl, Dl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low, Ah, Bh, Ch, Dh) => (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al, Bl, Cl, Dl, El) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low, Ah, Bh, Ch, Dh, Eh) => (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n// prettier-ignore\nconst u64 = {\n    fromBig, split, toBig,\n    shrSH, shrSL,\n    rotrSH, rotrSL, rotrBH, rotrBL,\n    rotr32H, rotr32L,\n    rotlSH, rotlSL, rotlBH, rotlBL,\n    add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexport default u64;\n//# sourceMappingURL=_u64.js.map","import { SHA2 } from './_sha2.js';\nimport u64 from './_u64.js';\nimport { wrapConstructor } from './utils.js';\n// Round contants (first 32 bits of the fractional parts of the cube roots of the first 80 primes 2..409):\n// prettier-ignore\nconst [SHA512_Kh, SHA512_Kl] = u64.split([\n    '0x428a2f98d728ae22', '0x7137449123ef65cd', '0xb5c0fbcfec4d3b2f', '0xe9b5dba58189dbbc',\n    '0x3956c25bf348b538', '0x59f111f1b605d019', '0x923f82a4af194f9b', '0xab1c5ed5da6d8118',\n    '0xd807aa98a3030242', '0x12835b0145706fbe', '0x243185be4ee4b28c', '0x550c7dc3d5ffb4e2',\n    '0x72be5d74f27b896f', '0x80deb1fe3b1696b1', '0x9bdc06a725c71235', '0xc19bf174cf692694',\n    '0xe49b69c19ef14ad2', '0xefbe4786384f25e3', '0x0fc19dc68b8cd5b5', '0x240ca1cc77ac9c65',\n    '0x2de92c6f592b0275', '0x4a7484aa6ea6e483', '0x5cb0a9dcbd41fbd4', '0x76f988da831153b5',\n    '0x983e5152ee66dfab', '0xa831c66d2db43210', '0xb00327c898fb213f', '0xbf597fc7beef0ee4',\n    '0xc6e00bf33da88fc2', '0xd5a79147930aa725', '0x06ca6351e003826f', '0x142929670a0e6e70',\n    '0x27b70a8546d22ffc', '0x2e1b21385c26c926', '0x4d2c6dfc5ac42aed', '0x53380d139d95b3df',\n    '0x650a73548baf63de', '0x766a0abb3c77b2a8', '0x81c2c92e47edaee6', '0x92722c851482353b',\n    '0xa2bfe8a14cf10364', '0xa81a664bbc423001', '0xc24b8b70d0f89791', '0xc76c51a30654be30',\n    '0xd192e819d6ef5218', '0xd69906245565a910', '0xf40e35855771202a', '0x106aa07032bbd1b8',\n    '0x19a4c116b8d2d0c8', '0x1e376c085141ab53', '0x2748774cdf8eeb99', '0x34b0bcb5e19b48a8',\n    '0x391c0cb3c5c95a63', '0x4ed8aa4ae3418acb', '0x5b9cca4f7763e373', '0x682e6ff3d6b2b8a3',\n    '0x748f82ee5defb2fc', '0x78a5636f43172f60', '0x84c87814a1f0ab72', '0x8cc702081a6439ec',\n    '0x90befffa23631e28', '0xa4506cebde82bde9', '0xbef9a3f7b2c67915', '0xc67178f2e372532b',\n    '0xca273eceea26619c', '0xd186b8c721c0c207', '0xeada7dd6cde0eb1e', '0xf57d4f7fee6ed178',\n    '0x06f067aa72176fba', '0x0a637dc5a2c898a6', '0x113f9804bef90dae', '0x1b710b35131c471b',\n    '0x28db77f523047d84', '0x32caab7b40c72493', '0x3c9ebe0a15c9bebc', '0x431d67c49c100d4c',\n    '0x4cc5d4becb3e42b6', '0x597f299cfc657e2a', '0x5fcb6fab3ad6faec', '0x6c44198c4a475817'\n].map(n => BigInt(n)));\n// Temporary buffer, not used to store anything between runs\nconst SHA512_W_H = new Uint32Array(80);\nconst SHA512_W_L = new Uint32Array(80);\nexport class SHA512 extends SHA2 {\n    constructor() {\n        super(128, 64, 16, false);\n        // We cannot use array here since array allows indexing by variable which means optimizer/compiler cannot use registers.\n        // Also looks cleaner and easier to verify with spec.\n        // Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x6a09e667 | 0;\n        this.Al = 0xf3bcc908 | 0;\n        this.Bh = 0xbb67ae85 | 0;\n        this.Bl = 0x84caa73b | 0;\n        this.Ch = 0x3c6ef372 | 0;\n        this.Cl = 0xfe94f82b | 0;\n        this.Dh = 0xa54ff53a | 0;\n        this.Dl = 0x5f1d36f1 | 0;\n        this.Eh = 0x510e527f | 0;\n        this.El = 0xade682d1 | 0;\n        this.Fh = 0x9b05688c | 0;\n        this.Fl = 0x2b3e6c1f | 0;\n        this.Gh = 0x1f83d9ab | 0;\n        this.Gl = 0xfb41bd6b | 0;\n        this.Hh = 0x5be0cd19 | 0;\n        this.Hl = 0x137e2179 | 0;\n    }\n    // prettier-ignore\n    get() {\n        const { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        return [Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl];\n    }\n    // prettier-ignore\n    set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl) {\n        this.Ah = Ah | 0;\n        this.Al = Al | 0;\n        this.Bh = Bh | 0;\n        this.Bl = Bl | 0;\n        this.Ch = Ch | 0;\n        this.Cl = Cl | 0;\n        this.Dh = Dh | 0;\n        this.Dl = Dl | 0;\n        this.Eh = Eh | 0;\n        this.El = El | 0;\n        this.Fh = Fh | 0;\n        this.Fl = Fl | 0;\n        this.Gh = Gh | 0;\n        this.Gl = Gl | 0;\n        this.Hh = Hh | 0;\n        this.Hl = Hl | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 64 words w[16..79] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4) {\n            SHA512_W_H[i] = view.getUint32(offset);\n            SHA512_W_L[i] = view.getUint32((offset += 4));\n        }\n        for (let i = 16; i < 80; i++) {\n            // s0 := (w[i-15] rightrotate 1) xor (w[i-15] rightrotate 8) xor (w[i-15] rightshift 7)\n            const W15h = SHA512_W_H[i - 15] | 0;\n            const W15l = SHA512_W_L[i - 15] | 0;\n            const s0h = u64.rotrSH(W15h, W15l, 1) ^ u64.rotrSH(W15h, W15l, 8) ^ u64.shrSH(W15h, W15l, 7);\n            const s0l = u64.rotrSL(W15h, W15l, 1) ^ u64.rotrSL(W15h, W15l, 8) ^ u64.shrSL(W15h, W15l, 7);\n            // s1 := (w[i-2] rightrotate 19) xor (w[i-2] rightrotate 61) xor (w[i-2] rightshift 6)\n            const W2h = SHA512_W_H[i - 2] | 0;\n            const W2l = SHA512_W_L[i - 2] | 0;\n            const s1h = u64.rotrSH(W2h, W2l, 19) ^ u64.rotrBH(W2h, W2l, 61) ^ u64.shrSH(W2h, W2l, 6);\n            const s1l = u64.rotrSL(W2h, W2l, 19) ^ u64.rotrBL(W2h, W2l, 61) ^ u64.shrSL(W2h, W2l, 6);\n            // SHA256_W[i] = s0 + s1 + SHA256_W[i - 7] + SHA256_W[i - 16];\n            const SUMl = u64.add4L(s0l, s1l, SHA512_W_L[i - 7], SHA512_W_L[i - 16]);\n            const SUMh = u64.add4H(SUMl, s0h, s1h, SHA512_W_H[i - 7], SHA512_W_H[i - 16]);\n            SHA512_W_H[i] = SUMh | 0;\n            SHA512_W_L[i] = SUMl | 0;\n        }\n        let { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        // Compression function main loop, 80 rounds\n        for (let i = 0; i < 80; i++) {\n            // S1 := (e rightrotate 14) xor (e rightrotate 18) xor (e rightrotate 41)\n            const sigma1h = u64.rotrSH(Eh, El, 14) ^ u64.rotrSH(Eh, El, 18) ^ u64.rotrBH(Eh, El, 41);\n            const sigma1l = u64.rotrSL(Eh, El, 14) ^ u64.rotrSL(Eh, El, 18) ^ u64.rotrBL(Eh, El, 41);\n            //const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const CHIh = (Eh & Fh) ^ (~Eh & Gh);\n            const CHIl = (El & Fl) ^ (~El & Gl);\n            // T1 = H + sigma1 + Chi(E, F, G) + SHA512_K[i] + SHA512_W[i]\n            // prettier-ignore\n            const T1ll = u64.add5L(Hl, sigma1l, CHIl, SHA512_Kl[i], SHA512_W_L[i]);\n            const T1h = u64.add5H(T1ll, Hh, sigma1h, CHIh, SHA512_Kh[i], SHA512_W_H[i]);\n            const T1l = T1ll | 0;\n            // S0 := (a rightrotate 28) xor (a rightrotate 34) xor (a rightrotate 39)\n            const sigma0h = u64.rotrSH(Ah, Al, 28) ^ u64.rotrBH(Ah, Al, 34) ^ u64.rotrBH(Ah, Al, 39);\n            const sigma0l = u64.rotrSL(Ah, Al, 28) ^ u64.rotrBL(Ah, Al, 34) ^ u64.rotrBL(Ah, Al, 39);\n            const MAJh = (Ah & Bh) ^ (Ah & Ch) ^ (Bh & Ch);\n            const MAJl = (Al & Bl) ^ (Al & Cl) ^ (Bl & Cl);\n            Hh = Gh | 0;\n            Hl = Gl | 0;\n            Gh = Fh | 0;\n            Gl = Fl | 0;\n            Fh = Eh | 0;\n            Fl = El | 0;\n            ({ h: Eh, l: El } = u64.add(Dh | 0, Dl | 0, T1h | 0, T1l | 0));\n            Dh = Ch | 0;\n            Dl = Cl | 0;\n            Ch = Bh | 0;\n            Cl = Bl | 0;\n            Bh = Ah | 0;\n            Bl = Al | 0;\n            const All = u64.add3L(T1l, sigma0l, MAJl);\n            Ah = u64.add3H(All, T1h, sigma0h, MAJh);\n            Al = All | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        ({ h: Ah, l: Al } = u64.add(this.Ah | 0, this.Al | 0, Ah | 0, Al | 0));\n        ({ h: Bh, l: Bl } = u64.add(this.Bh | 0, this.Bl | 0, Bh | 0, Bl | 0));\n        ({ h: Ch, l: Cl } = u64.add(this.Ch | 0, this.Cl | 0, Ch | 0, Cl | 0));\n        ({ h: Dh, l: Dl } = u64.add(this.Dh | 0, this.Dl | 0, Dh | 0, Dl | 0));\n        ({ h: Eh, l: El } = u64.add(this.Eh | 0, this.El | 0, Eh | 0, El | 0));\n        ({ h: Fh, l: Fl } = u64.add(this.Fh | 0, this.Fl | 0, Fh | 0, Fl | 0));\n        ({ h: Gh, l: Gl } = u64.add(this.Gh | 0, this.Gl | 0, Gh | 0, Gl | 0));\n        ({ h: Hh, l: Hl } = u64.add(this.Hh | 0, this.Hl | 0, Hh | 0, Hl | 0));\n        this.set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl);\n    }\n    roundClean() {\n        SHA512_W_H.fill(0);\n        SHA512_W_L.fill(0);\n    }\n    destroy() {\n        this.buffer.fill(0);\n        this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n    }\n}\nclass SHA512_224 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x8c3d37c8 | 0;\n        this.Al = 0x19544da2 | 0;\n        this.Bh = 0x73e19966 | 0;\n        this.Bl = 0x89dcd4d6 | 0;\n        this.Ch = 0x1dfab7ae | 0;\n        this.Cl = 0x32ff9c82 | 0;\n        this.Dh = 0x679dd514 | 0;\n        this.Dl = 0x582f9fcf | 0;\n        this.Eh = 0x0f6d2b69 | 0;\n        this.El = 0x7bd44da8 | 0;\n        this.Fh = 0x77e36f73 | 0;\n        this.Fl = 0x04c48942 | 0;\n        this.Gh = 0x3f9d85a8 | 0;\n        this.Gl = 0x6a1d36c8 | 0;\n        this.Hh = 0x1112e6ad | 0;\n        this.Hl = 0x91d692a1 | 0;\n        this.outputLen = 28;\n    }\n}\nclass SHA512_256 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x22312194 | 0;\n        this.Al = 0xfc2bf72c | 0;\n        this.Bh = 0x9f555fa3 | 0;\n        this.Bl = 0xc84c64c2 | 0;\n        this.Ch = 0x2393b86b | 0;\n        this.Cl = 0x6f53b151 | 0;\n        this.Dh = 0x96387719 | 0;\n        this.Dl = 0x5940eabd | 0;\n        this.Eh = 0x96283ee2 | 0;\n        this.El = 0xa88effe3 | 0;\n        this.Fh = 0xbe5e1e25 | 0;\n        this.Fl = 0x53863992 | 0;\n        this.Gh = 0x2b0199fc | 0;\n        this.Gl = 0x2c85b8aa | 0;\n        this.Hh = 0x0eb72ddc | 0;\n        this.Hl = 0x81c52ca2 | 0;\n        this.outputLen = 32;\n    }\n}\nclass SHA384 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0xcbbb9d5d | 0;\n        this.Al = 0xc1059ed8 | 0;\n        this.Bh = 0x629a292a | 0;\n        this.Bl = 0x367cd507 | 0;\n        this.Ch = 0x9159015a | 0;\n        this.Cl = 0x3070dd17 | 0;\n        this.Dh = 0x152fecd8 | 0;\n        this.Dl = 0xf70e5939 | 0;\n        this.Eh = 0x67332667 | 0;\n        this.El = 0xffc00b31 | 0;\n        this.Fh = 0x8eb44a87 | 0;\n        this.Fl = 0x68581511 | 0;\n        this.Gh = 0xdb0c2e0d | 0;\n        this.Gl = 0x64f98fa7 | 0;\n        this.Hh = 0x47b5481d | 0;\n        this.Hl = 0xbefa4fa4 | 0;\n        this.outputLen = 48;\n    }\n}\nexport const sha512 = wrapConstructor(() => new SHA512());\nexport const sha512_224 = wrapConstructor(() => new SHA512_224());\nexport const sha512_256 = wrapConstructor(() => new SHA512_256());\nexport const sha384 = wrapConstructor(() => new SHA384());\n//# sourceMappingURL=sha512.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst u8a = (a) => a instanceof Uint8Array;\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\nexport function bytesToHex(bytes) {\n    if (!u8a(bytes))\n        throw new Error('Uint8Array expected');\n    // pre-caching improves the speed 6x\n    let hex = '';\n    for (let i = 0; i < bytes.length; i++) {\n        hex += hexes[bytes[i]];\n    }\n    return hex;\n}\nexport function numberToHexUnpadded(num) {\n    const hex = num.toString(16);\n    return hex.length & 1 ? `0${hex}` : hex;\n}\nexport function hexToNumber(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    // Big Endian\n    return BigInt(hex === '' ? '0' : `0x${hex}`);\n}\n// Caching slows it down 2-3x\nexport function hexToBytes(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    if (hex.length % 2)\n        throw new Error('hex string is invalid: unpadded ' + hex.length);\n    const array = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\n// Big Endian\nexport function bytesToNumberBE(bytes) {\n    return hexToNumber(bytesToHex(bytes));\n}\nexport function bytesToNumberLE(bytes) {\n    if (!u8a(bytes))\n        throw new Error('Uint8Array expected');\n    return hexToNumber(bytesToHex(Uint8Array.from(bytes).reverse()));\n}\nexport const numberToBytesBE = (n, len) => hexToBytes(n.toString(16).padStart(len * 2, '0'));\nexport const numberToBytesLE = (n, len) => numberToBytesBE(n, len).reverse();\n// Returns variable number bytes (minimal bigint encoding?)\nexport const numberToVarBytesBE = (n) => hexToBytes(numberToHexUnpadded(n));\nexport function ensureBytes(title, hex, expectedLength) {\n    let res;\n    if (typeof hex === 'string') {\n        try {\n            res = hexToBytes(hex);\n        }\n        catch (e) {\n            throw new Error(`${title} must be valid hex string, got \"${hex}\". Cause: ${e}`);\n        }\n    }\n    else if (u8a(hex)) {\n        // Uint8Array.from() instead of hash.slice() because node.js Buffer\n        // is instance of Uint8Array, and its slice() creates **mutable** copy\n        res = Uint8Array.from(hex);\n    }\n    else {\n        throw new Error(`${title} must be hex string or Uint8Array`);\n    }\n    const len = res.length;\n    if (typeof expectedLength === 'number' && len !== expectedLength)\n        throw new Error(`${title} expected ${expectedLength} bytes, got ${len}`);\n    return res;\n}\n// Copies several Uint8Arrays into one.\nexport function concatBytes(...arrs) {\n    const r = new Uint8Array(arrs.reduce((sum, a) => sum + a.length, 0));\n    let pad = 0; // walk through each item, ensure they have proper type\n    arrs.forEach((a) => {\n        if (!u8a(a))\n            throw new Error('Uint8Array expected');\n        r.set(a, pad);\n        pad += a.length;\n    });\n    return r;\n}\nexport function equalBytes(b1, b2) {\n    // We don't care about timing attacks here\n    if (b1.length !== b2.length)\n        return false;\n    for (let i = 0; i < b1.length; i++)\n        if (b1[i] !== b2[i])\n            return false;\n    return true;\n}\nexport function utf8ToBytes(str) {\n    if (typeof str !== 'string') {\n        throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n    }\n    return new TextEncoder().encode(str);\n}\n// Bit operations\n// Amount of bits inside bigint (Same as n.toString(2).length)\nexport function bitLen(n) {\n    let len;\n    for (len = 0; n > _0n; n >>= _1n, len += 1)\n        ;\n    return len;\n}\n// Gets single bit at position. NOTE: first bit position is 0 (same as arrays)\n// Same as !!+Array.from(n.toString(2)).reverse()[pos]\nexport const bitGet = (n, pos) => (n >> BigInt(pos)) & _1n;\n// Sets single bit at position\nexport const bitSet = (n, pos, value) => n | ((value ? _1n : _0n) << BigInt(pos));\n// Return mask for N bits (Same as BigInt(`0b${Array(i).fill('1').join('')}`))\n// Not using ** operator with bigints for old engines.\nexport const bitMask = (n) => (_2n << BigInt(n - 1)) - _1n;\n// DRBG\nconst u8n = (data) => new Uint8Array(data); // creates Uint8Array\nconst u8fr = (arr) => Uint8Array.from(arr); // another shortcut\n/**\n * Minimal HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n * @returns function that will call DRBG until 2nd arg returns something meaningful\n * @example\n *   const drbg = createHmacDRBG<Key>(32, 32, hmac);\n *   drbg(seed, bytesToKey); // bytesToKey must return Key or undefined\n */\nexport function createHmacDrbg(hashLen, qByteLen, hmacFn) {\n    if (typeof hashLen !== 'number' || hashLen < 2)\n        throw new Error('hashLen must be a number');\n    if (typeof qByteLen !== 'number' || qByteLen < 2)\n        throw new Error('qByteLen must be a number');\n    if (typeof hmacFn !== 'function')\n        throw new Error('hmacFn must be a function');\n    // Step B, Step C: set hashLen to 8*ceil(hlen/8)\n    let v = u8n(hashLen); // Minimal non-full-spec HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n    let k = u8n(hashLen); // Steps B and C of RFC6979 3.2: set hashLen, in our case always same\n    let i = 0; // Iterations counter, will throw when over 1000\n    const reset = () => {\n        v.fill(1);\n        k.fill(0);\n        i = 0;\n    };\n    const h = (...b) => hmacFn(k, v, ...b); // hmac(k)(v, ...values)\n    const reseed = (seed = u8n()) => {\n        // HMAC-DRBG reseed() function. Steps D-G\n        k = h(u8fr([0x00]), seed); // k = hmac(k || v || 0x00 || seed)\n        v = h(); // v = hmac(k || v)\n        if (seed.length === 0)\n            return;\n        k = h(u8fr([0x01]), seed); // k = hmac(k || v || 0x01 || seed)\n        v = h(); // v = hmac(k || v)\n    };\n    const gen = () => {\n        // HMAC-DRBG generate() function\n        if (i++ >= 1000)\n            throw new Error('drbg: tried 1000 values');\n        let len = 0;\n        const out = [];\n        while (len < qByteLen) {\n            v = h();\n            const sl = v.slice();\n            out.push(sl);\n            len += v.length;\n        }\n        return concatBytes(...out);\n    };\n    const genUntil = (seed, pred) => {\n        reset();\n        reseed(seed); // Steps D-G\n        let res = undefined; // Step H: grind until k is in [1..n-1]\n        while (!(res = pred(gen())))\n            reseed();\n        reset();\n        return res;\n    };\n    return genUntil;\n}\n// Validating curves and fields\nconst validatorFns = {\n    bigint: (val) => typeof val === 'bigint',\n    function: (val) => typeof val === 'function',\n    boolean: (val) => typeof val === 'boolean',\n    string: (val) => typeof val === 'string',\n    isSafeInteger: (val) => Number.isSafeInteger(val),\n    array: (val) => Array.isArray(val),\n    field: (val, object) => object.Fp.isValid(val),\n    hash: (val) => typeof val === 'function' && Number.isSafeInteger(val.outputLen),\n};\n// type Record<K extends string | number | symbol, T> = { [P in K]: T; }\nexport function validateObject(object, validators, optValidators = {}) {\n    const checkField = (fieldName, type, isOptional) => {\n        const checkVal = validatorFns[type];\n        if (typeof checkVal !== 'function')\n            throw new Error(`Invalid validator \"${type}\", expected function`);\n        const val = object[fieldName];\n        if (isOptional && val === undefined)\n            return;\n        if (!checkVal(val, object)) {\n            throw new Error(`Invalid param ${String(fieldName)}=${val} (${typeof val}), expected ${type}`);\n        }\n    };\n    for (const [fieldName, type] of Object.entries(validators))\n        checkField(fieldName, type, false);\n    for (const [fieldName, type] of Object.entries(optValidators))\n        checkField(fieldName, type, true);\n    return object;\n}\n// validate type tests\n// const o: { a: number; b: number; c: number } = { a: 1, b: 5, c: 6 };\n// const z0 = validateObject(o, { a: 'isSafeInteger' }, { c: 'bigint' }); // Ok!\n// // Should fail type-check\n// const z1 = validateObject(o, { a: 'tmp' }, { c: 'zz' });\n// const z2 = validateObject(o, { a: 'isSafeInteger' }, { c: 'zz' });\n// const z3 = validateObject(o, { test: 'boolean', z: 'bug' });\n// const z4 = validateObject(o, { a: 'boolean', z: 'bug' });\n//# sourceMappingURL=utils.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Utilities for modular arithmetics and finite fields\nimport { bitMask, numberToBytesBE, numberToBytesLE, bytesToNumberBE, bytesToNumberLE, ensureBytes, validateObject, } from './utils.js';\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3);\n// prettier-ignore\nconst _4n = BigInt(4), _5n = BigInt(5), _8n = BigInt(8);\n// prettier-ignore\nconst _9n = BigInt(9), _16n = BigInt(16);\n// Calculates a modulo b\nexport function mod(a, b) {\n    const result = a % b;\n    return result >= _0n ? result : b + result;\n}\n/**\n * Efficiently exponentiate num to power and do modular division.\n * Unsafe in some contexts: uses ladder, so can expose bigint bits.\n * @example\n * powMod(2n, 6n, 11n) // 64n % 11n == 9n\n */\n// TODO: use field version && remove\nexport function pow(num, power, modulo) {\n    if (modulo <= _0n || power < _0n)\n        throw new Error('Expected power/modulo > 0');\n    if (modulo === _1n)\n        return _0n;\n    let res = _1n;\n    while (power > _0n) {\n        if (power & _1n)\n            res = (res * num) % modulo;\n        num = (num * num) % modulo;\n        power >>= _1n;\n    }\n    return res;\n}\n// Does x ^ (2 ^ power) mod p. pow2(30, 4) == 30 ^ (2 ^ 4)\nexport function pow2(x, power, modulo) {\n    let res = x;\n    while (power-- > _0n) {\n        res *= res;\n        res %= modulo;\n    }\n    return res;\n}\n// Inverses number over modulo\nexport function invert(number, modulo) {\n    if (number === _0n || modulo <= _0n) {\n        throw new Error(`invert: expected positive integers, got n=${number} mod=${modulo}`);\n    }\n    // Eucledian GCD https://brilliant.org/wiki/extended-euclidean-algorithm/\n    // Fermat's little theorem \"CT-like\" version inv(n) = n^(m-2) mod m is 30x slower.\n    let a = mod(number, modulo);\n    let b = modulo;\n    // prettier-ignore\n    let x = _0n, y = _1n, u = _1n, v = _0n;\n    while (a !== _0n) {\n        // JIT applies optimization if those two lines follow each other\n        const q = b / a;\n        const r = b % a;\n        const m = x - u * q;\n        const n = y - v * q;\n        // prettier-ignore\n        b = a, a = r, x = u, y = v, u = m, v = n;\n    }\n    const gcd = b;\n    if (gcd !== _1n)\n        throw new Error('invert: does not exist');\n    return mod(x, modulo);\n}\n// Tonelli-Shanks algorithm\n// Paper 1: https://eprint.iacr.org/2012/685.pdf (page 12)\n// Paper 2: Square Roots from 1; 24, 51, 10 to Dan Shanks\nexport function tonelliShanks(P) {\n    // Legendre constant: used to calculate Legendre symbol (a | p),\n    // which denotes the value of a^((p-1)/2) (mod p).\n    // (a | p) ≡ 1    if a is a square (mod p)\n    // (a | p) ≡ -1   if a is not a square (mod p)\n    // (a | p) ≡ 0    if a ≡ 0 (mod p)\n    const legendreC = (P - _1n) / _2n;\n    let Q, S, Z;\n    // Step 1: By factoring out powers of 2 from p - 1,\n    // find q and s such that p - 1 = q*(2^s) with q odd\n    for (Q = P - _1n, S = 0; Q % _2n === _0n; Q /= _2n, S++)\n        ;\n    // Step 2: Select a non-square z such that (z | p) ≡ -1 and set c ≡ zq\n    for (Z = _2n; Z < P && pow(Z, legendreC, P) !== P - _1n; Z++)\n        ;\n    // Fast-path\n    if (S === 1) {\n        const p1div4 = (P + _1n) / _4n;\n        return function tonelliFast(Fp, n) {\n            const root = Fp.pow(n, p1div4);\n            if (!Fp.eql(Fp.sqr(root), n))\n                throw new Error('Cannot find square root');\n            return root;\n        };\n    }\n    // Slow-path\n    const Q1div2 = (Q + _1n) / _2n;\n    return function tonelliSlow(Fp, n) {\n        // Step 0: Check that n is indeed a square: (n | p) should not be ≡ -1\n        if (Fp.pow(n, legendreC) === Fp.neg(Fp.ONE))\n            throw new Error('Cannot find square root');\n        let r = S;\n        // TODO: will fail at Fp2/etc\n        let g = Fp.pow(Fp.mul(Fp.ONE, Z), Q); // will update both x and b\n        let x = Fp.pow(n, Q1div2); // first guess at the square root\n        let b = Fp.pow(n, Q); // first guess at the fudge factor\n        while (!Fp.eql(b, Fp.ONE)) {\n            if (Fp.eql(b, Fp.ZERO))\n                return Fp.ZERO; // https://en.wikipedia.org/wiki/Tonelli%E2%80%93Shanks_algorithm (4. If t = 0, return r = 0)\n            // Find m such b^(2^m)==1\n            let m = 1;\n            for (let t2 = Fp.sqr(b); m < r; m++) {\n                if (Fp.eql(t2, Fp.ONE))\n                    break;\n                t2 = Fp.sqr(t2); // t2 *= t2\n            }\n            // NOTE: r-m-1 can be bigger than 32, need to convert to bigint before shift, otherwise there will be overflow\n            const ge = Fp.pow(g, _1n << BigInt(r - m - 1)); // ge = 2^(r-m-1)\n            g = Fp.sqr(ge); // g = ge * ge\n            x = Fp.mul(x, ge); // x *= ge\n            b = Fp.mul(b, g); // b *= g\n            r = m;\n        }\n        return x;\n    };\n}\nexport function FpSqrt(P) {\n    // NOTE: different algorithms can give different roots, it is up to user to decide which one they want.\n    // For example there is FpSqrtOdd/FpSqrtEven to choice root based on oddness (used for hash-to-curve).\n    // P ≡ 3 (mod 4)\n    // √n = n^((P+1)/4)\n    if (P % _4n === _3n) {\n        // Not all roots possible!\n        // const ORDER =\n        //   0x1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffaaabn;\n        // const NUM = 72057594037927816n;\n        const p1div4 = (P + _1n) / _4n;\n        return function sqrt3mod4(Fp, n) {\n            const root = Fp.pow(n, p1div4);\n            // Throw if root**2 != n\n            if (!Fp.eql(Fp.sqr(root), n))\n                throw new Error('Cannot find square root');\n            return root;\n        };\n    }\n    // Atkin algorithm for q ≡ 5 (mod 8), https://eprint.iacr.org/2012/685.pdf (page 10)\n    if (P % _8n === _5n) {\n        const c1 = (P - _5n) / _8n;\n        return function sqrt5mod8(Fp, n) {\n            const n2 = Fp.mul(n, _2n);\n            const v = Fp.pow(n2, c1);\n            const nv = Fp.mul(n, v);\n            const i = Fp.mul(Fp.mul(nv, _2n), v);\n            const root = Fp.mul(nv, Fp.sub(i, Fp.ONE));\n            if (!Fp.eql(Fp.sqr(root), n))\n                throw new Error('Cannot find square root');\n            return root;\n        };\n    }\n    // P ≡ 9 (mod 16)\n    if (P % _16n === _9n) {\n        // NOTE: tonelli is too slow for bls-Fp2 calculations even on start\n        // Means we cannot use sqrt for constants at all!\n        //\n        // const c1 = Fp.sqrt(Fp.negate(Fp.ONE)); //  1. c1 = sqrt(-1) in F, i.e., (c1^2) == -1 in F\n        // const c2 = Fp.sqrt(c1);                //  2. c2 = sqrt(c1) in F, i.e., (c2^2) == c1 in F\n        // const c3 = Fp.sqrt(Fp.negate(c1));     //  3. c3 = sqrt(-c1) in F, i.e., (c3^2) == -c1 in F\n        // const c4 = (P + _7n) / _16n;           //  4. c4 = (q + 7) / 16        # Integer arithmetic\n        // sqrt = (x) => {\n        //   let tv1 = Fp.pow(x, c4);             //  1. tv1 = x^c4\n        //   let tv2 = Fp.mul(c1, tv1);           //  2. tv2 = c1 * tv1\n        //   const tv3 = Fp.mul(c2, tv1);         //  3. tv3 = c2 * tv1\n        //   let tv4 = Fp.mul(c3, tv1);           //  4. tv4 = c3 * tv1\n        //   const e1 = Fp.equals(Fp.square(tv2), x); //  5.  e1 = (tv2^2) == x\n        //   const e2 = Fp.equals(Fp.square(tv3), x); //  6.  e2 = (tv3^2) == x\n        //   tv1 = Fp.cmov(tv1, tv2, e1); //  7. tv1 = CMOV(tv1, tv2, e1)  # Select tv2 if (tv2^2) == x\n        //   tv2 = Fp.cmov(tv4, tv3, e2); //  8. tv2 = CMOV(tv4, tv3, e2)  # Select tv3 if (tv3^2) == x\n        //   const e3 = Fp.equals(Fp.square(tv2), x); //  9.  e3 = (tv2^2) == x\n        //   return Fp.cmov(tv1, tv2, e3); //  10.  z = CMOV(tv1, tv2, e3)  # Select the sqrt from tv1 and tv2\n        // }\n    }\n    // Other cases: Tonelli-Shanks algorithm\n    return tonelliShanks(P);\n}\n// Little-endian check for first LE bit (last BE bit);\nexport const isNegativeLE = (num, modulo) => (mod(num, modulo) & _1n) === _1n;\n// prettier-ignore\nconst FIELD_FIELDS = [\n    'create', 'isValid', 'is0', 'neg', 'inv', 'sqrt', 'sqr',\n    'eql', 'add', 'sub', 'mul', 'pow', 'div',\n    'addN', 'subN', 'mulN', 'sqrN'\n];\nexport function validateField(field) {\n    const initial = {\n        ORDER: 'bigint',\n        MASK: 'bigint',\n        BYTES: 'isSafeInteger',\n        BITS: 'isSafeInteger',\n    };\n    const opts = FIELD_FIELDS.reduce((map, val) => {\n        map[val] = 'function';\n        return map;\n    }, initial);\n    return validateObject(field, opts);\n}\n// Generic field functions\nexport function FpPow(f, num, power) {\n    // Should have same speed as pow for bigints\n    // TODO: benchmark!\n    if (power < _0n)\n        throw new Error('Expected power > 0');\n    if (power === _0n)\n        return f.ONE;\n    if (power === _1n)\n        return num;\n    let p = f.ONE;\n    let d = num;\n    while (power > _0n) {\n        if (power & _1n)\n            p = f.mul(p, d);\n        d = f.sqr(d);\n        power >>= _1n;\n    }\n    return p;\n}\n// 0 is non-invertible: non-batched version will throw on 0\nexport function FpInvertBatch(f, nums) {\n    const tmp = new Array(nums.length);\n    // Walk from first to last, multiply them by each other MOD p\n    const lastMultiplied = nums.reduce((acc, num, i) => {\n        if (f.is0(num))\n            return acc;\n        tmp[i] = acc;\n        return f.mul(acc, num);\n    }, f.ONE);\n    // Invert last element\n    const inverted = f.inv(lastMultiplied);\n    // Walk from last to first, multiply them by inverted each other MOD p\n    nums.reduceRight((acc, num, i) => {\n        if (f.is0(num))\n            return acc;\n        tmp[i] = f.mul(acc, tmp[i]);\n        return f.mul(acc, num);\n    }, inverted);\n    return tmp;\n}\nexport function FpDiv(f, lhs, rhs) {\n    return f.mul(lhs, typeof rhs === 'bigint' ? invert(rhs, f.ORDER) : f.inv(rhs));\n}\n// This function returns True whenever the value x is a square in the field F.\nexport function FpIsSquare(f) {\n    const legendreConst = (f.ORDER - _1n) / _2n; // Integer arithmetic\n    return (x) => {\n        const p = f.pow(x, legendreConst);\n        return f.eql(p, f.ZERO) || f.eql(p, f.ONE);\n    };\n}\n// CURVE.n lengths\nexport function nLength(n, nBitLength) {\n    // Bit size, byte size of CURVE.n\n    const _nBitLength = nBitLength !== undefined ? nBitLength : n.toString(2).length;\n    const nByteLength = Math.ceil(_nBitLength / 8);\n    return { nBitLength: _nBitLength, nByteLength };\n}\n/**\n * Initializes a galois field over prime. Non-primes are not supported for now.\n * Do not init in loop: slow. Very fragile: always run a benchmark on change.\n * Major performance gains:\n * a) non-normalized operations like mulN instead of mul\n * b) `Object.freeze`\n * c) Same object shape: never add or remove keys\n * @param ORDER prime positive bigint\n * @param bitLen how many bits the field consumes\n * @param isLE (def: false) if encoding / decoding should be in little-endian\n * @param redef optional faster redefinitions of sqrt and other methods\n */\nexport function Field(ORDER, bitLen, isLE = false, redef = {}) {\n    if (ORDER <= _0n)\n        throw new Error(`Expected Fp ORDER > 0, got ${ORDER}`);\n    const { nBitLength: BITS, nByteLength: BYTES } = nLength(ORDER, bitLen);\n    if (BYTES > 2048)\n        throw new Error('Field lengths over 2048 bytes are not supported');\n    const sqrtP = FpSqrt(ORDER);\n    const f = Object.freeze({\n        ORDER,\n        BITS,\n        BYTES,\n        MASK: bitMask(BITS),\n        ZERO: _0n,\n        ONE: _1n,\n        create: (num) => mod(num, ORDER),\n        isValid: (num) => {\n            if (typeof num !== 'bigint')\n                throw new Error(`Invalid field element: expected bigint, got ${typeof num}`);\n            return _0n <= num && num < ORDER; // 0 is valid element, but it's not invertible\n        },\n        is0: (num) => num === _0n,\n        isOdd: (num) => (num & _1n) === _1n,\n        neg: (num) => mod(-num, ORDER),\n        eql: (lhs, rhs) => lhs === rhs,\n        sqr: (num) => mod(num * num, ORDER),\n        add: (lhs, rhs) => mod(lhs + rhs, ORDER),\n        sub: (lhs, rhs) => mod(lhs - rhs, ORDER),\n        mul: (lhs, rhs) => mod(lhs * rhs, ORDER),\n        pow: (num, power) => FpPow(f, num, power),\n        div: (lhs, rhs) => mod(lhs * invert(rhs, ORDER), ORDER),\n        // Same as above, but doesn't normalize\n        sqrN: (num) => num * num,\n        addN: (lhs, rhs) => lhs + rhs,\n        subN: (lhs, rhs) => lhs - rhs,\n        mulN: (lhs, rhs) => lhs * rhs,\n        inv: (num) => invert(num, ORDER),\n        sqrt: redef.sqrt || ((n) => sqrtP(f, n)),\n        invertBatch: (lst) => FpInvertBatch(f, lst),\n        // TODO: do we really need constant cmov?\n        // We don't have const-time bigints anyway, so probably will be not very useful\n        cmov: (a, b, c) => (c ? b : a),\n        toBytes: (num) => (isLE ? numberToBytesLE(num, BYTES) : numberToBytesBE(num, BYTES)),\n        fromBytes: (bytes) => {\n            if (bytes.length !== BYTES)\n                throw new Error(`Fp.fromBytes: expected ${BYTES}, got ${bytes.length}`);\n            return isLE ? bytesToNumberLE(bytes) : bytesToNumberBE(bytes);\n        },\n    });\n    return Object.freeze(f);\n}\nexport function FpSqrtOdd(Fp, elm) {\n    if (!Fp.isOdd)\n        throw new Error(`Field doesn't have isOdd`);\n    const root = Fp.sqrt(elm);\n    return Fp.isOdd(root) ? root : Fp.neg(root);\n}\nexport function FpSqrtEven(Fp, elm) {\n    if (!Fp.isOdd)\n        throw new Error(`Field doesn't have isOdd`);\n    const root = Fp.sqrt(elm);\n    return Fp.isOdd(root) ? Fp.neg(root) : root;\n}\n/**\n * FIPS 186 B.4.1-compliant \"constant-time\" private key generation utility.\n * Can take (n+8) or more bytes of uniform input e.g. from CSPRNG or KDF\n * and convert them into private scalar, with the modulo bias being neglible.\n * Needs at least 40 bytes of input for 32-byte private key.\n * https://research.kudelskisecurity.com/2020/07/28/the-definitive-guide-to-modulo-bias-and-how-to-avoid-it/\n * @param hash hash output from SHA3 or a similar function\n * @returns valid private scalar\n */\nexport function hashToPrivateScalar(hash, groupOrder, isLE = false) {\n    hash = ensureBytes('privateHash', hash);\n    const hashLen = hash.length;\n    const minLen = nLength(groupOrder).nByteLength + 8;\n    if (minLen < 24 || hashLen < minLen || hashLen > 1024)\n        throw new Error(`hashToPrivateScalar: expected ${minLen}-1024 bytes of input, got ${hashLen}`);\n    const num = isLE ? bytesToNumberLE(hash) : bytesToNumberBE(hash);\n    return mod(num, groupOrder - _1n) + _1n;\n}\n//# sourceMappingURL=modular.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Abelian group utilities\nimport { validateField, nLength } from './modular.js';\nimport { validateObject } from './utils.js';\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\n// Elliptic curve multiplication of Point by scalar. Fragile.\n// Scalars should always be less than curve order: this should be checked inside of a curve itself.\n// Creates precomputation tables for fast multiplication:\n// - private scalar is split by fixed size windows of W bits\n// - every window point is collected from window's table & added to accumulator\n// - since windows are different, same point inside tables won't be accessed more than once per calc\n// - each multiplication is 'Math.ceil(CURVE_ORDER / 𝑊) + 1' point additions (fixed for any scalar)\n// - +1 window is neccessary for wNAF\n// - wNAF reduces table size: 2x less memory + 2x faster generation, but 10% slower multiplication\n// TODO: Research returning 2d JS array of windows, instead of a single window. This would allow\n// windows to be in different memory locations\nexport function wNAF(c, bits) {\n    const constTimeNegate = (condition, item) => {\n        const neg = item.negate();\n        return condition ? neg : item;\n    };\n    const opts = (W) => {\n        const windows = Math.ceil(bits / W) + 1; // +1, because\n        const windowSize = 2 ** (W - 1); // -1 because we skip zero\n        return { windows, windowSize };\n    };\n    return {\n        constTimeNegate,\n        // non-const time multiplication ladder\n        unsafeLadder(elm, n) {\n            let p = c.ZERO;\n            let d = elm;\n            while (n > _0n) {\n                if (n & _1n)\n                    p = p.add(d);\n                d = d.double();\n                n >>= _1n;\n            }\n            return p;\n        },\n        /**\n         * Creates a wNAF precomputation window. Used for caching.\n         * Default window size is set by `utils.precompute()` and is equal to 8.\n         * Number of precomputed points depends on the curve size:\n         * 2^(𝑊−1) * (Math.ceil(𝑛 / 𝑊) + 1), where:\n         * - 𝑊 is the window size\n         * - 𝑛 is the bitlength of the curve order.\n         * For a 256-bit curve and window size 8, the number of precomputed points is 128 * 33 = 4224.\n         * @returns precomputed point tables flattened to a single array\n         */\n        precomputeWindow(elm, W) {\n            const { windows, windowSize } = opts(W);\n            const points = [];\n            let p = elm;\n            let base = p;\n            for (let window = 0; window < windows; window++) {\n                base = p;\n                points.push(base);\n                // =1, because we skip zero\n                for (let i = 1; i < windowSize; i++) {\n                    base = base.add(p);\n                    points.push(base);\n                }\n                p = base.double();\n            }\n            return points;\n        },\n        /**\n         * Implements ec multiplication using precomputed tables and w-ary non-adjacent form.\n         * @param W window size\n         * @param precomputes precomputed tables\n         * @param n scalar (we don't check here, but should be less than curve order)\n         * @returns real and fake (for const-time) points\n         */\n        wNAF(W, precomputes, n) {\n            // TODO: maybe check that scalar is less than group order? wNAF behavious is undefined otherwise\n            // But need to carefully remove other checks before wNAF. ORDER == bits here\n            const { windows, windowSize } = opts(W);\n            let p = c.ZERO;\n            let f = c.BASE;\n            const mask = BigInt(2 ** W - 1); // Create mask with W ones: 0b1111 for W=4 etc.\n            const maxNumber = 2 ** W;\n            const shiftBy = BigInt(W);\n            for (let window = 0; window < windows; window++) {\n                const offset = window * windowSize;\n                // Extract W bits.\n                let wbits = Number(n & mask);\n                // Shift number by W bits.\n                n >>= shiftBy;\n                // If the bits are bigger than max size, we'll split those.\n                // +224 => 256 - 32\n                if (wbits > windowSize) {\n                    wbits -= maxNumber;\n                    n += _1n;\n                }\n                // This code was first written with assumption that 'f' and 'p' will never be infinity point:\n                // since each addition is multiplied by 2 ** W, it cannot cancel each other. However,\n                // there is negate now: it is possible that negated element from low value\n                // would be the same as high element, which will create carry into next window.\n                // It's not obvious how this can fail, but still worth investigating later.\n                // Check if we're onto Zero point.\n                // Add random point inside current window to f.\n                const offset1 = offset;\n                const offset2 = offset + Math.abs(wbits) - 1; // -1 because we skip zero\n                const cond1 = window % 2 !== 0;\n                const cond2 = wbits < 0;\n                if (wbits === 0) {\n                    // The most important part for const-time getPublicKey\n                    f = f.add(constTimeNegate(cond1, precomputes[offset1]));\n                }\n                else {\n                    p = p.add(constTimeNegate(cond2, precomputes[offset2]));\n                }\n            }\n            // JIT-compiler should not eliminate f here, since it will later be used in normalizeZ()\n            // Even if the variable is still unused, there are some checks which will\n            // throw an exception, so compiler needs to prove they won't happen, which is hard.\n            // At this point there is a way to F be infinity-point even if p is not,\n            // which makes it less const-time: around 1 bigint multiply.\n            return { p, f };\n        },\n        wNAFCached(P, precomputesMap, n, transform) {\n            // @ts-ignore\n            const W = P._WINDOW_SIZE || 1;\n            // Calculate precomputes on a first run, reuse them after\n            let comp = precomputesMap.get(P);\n            if (!comp) {\n                comp = this.precomputeWindow(P, W);\n                if (W !== 1) {\n                    precomputesMap.set(P, transform(comp));\n                }\n            }\n            return this.wNAF(W, comp, n);\n        },\n    };\n}\nexport function validateBasic(curve) {\n    validateField(curve.Fp);\n    validateObject(curve, {\n        n: 'bigint',\n        h: 'bigint',\n        Gx: 'field',\n        Gy: 'field',\n    }, {\n        nBitLength: 'isSafeInteger',\n        nByteLength: 'isSafeInteger',\n    });\n    // Set defaults\n    return Object.freeze({\n        ...nLength(curve.n, curve.nBitLength),\n        ...curve,\n        ...{ p: curve.Fp.ORDER },\n    });\n}\n//# sourceMappingURL=curve.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Twisted Edwards curve. The formula is: ax² + y² = 1 + dx²y²\nimport { mod } from './modular.js';\nimport * as ut from './utils.js';\nimport { ensureBytes } from './utils.js';\nimport { wNAF, validateBasic } from './curve.js';\n// Be friendly to bad ECMAScript parsers by not using bigint literals\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _8n = BigInt(8);\n// verification rule is either zip215 or rfc8032 / nist186-5. Consult fromHex:\nconst VERIFY_DEFAULT = { zip215: true };\nfunction validateOpts(curve) {\n    const opts = validateBasic(curve);\n    ut.validateObject(curve, {\n        hash: 'function',\n        a: 'bigint',\n        d: 'bigint',\n        randomBytes: 'function',\n    }, {\n        adjustScalarBytes: 'function',\n        domain: 'function',\n        uvRatio: 'function',\n        mapToCurve: 'function',\n    });\n    // Set defaults\n    return Object.freeze({ ...opts });\n}\n// It is not generic twisted curve for now, but ed25519/ed448 generic implementation\nexport function twistedEdwards(curveDef) {\n    const CURVE = validateOpts(curveDef);\n    const { Fp, n: CURVE_ORDER, prehash: prehash, hash: cHash, randomBytes, nByteLength, h: cofactor, } = CURVE;\n    const MASK = _2n ** BigInt(nByteLength * 8);\n    const modP = Fp.create; // Function overrides\n    // sqrt(u/v)\n    const uvRatio = CURVE.uvRatio ||\n        ((u, v) => {\n            try {\n                return { isValid: true, value: Fp.sqrt(u * Fp.inv(v)) };\n            }\n            catch (e) {\n                return { isValid: false, value: _0n };\n            }\n        });\n    const adjustScalarBytes = CURVE.adjustScalarBytes || ((bytes) => bytes); // NOOP\n    const domain = CURVE.domain ||\n        ((data, ctx, phflag) => {\n            if (ctx.length || phflag)\n                throw new Error('Contexts/pre-hash are not supported');\n            return data;\n        }); // NOOP\n    const inBig = (n) => typeof n === 'bigint' && _0n < n; // n in [1..]\n    const inRange = (n, max) => inBig(n) && inBig(max) && n < max; // n in [1..max-1]\n    const in0MaskRange = (n) => n === _0n || inRange(n, MASK); // n in [0..MASK-1]\n    function assertInRange(n, max) {\n        // n in [1..max-1]\n        if (inRange(n, max))\n            return n;\n        throw new Error(`Expected valid scalar < ${max}, got ${typeof n} ${n}`);\n    }\n    function assertGE0(n) {\n        // n in [0..CURVE_ORDER-1]\n        return n === _0n ? n : assertInRange(n, CURVE_ORDER); // GE = prime subgroup, not full group\n    }\n    const pointPrecomputes = new Map();\n    function isPoint(other) {\n        if (!(other instanceof Point))\n            throw new Error('ExtendedPoint expected');\n    }\n    // Extended Point works in extended coordinates: (x, y, z, t) ∋ (x=x/z, y=y/z, t=xy).\n    // https://en.wikipedia.org/wiki/Twisted_Edwards_curve#Extended_coordinates\n    class Point {\n        constructor(ex, ey, ez, et) {\n            this.ex = ex;\n            this.ey = ey;\n            this.ez = ez;\n            this.et = et;\n            if (!in0MaskRange(ex))\n                throw new Error('x required');\n            if (!in0MaskRange(ey))\n                throw new Error('y required');\n            if (!in0MaskRange(ez))\n                throw new Error('z required');\n            if (!in0MaskRange(et))\n                throw new Error('t required');\n        }\n        get x() {\n            return this.toAffine().x;\n        }\n        get y() {\n            return this.toAffine().y;\n        }\n        static fromAffine(p) {\n            if (p instanceof Point)\n                throw new Error('extended point not allowed');\n            const { x, y } = p || {};\n            if (!in0MaskRange(x) || !in0MaskRange(y))\n                throw new Error('invalid affine point');\n            return new Point(x, y, _1n, modP(x * y));\n        }\n        static normalizeZ(points) {\n            const toInv = Fp.invertBatch(points.map((p) => p.ez));\n            return points.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n        }\n        // \"Private method\", don't use it directly\n        _setWindowSize(windowSize) {\n            this._WINDOW_SIZE = windowSize;\n            pointPrecomputes.delete(this);\n        }\n        // Not required for fromHex(), which always creates valid points.\n        // Could be useful for fromAffine().\n        assertValidity() {\n            const { a, d } = CURVE;\n            if (this.is0())\n                throw new Error('bad point: ZERO'); // TODO: optimize, with vars below?\n            // Equation in affine coordinates: ax² + y² = 1 + dx²y²\n            // Equation in projective coordinates (X/Z, Y/Z, Z):  (aX² + Y²)Z² = Z⁴ + dX²Y²\n            const { ex: X, ey: Y, ez: Z, et: T } = this;\n            const X2 = modP(X * X); // X²\n            const Y2 = modP(Y * Y); // Y²\n            const Z2 = modP(Z * Z); // Z²\n            const Z4 = modP(Z2 * Z2); // Z⁴\n            const aX2 = modP(X2 * a); // aX²\n            const left = modP(Z2 * modP(aX2 + Y2)); // (aX² + Y²)Z²\n            const right = modP(Z4 + modP(d * modP(X2 * Y2))); // Z⁴ + dX²Y²\n            if (left !== right)\n                throw new Error('bad point: equation left != right (1)');\n            // In Extended coordinates we also have T, which is x*y=T/Z: check X*Y == Z*T\n            const XY = modP(X * Y);\n            const ZT = modP(Z * T);\n            if (XY !== ZT)\n                throw new Error('bad point: equation left != right (2)');\n        }\n        // Compare one point to another.\n        equals(other) {\n            isPoint(other);\n            const { ex: X1, ey: Y1, ez: Z1 } = this;\n            const { ex: X2, ey: Y2, ez: Z2 } = other;\n            const X1Z2 = modP(X1 * Z2);\n            const X2Z1 = modP(X2 * Z1);\n            const Y1Z2 = modP(Y1 * Z2);\n            const Y2Z1 = modP(Y2 * Z1);\n            return X1Z2 === X2Z1 && Y1Z2 === Y2Z1;\n        }\n        is0() {\n            return this.equals(Point.ZERO);\n        }\n        negate() {\n            // Flips point sign to a negative one (-x, y in affine coords)\n            return new Point(modP(-this.ex), this.ey, this.ez, modP(-this.et));\n        }\n        // Fast algo for doubling Extended Point.\n        // https://hyperelliptic.org/EFD/g1p/auto-twisted-extended.html#doubling-dbl-2008-hwcd\n        // Cost: 4M + 4S + 1*a + 6add + 1*2.\n        double() {\n            const { a } = CURVE;\n            const { ex: X1, ey: Y1, ez: Z1 } = this;\n            const A = modP(X1 * X1); // A = X12\n            const B = modP(Y1 * Y1); // B = Y12\n            const C = modP(_2n * modP(Z1 * Z1)); // C = 2*Z12\n            const D = modP(a * A); // D = a*A\n            const x1y1 = X1 + Y1;\n            const E = modP(modP(x1y1 * x1y1) - A - B); // E = (X1+Y1)2-A-B\n            const G = D + B; // G = D+B\n            const F = G - C; // F = G-C\n            const H = D - B; // H = D-B\n            const X3 = modP(E * F); // X3 = E*F\n            const Y3 = modP(G * H); // Y3 = G*H\n            const T3 = modP(E * H); // T3 = E*H\n            const Z3 = modP(F * G); // Z3 = F*G\n            return new Point(X3, Y3, Z3, T3);\n        }\n        // Fast algo for adding 2 Extended Points.\n        // https://hyperelliptic.org/EFD/g1p/auto-twisted-extended.html#addition-add-2008-hwcd\n        // Cost: 9M + 1*a + 1*d + 7add.\n        add(other) {\n            isPoint(other);\n            const { a, d } = CURVE;\n            const { ex: X1, ey: Y1, ez: Z1, et: T1 } = this;\n            const { ex: X2, ey: Y2, ez: Z2, et: T2 } = other;\n            // Faster algo for adding 2 Extended Points when curve's a=-1.\n            // http://hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html#addition-add-2008-hwcd-4\n            // Cost: 8M + 8add + 2*2.\n            // Note: It does not check whether the `other` point is valid.\n            if (a === BigInt(-1)) {\n                const A = modP((Y1 - X1) * (Y2 + X2));\n                const B = modP((Y1 + X1) * (Y2 - X2));\n                const F = modP(B - A);\n                if (F === _0n)\n                    return this.double(); // Same point. Tests say it doesn't affect timing\n                const C = modP(Z1 * _2n * T2);\n                const D = modP(T1 * _2n * Z2);\n                const E = D + C;\n                const G = B + A;\n                const H = D - C;\n                const X3 = modP(E * F);\n                const Y3 = modP(G * H);\n                const T3 = modP(E * H);\n                const Z3 = modP(F * G);\n                return new Point(X3, Y3, Z3, T3);\n            }\n            const A = modP(X1 * X2); // A = X1*X2\n            const B = modP(Y1 * Y2); // B = Y1*Y2\n            const C = modP(T1 * d * T2); // C = T1*d*T2\n            const D = modP(Z1 * Z2); // D = Z1*Z2\n            const E = modP((X1 + Y1) * (X2 + Y2) - A - B); // E = (X1+Y1)*(X2+Y2)-A-B\n            const F = D - C; // F = D-C\n            const G = D + C; // G = D+C\n            const H = modP(B - a * A); // H = B-a*A\n            const X3 = modP(E * F); // X3 = E*F\n            const Y3 = modP(G * H); // Y3 = G*H\n            const T3 = modP(E * H); // T3 = E*H\n            const Z3 = modP(F * G); // Z3 = F*G\n            return new Point(X3, Y3, Z3, T3);\n        }\n        subtract(other) {\n            return this.add(other.negate());\n        }\n        wNAF(n) {\n            return wnaf.wNAFCached(this, pointPrecomputes, n, Point.normalizeZ);\n        }\n        // Constant-time multiplication.\n        multiply(scalar) {\n            const { p, f } = this.wNAF(assertInRange(scalar, CURVE_ORDER));\n            return Point.normalizeZ([p, f])[0];\n        }\n        // Non-constant-time multiplication. Uses double-and-add algorithm.\n        // It's faster, but should only be used when you don't care about\n        // an exposed private key e.g. sig verification.\n        // Does NOT allow scalars higher than CURVE.n.\n        multiplyUnsafe(scalar) {\n            let n = assertGE0(scalar); // 0 <= scalar < CURVE.n\n            if (n === _0n)\n                return I;\n            if (this.equals(I) || n === _1n)\n                return this;\n            if (this.equals(G))\n                return this.wNAF(n).p;\n            return wnaf.unsafeLadder(this, n);\n        }\n        // Checks if point is of small order.\n        // If you add something to small order point, you will have \"dirty\"\n        // point with torsion component.\n        // Multiplies point by cofactor and checks if the result is 0.\n        isSmallOrder() {\n            return this.multiplyUnsafe(cofactor).is0();\n        }\n        // Multiplies point by curve order and checks if the result is 0.\n        // Returns `false` is the point is dirty.\n        isTorsionFree() {\n            return wnaf.unsafeLadder(this, CURVE_ORDER).is0();\n        }\n        // Converts Extended point to default (x, y) coordinates.\n        // Can accept precomputed Z^-1 - for example, from invertBatch.\n        toAffine(iz) {\n            const { ex: x, ey: y, ez: z } = this;\n            const is0 = this.is0();\n            if (iz == null)\n                iz = is0 ? _8n : Fp.inv(z); // 8 was chosen arbitrarily\n            const ax = modP(x * iz);\n            const ay = modP(y * iz);\n            const zz = modP(z * iz);\n            if (is0)\n                return { x: _0n, y: _1n };\n            if (zz !== _1n)\n                throw new Error('invZ was invalid');\n            return { x: ax, y: ay };\n        }\n        clearCofactor() {\n            const { h: cofactor } = CURVE;\n            if (cofactor === _1n)\n                return this;\n            return this.multiplyUnsafe(cofactor);\n        }\n        // Converts hash string or Uint8Array to Point.\n        // Uses algo from RFC8032 5.1.3.\n        static fromHex(hex, zip215 = false) {\n            const { d, a } = CURVE;\n            const len = Fp.BYTES;\n            hex = ensureBytes('pointHex', hex, len); // copy hex to a new array\n            const normed = hex.slice(); // copy again, we'll manipulate it\n            const lastByte = hex[len - 1]; // select last byte\n            normed[len - 1] = lastByte & ~0x80; // clear last bit\n            const y = ut.bytesToNumberLE(normed);\n            if (y === _0n) {\n                // y=0 is allowed\n            }\n            else {\n                // RFC8032 prohibits >= p, but ZIP215 doesn't\n                if (zip215)\n                    assertInRange(y, MASK); // zip215=true [1..P-1] (2^255-19-1 for ed25519)\n                else\n                    assertInRange(y, Fp.ORDER); // zip215=false [1..MASK-1] (2^256-1 for ed25519)\n            }\n            // Ed25519: x² = (y²-1)/(dy²+1) mod p. Ed448: x² = (y²-1)/(dy²-1) mod p. Generic case:\n            // ax²+y²=1+dx²y² => y²-1=dx²y²-ax² => y²-1=x²(dy²-a) => x²=(y²-1)/(dy²-a)\n            const y2 = modP(y * y); // denominator is always non-0 mod p.\n            const u = modP(y2 - _1n); // u = y² - 1\n            const v = modP(d * y2 - a); // v = d y² + 1.\n            let { isValid, value: x } = uvRatio(u, v); // √(u/v)\n            if (!isValid)\n                throw new Error('Point.fromHex: invalid y coordinate');\n            const isXOdd = (x & _1n) === _1n; // There are 2 square roots. Use x_0 bit to select proper\n            const isLastByteOdd = (lastByte & 0x80) !== 0; // if x=0 and x_0 = 1, fail\n            if (isLastByteOdd !== isXOdd)\n                x = modP(-x); // if x_0 != x mod 2, set x = p-x\n            return Point.fromAffine({ x, y });\n        }\n        static fromPrivateKey(privKey) {\n            return getExtendedPublicKey(privKey).point;\n        }\n        toRawBytes() {\n            const { x, y } = this.toAffine();\n            const bytes = ut.numberToBytesLE(y, Fp.BYTES); // each y has 2 x values (x, -y)\n            bytes[bytes.length - 1] |= x & _1n ? 0x80 : 0; // when compressing, it's enough to store y\n            return bytes; // and use the last byte to encode sign of x\n        }\n        toHex() {\n            return ut.bytesToHex(this.toRawBytes()); // Same as toRawBytes, but returns string.\n        }\n    }\n    Point.BASE = new Point(CURVE.Gx, CURVE.Gy, _1n, modP(CURVE.Gx * CURVE.Gy));\n    Point.ZERO = new Point(_0n, _1n, _1n, _0n); // 0, 1, 1, 0\n    const { BASE: G, ZERO: I } = Point;\n    const wnaf = wNAF(Point, nByteLength * 8);\n    function modN(a) {\n        return mod(a, CURVE_ORDER);\n    }\n    // Little-endian SHA512 with modulo n\n    function modN_LE(hash) {\n        return modN(ut.bytesToNumberLE(hash));\n    }\n    /** Convenience method that creates public key and other stuff. RFC8032 5.1.5 */\n    function getExtendedPublicKey(key) {\n        const len = nByteLength;\n        key = ensureBytes('private key', key, len);\n        // Hash private key with curve's hash function to produce uniformingly random input\n        // Check byte lengths: ensure(64, h(ensure(32, key)))\n        const hashed = ensureBytes('hashed private key', cHash(key), 2 * len);\n        const head = adjustScalarBytes(hashed.slice(0, len)); // clear first half bits, produce FE\n        const prefix = hashed.slice(len, 2 * len); // second half is called key prefix (5.1.6)\n        const scalar = modN_LE(head); // The actual private scalar\n        const point = G.multiply(scalar); // Point on Edwards curve aka public key\n        const pointBytes = point.toRawBytes(); // Uint8Array representation\n        return { head, prefix, scalar, point, pointBytes };\n    }\n    // Calculates EdDSA pub key. RFC8032 5.1.5. Privkey is hashed. Use first half with 3 bits cleared\n    function getPublicKey(privKey) {\n        return getExtendedPublicKey(privKey).pointBytes;\n    }\n    // int('LE', SHA512(dom2(F, C) || msgs)) mod N\n    function hashDomainToScalar(context = new Uint8Array(), ...msgs) {\n        const msg = ut.concatBytes(...msgs);\n        return modN_LE(cHash(domain(msg, ensureBytes('context', context), !!prehash)));\n    }\n    /** Signs message with privateKey. RFC8032 5.1.6 */\n    function sign(msg, privKey, options = {}) {\n        msg = ensureBytes('message', msg);\n        if (prehash)\n            msg = prehash(msg); // for ed25519ph etc.\n        const { prefix, scalar, pointBytes } = getExtendedPublicKey(privKey);\n        const r = hashDomainToScalar(options.context, prefix, msg); // r = dom2(F, C) || prefix || PH(M)\n        const R = G.multiply(r).toRawBytes(); // R = rG\n        const k = hashDomainToScalar(options.context, R, pointBytes, msg); // R || A || PH(M)\n        const s = modN(r + k * scalar); // S = (r + k * s) mod L\n        assertGE0(s); // 0 <= s < l\n        const res = ut.concatBytes(R, ut.numberToBytesLE(s, Fp.BYTES));\n        return ensureBytes('result', res, nByteLength * 2); // 64-byte signature\n    }\n    const verifyOpts = VERIFY_DEFAULT;\n    function verify(sig, msg, publicKey, options = verifyOpts) {\n        const { context, zip215 } = options;\n        const len = Fp.BYTES; // Verifies EdDSA signature against message and public key. RFC8032 5.1.7.\n        sig = ensureBytes('signature', sig, 2 * len); // An extended group equation is checked.\n        msg = ensureBytes('message', msg);\n        if (prehash)\n            msg = prehash(msg); // for ed25519ph, etc\n        const s = ut.bytesToNumberLE(sig.slice(len, 2 * len));\n        // zip215: true is good for consensus-critical apps and allows points < 2^256\n        // zip215: false follows RFC8032 / NIST186-5 and restricts points to CURVE.p\n        let A, R, SB;\n        try {\n            A = Point.fromHex(publicKey, zip215);\n            R = Point.fromHex(sig.slice(0, len), zip215);\n            SB = G.multiplyUnsafe(s); // 0 <= s < l is done inside\n        }\n        catch (error) {\n            return false;\n        }\n        const k = hashDomainToScalar(context, R.toRawBytes(), A.toRawBytes(), msg);\n        const RkA = R.add(A.multiplyUnsafe(k));\n        // [8][S]B = [8]R + [8][k]A'\n        return RkA.subtract(SB).clearCofactor().equals(Point.ZERO);\n    }\n    G._setWindowSize(8); // Enable precomputes. Slows down first publicKey computation by 20ms.\n    const utils = {\n        getExtendedPublicKey,\n        // ed25519 private keys are uniform 32b. No need to check for modulo bias, like in secp256k1.\n        randomPrivateKey: () => randomBytes(Fp.BYTES),\n        /**\n         * We're doing scalar multiplication (used in getPublicKey etc) with precomputed BASE_POINT\n         * values. This slows down first getPublicKey() by milliseconds (see Speed section),\n         * but allows to speed-up subsequent getPublicKey() calls up to 20x.\n         * @param windowSize 2, 4, 8, 16\n         */\n        precompute(windowSize = 8, point = Point.BASE) {\n            point._setWindowSize(windowSize);\n            point.multiply(BigInt(3));\n            return point;\n        },\n    };\n    return {\n        CURVE,\n        getPublicKey,\n        sign,\n        verify,\n        ExtendedPoint: Point,\n        utils,\n    };\n}\n//# sourceMappingURL=edwards.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { mod, pow } from './modular.js';\nimport { bytesToNumberLE, ensureBytes, numberToBytesLE, validateObject } from './utils.js';\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nfunction validateOpts(curve) {\n    validateObject(curve, {\n        a: 'bigint',\n    }, {\n        montgomeryBits: 'isSafeInteger',\n        nByteLength: 'isSafeInteger',\n        adjustScalarBytes: 'function',\n        domain: 'function',\n        powPminus2: 'function',\n        Gu: 'bigint',\n    });\n    // Set defaults\n    return Object.freeze({ ...curve });\n}\n// NOTE: not really montgomery curve, just bunch of very specific methods for X25519/X448 (RFC 7748, https://www.rfc-editor.org/rfc/rfc7748)\n// Uses only one coordinate instead of two\nexport function montgomery(curveDef) {\n    const CURVE = validateOpts(curveDef);\n    const { P } = CURVE;\n    const modP = (n) => mod(n, P);\n    const montgomeryBits = CURVE.montgomeryBits;\n    const montgomeryBytes = Math.ceil(montgomeryBits / 8);\n    const fieldLen = CURVE.nByteLength;\n    const adjustScalarBytes = CURVE.adjustScalarBytes || ((bytes) => bytes);\n    const powPminus2 = CURVE.powPminus2 || ((x) => pow(x, P - BigInt(2), P));\n    // cswap from RFC7748. But it is not from RFC7748!\n    /*\n      cswap(swap, x_2, x_3):\n           dummy = mask(swap) AND (x_2 XOR x_3)\n           x_2 = x_2 XOR dummy\n           x_3 = x_3 XOR dummy\n           Return (x_2, x_3)\n    Where mask(swap) is the all-1 or all-0 word of the same length as x_2\n     and x_3, computed, e.g., as mask(swap) = 0 - swap.\n    */\n    function cswap(swap, x_2, x_3) {\n        const dummy = modP(swap * (x_2 - x_3));\n        x_2 = modP(x_2 - dummy);\n        x_3 = modP(x_3 + dummy);\n        return [x_2, x_3];\n    }\n    // Accepts 0 as well\n    function assertFieldElement(n) {\n        if (typeof n === 'bigint' && _0n <= n && n < P)\n            return n;\n        throw new Error('Expected valid scalar 0 < scalar < CURVE.P');\n    }\n    // x25519 from 4\n    // The constant a24 is (486662 - 2) / 4 = 121665 for curve25519/X25519\n    const a24 = (CURVE.a - BigInt(2)) / BigInt(4);\n    /**\n     *\n     * @param pointU u coordinate (x) on Montgomery Curve 25519\n     * @param scalar by which the point would be multiplied\n     * @returns new Point on Montgomery curve\n     */\n    function montgomeryLadder(pointU, scalar) {\n        const u = assertFieldElement(pointU);\n        // Section 5: Implementations MUST accept non-canonical values and process them as\n        // if they had been reduced modulo the field prime.\n        const k = assertFieldElement(scalar);\n        const x_1 = u;\n        let x_2 = _1n;\n        let z_2 = _0n;\n        let x_3 = u;\n        let z_3 = _1n;\n        let swap = _0n;\n        let sw;\n        for (let t = BigInt(montgomeryBits - 1); t >= _0n; t--) {\n            const k_t = (k >> t) & _1n;\n            swap ^= k_t;\n            sw = cswap(swap, x_2, x_3);\n            x_2 = sw[0];\n            x_3 = sw[1];\n            sw = cswap(swap, z_2, z_3);\n            z_2 = sw[0];\n            z_3 = sw[1];\n            swap = k_t;\n            const A = x_2 + z_2;\n            const AA = modP(A * A);\n            const B = x_2 - z_2;\n            const BB = modP(B * B);\n            const E = AA - BB;\n            const C = x_3 + z_3;\n            const D = x_3 - z_3;\n            const DA = modP(D * A);\n            const CB = modP(C * B);\n            const dacb = DA + CB;\n            const da_cb = DA - CB;\n            x_3 = modP(dacb * dacb);\n            z_3 = modP(x_1 * modP(da_cb * da_cb));\n            x_2 = modP(AA * BB);\n            z_2 = modP(E * (AA + modP(a24 * E)));\n        }\n        // (x_2, x_3) = cswap(swap, x_2, x_3)\n        sw = cswap(swap, x_2, x_3);\n        x_2 = sw[0];\n        x_3 = sw[1];\n        // (z_2, z_3) = cswap(swap, z_2, z_3)\n        sw = cswap(swap, z_2, z_3);\n        z_2 = sw[0];\n        z_3 = sw[1];\n        // z_2^(p - 2)\n        const z2 = powPminus2(z_2);\n        // Return x_2 * (z_2^(p - 2))\n        return modP(x_2 * z2);\n    }\n    function encodeUCoordinate(u) {\n        return numberToBytesLE(modP(u), montgomeryBytes);\n    }\n    function decodeUCoordinate(uEnc) {\n        // Section 5: When receiving such an array, implementations of X25519\n        // MUST mask the most significant bit in the final byte.\n        // This is very ugly way, but it works because fieldLen-1 is outside of bounds for X448, so this becomes NOOP\n        // fieldLen - scalaryBytes = 1 for X448 and = 0 for X25519\n        const u = ensureBytes('u coordinate', uEnc, montgomeryBytes);\n        // u[fieldLen-1] crashes QuickJS (TypeError: out-of-bound numeric index)\n        if (fieldLen === montgomeryBytes)\n            u[fieldLen - 1] &= 127; // 0b0111_1111\n        return bytesToNumberLE(u);\n    }\n    function decodeScalar(n) {\n        const bytes = ensureBytes('scalar', n);\n        if (bytes.length !== montgomeryBytes && bytes.length !== fieldLen)\n            throw new Error(`Expected ${montgomeryBytes} or ${fieldLen} bytes, got ${bytes.length}`);\n        return bytesToNumberLE(adjustScalarBytes(bytes));\n    }\n    function scalarMult(scalar, u) {\n        const pointU = decodeUCoordinate(u);\n        const _scalar = decodeScalar(scalar);\n        const pu = montgomeryLadder(pointU, _scalar);\n        // The result was not contributory\n        // https://cr.yp.to/ecdh.html#validate\n        if (pu === _0n)\n            throw new Error('Invalid private or public key received');\n        return encodeUCoordinate(pu);\n    }\n    // Computes public key from private. By doing scalar multiplication of base point.\n    const GuBytes = encodeUCoordinate(CURVE.Gu);\n    function scalarMultBase(scalar) {\n        return scalarMult(scalar, GuBytes);\n    }\n    return {\n        scalarMult,\n        scalarMultBase,\n        getSharedSecret: (privateKey, publicKey) => scalarMult(privateKey, publicKey),\n        getPublicKey: (privateKey) => scalarMultBase(privateKey),\n        utils: { randomPrivateKey: () => CURVE.randomBytes(CURVE.nByteLength) },\n        GuBytes: GuBytes,\n    };\n}\n//# sourceMappingURL=montgomery.js.map","import { mod } from './modular.js';\nimport { bytesToNumberBE, concatBytes, utf8ToBytes, validateObject } from './utils.js';\nfunction validateDST(dst) {\n    if (dst instanceof Uint8Array)\n        return dst;\n    if (typeof dst === 'string')\n        return utf8ToBytes(dst);\n    throw new Error('DST must be Uint8Array or string');\n}\n// Octet Stream to Integer. \"spec\" implementation of os2ip is 2.5x slower vs bytesToNumberBE.\nconst os2ip = bytesToNumberBE;\n// Integer to Octet Stream (numberToBytesBE)\nfunction i2osp(value, length) {\n    if (value < 0 || value >= 1 << (8 * length)) {\n        throw new Error(`bad I2OSP call: value=${value} length=${length}`);\n    }\n    const res = Array.from({ length }).fill(0);\n    for (let i = length - 1; i >= 0; i--) {\n        res[i] = value & 0xff;\n        value >>>= 8;\n    }\n    return new Uint8Array(res);\n}\nfunction strxor(a, b) {\n    const arr = new Uint8Array(a.length);\n    for (let i = 0; i < a.length; i++) {\n        arr[i] = a[i] ^ b[i];\n    }\n    return arr;\n}\nfunction isBytes(item) {\n    if (!(item instanceof Uint8Array))\n        throw new Error('Uint8Array expected');\n}\nfunction isNum(item) {\n    if (!Number.isSafeInteger(item))\n        throw new Error('number expected');\n}\n// Produces a uniformly random byte string using a cryptographic hash function H that outputs b bits\n// https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-hash-to-curve-11#section-5.4.1\nexport function expand_message_xmd(msg, DST, lenInBytes, H) {\n    isBytes(msg);\n    isBytes(DST);\n    isNum(lenInBytes);\n    // https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-hash-to-curve-16#section-5.3.3\n    if (DST.length > 255)\n        DST = H(concatBytes(utf8ToBytes('H2C-OVERSIZE-DST-'), DST));\n    const { outputLen: b_in_bytes, blockLen: r_in_bytes } = H;\n    const ell = Math.ceil(lenInBytes / b_in_bytes);\n    if (ell > 255)\n        throw new Error('Invalid xmd length');\n    const DST_prime = concatBytes(DST, i2osp(DST.length, 1));\n    const Z_pad = i2osp(0, r_in_bytes);\n    const l_i_b_str = i2osp(lenInBytes, 2); // len_in_bytes_str\n    const b = new Array(ell);\n    const b_0 = H(concatBytes(Z_pad, msg, l_i_b_str, i2osp(0, 1), DST_prime));\n    b[0] = H(concatBytes(b_0, i2osp(1, 1), DST_prime));\n    for (let i = 1; i <= ell; i++) {\n        const args = [strxor(b_0, b[i - 1]), i2osp(i + 1, 1), DST_prime];\n        b[i] = H(concatBytes(...args));\n    }\n    const pseudo_random_bytes = concatBytes(...b);\n    return pseudo_random_bytes.slice(0, lenInBytes);\n}\nexport function expand_message_xof(msg, DST, lenInBytes, k, H) {\n    isBytes(msg);\n    isBytes(DST);\n    isNum(lenInBytes);\n    // https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-hash-to-curve-16#section-5.3.3\n    // DST = H('H2C-OVERSIZE-DST-' || a_very_long_DST, Math.ceil((lenInBytes * k) / 8));\n    if (DST.length > 255) {\n        const dkLen = Math.ceil((2 * k) / 8);\n        DST = H.create({ dkLen }).update(utf8ToBytes('H2C-OVERSIZE-DST-')).update(DST).digest();\n    }\n    if (lenInBytes > 65535 || DST.length > 255)\n        throw new Error('expand_message_xof: invalid lenInBytes');\n    return (H.create({ dkLen: lenInBytes })\n        .update(msg)\n        .update(i2osp(lenInBytes, 2))\n        // 2. DST_prime = DST || I2OSP(len(DST), 1)\n        .update(DST)\n        .update(i2osp(DST.length, 1))\n        .digest());\n}\n/**\n * Hashes arbitrary-length byte strings to a list of one or more elements of a finite field F\n * https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-hash-to-curve-11#section-5.3\n * @param msg a byte string containing the message to hash\n * @param count the number of elements of F to output\n * @param options `{DST: string, p: bigint, m: number, k: number, expand: 'xmd' | 'xof', hash: H}`, see above\n * @returns [u_0, ..., u_(count - 1)], a list of field elements.\n */\nexport function hash_to_field(msg, count, options) {\n    validateObject(options, {\n        DST: 'string',\n        p: 'bigint',\n        m: 'isSafeInteger',\n        k: 'isSafeInteger',\n        hash: 'hash',\n    });\n    const { p, k, m, hash, expand, DST: _DST } = options;\n    isBytes(msg);\n    isNum(count);\n    const DST = validateDST(_DST);\n    const log2p = p.toString(2).length;\n    const L = Math.ceil((log2p + k) / 8); // section 5.1 of ietf draft link above\n    const len_in_bytes = count * m * L;\n    let prb; // pseudo_random_bytes\n    if (expand === 'xmd') {\n        prb = expand_message_xmd(msg, DST, len_in_bytes, hash);\n    }\n    else if (expand === 'xof') {\n        prb = expand_message_xof(msg, DST, len_in_bytes, k, hash);\n    }\n    else if (expand === '_internal_pass') {\n        // for internal tests only\n        prb = msg;\n    }\n    else {\n        throw new Error('expand must be \"xmd\" or \"xof\"');\n    }\n    const u = new Array(count);\n    for (let i = 0; i < count; i++) {\n        const e = new Array(m);\n        for (let j = 0; j < m; j++) {\n            const elm_offset = L * (j + i * m);\n            const tv = prb.subarray(elm_offset, elm_offset + L);\n            e[j] = mod(os2ip(tv), p);\n        }\n        u[i] = e;\n    }\n    return u;\n}\nexport function isogenyMap(field, map) {\n    // Make same order as in spec\n    const COEFF = map.map((i) => Array.from(i).reverse());\n    return (x, y) => {\n        const [xNum, xDen, yNum, yDen] = COEFF.map((val) => val.reduce((acc, i) => field.add(field.mul(acc, x), i)));\n        x = field.div(xNum, xDen); // xNum / xDen\n        y = field.mul(y, field.div(yNum, yDen)); // y * (yNum / yDev)\n        return { x, y };\n    };\n}\nexport function createHasher(Point, mapToCurve, def) {\n    if (typeof mapToCurve !== 'function')\n        throw new Error('mapToCurve() must be defined');\n    return {\n        // Encodes byte string to elliptic curve\n        // https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-hash-to-curve-16#section-3\n        hashToCurve(msg, options) {\n            const u = hash_to_field(msg, 2, { ...def, DST: def.DST, ...options });\n            const u0 = Point.fromAffine(mapToCurve(u[0]));\n            const u1 = Point.fromAffine(mapToCurve(u[1]));\n            const P = u0.add(u1).clearCofactor();\n            P.assertValidity();\n            return P;\n        },\n        // https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-hash-to-curve-16#section-3\n        encodeToCurve(msg, options) {\n            const u = hash_to_field(msg, 1, { ...def, DST: def.encodeDST, ...options });\n            const P = Point.fromAffine(mapToCurve(u[0])).clearCofactor();\n            P.assertValidity();\n            return P;\n        },\n    };\n}\n//# sourceMappingURL=hash-to-curve.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { sha512 } from '@noble/hashes/sha512';\nimport { concatBytes, randomBytes, utf8ToBytes } from '@noble/hashes/utils';\nimport { twistedEdwards } from './abstract/edwards.js';\nimport { montgomery } from './abstract/montgomery.js';\nimport { mod, pow2, isNegativeLE, Field, FpSqrtEven } from './abstract/modular.js';\nimport { equalBytes, bytesToHex, bytesToNumberLE, numberToBytesLE, ensureBytes, } from './abstract/utils.js';\nimport * as htf from './abstract/hash-to-curve.js';\n/**\n * ed25519 Twisted Edwards curve with following addons:\n * - X25519 ECDH\n * - Ristretto cofactor elimination\n * - Elligator hash-to-group / point indistinguishability\n */\nconst ED25519_P = BigInt('57896044618658097711785492504343953926634992332820282019728792003956564819949');\n// √(-1) aka √(a) aka 2^((p-1)/4)\nconst ED25519_SQRT_M1 = BigInt('19681161376707505956807079304988542015446066515923890162744021073123829784752');\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _5n = BigInt(5);\n// prettier-ignore\nconst _10n = BigInt(10), _20n = BigInt(20), _40n = BigInt(40), _80n = BigInt(80);\nfunction ed25519_pow_2_252_3(x) {\n    const P = ED25519_P;\n    const x2 = (x * x) % P;\n    const b2 = (x2 * x) % P; // x^3, 11\n    const b4 = (pow2(b2, _2n, P) * b2) % P; // x^15, 1111\n    const b5 = (pow2(b4, _1n, P) * x) % P; // x^31\n    const b10 = (pow2(b5, _5n, P) * b5) % P;\n    const b20 = (pow2(b10, _10n, P) * b10) % P;\n    const b40 = (pow2(b20, _20n, P) * b20) % P;\n    const b80 = (pow2(b40, _40n, P) * b40) % P;\n    const b160 = (pow2(b80, _80n, P) * b80) % P;\n    const b240 = (pow2(b160, _80n, P) * b80) % P;\n    const b250 = (pow2(b240, _10n, P) * b10) % P;\n    const pow_p_5_8 = (pow2(b250, _2n, P) * x) % P;\n    // ^ To pow to (p+3)/8, multiply it by x.\n    return { pow_p_5_8, b2 };\n}\nfunction adjustScalarBytes(bytes) {\n    // Section 5: For X25519, in order to decode 32 random bytes as an integer scalar,\n    // set the three least significant bits of the first byte\n    bytes[0] &= 248; // 0b1111_1000\n    // and the most significant bit of the last to zero,\n    bytes[31] &= 127; // 0b0111_1111\n    // set the second most significant bit of the last byte to 1\n    bytes[31] |= 64; // 0b0100_0000\n    return bytes;\n}\n// sqrt(u/v)\nfunction uvRatio(u, v) {\n    const P = ED25519_P;\n    const v3 = mod(v * v * v, P); // v³\n    const v7 = mod(v3 * v3 * v, P); // v⁷\n    // (p+3)/8 and (p-5)/8\n    const pow = ed25519_pow_2_252_3(u * v7).pow_p_5_8;\n    let x = mod(u * v3 * pow, P); // (uv³)(uv⁷)^(p-5)/8\n    const vx2 = mod(v * x * x, P); // vx²\n    const root1 = x; // First root candidate\n    const root2 = mod(x * ED25519_SQRT_M1, P); // Second root candidate\n    const useRoot1 = vx2 === u; // If vx² = u (mod p), x is a square root\n    const useRoot2 = vx2 === mod(-u, P); // If vx² = -u, set x <-- x * 2^((p-1)/4)\n    const noRoot = vx2 === mod(-u * ED25519_SQRT_M1, P); // There is no valid root, vx² = -u√(-1)\n    if (useRoot1)\n        x = root1;\n    if (useRoot2 || noRoot)\n        x = root2; // We return root2 anyway, for const-time\n    if (isNegativeLE(x, P))\n        x = mod(-x, P);\n    return { isValid: useRoot1 || useRoot2, value: x };\n}\n// Just in case\nexport const ED25519_TORSION_SUBGROUP = [\n    '0100000000000000000000000000000000000000000000000000000000000000',\n    'c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac037a',\n    '0000000000000000000000000000000000000000000000000000000000000080',\n    '26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc05',\n    'ecffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7f',\n    '26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc85',\n    '0000000000000000000000000000000000000000000000000000000000000000',\n    'c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac03fa',\n];\nconst Fp = Field(ED25519_P, undefined, true);\nconst ed25519Defaults = {\n    // Param: a\n    a: BigInt(-1),\n    // d is equal to -121665/121666 over finite field.\n    // Negative number is P - number, and division is invert(number, P)\n    d: BigInt('37095705934669439343138083508754565189542113879843219016388785533085940283555'),\n    // Finite field 𝔽p over which we'll do calculations; 2n ** 255n - 19n\n    Fp,\n    // Subgroup order: how many points curve has\n    // 2n ** 252n + 27742317777372353535851937790883648493n;\n    n: BigInt('7237005577332262213973186563042994240857116359379907606001950938285454250989'),\n    // Cofactor\n    h: BigInt(8),\n    // Base point (x, y) aka generator point\n    Gx: BigInt('15112221349535400772501151409588531511454012693041857206046113283949847762202'),\n    Gy: BigInt('46316835694926478169428394003475163141307993866256225615783033603165251855960'),\n    hash: sha512,\n    randomBytes,\n    adjustScalarBytes,\n    // dom2\n    // Ratio of u to v. Allows us to combine inversion and square root. Uses algo from RFC8032 5.1.3.\n    // Constant-time, u/√v\n    uvRatio,\n};\nexport const ed25519 = twistedEdwards(ed25519Defaults);\nfunction ed25519_domain(data, ctx, phflag) {\n    if (ctx.length > 255)\n        throw new Error('Context is too big');\n    return concatBytes(utf8ToBytes('SigEd25519 no Ed25519 collisions'), new Uint8Array([phflag ? 1 : 0, ctx.length]), ctx, data);\n}\nexport const ed25519ctx = twistedEdwards({ ...ed25519Defaults, domain: ed25519_domain });\nexport const ed25519ph = twistedEdwards({\n    ...ed25519Defaults,\n    domain: ed25519_domain,\n    prehash: sha512,\n});\nexport const x25519 = montgomery({\n    P: ED25519_P,\n    a: BigInt(486662),\n    montgomeryBits: 255,\n    nByteLength: 32,\n    Gu: BigInt(9),\n    powPminus2: (x) => {\n        const P = ED25519_P;\n        // x^(p-2) aka x^(2^255-21)\n        const { pow_p_5_8, b2 } = ed25519_pow_2_252_3(x);\n        return mod(pow2(pow_p_5_8, BigInt(3), P) * b2, P);\n    },\n    adjustScalarBytes,\n    randomBytes,\n});\n/**\n * Converts ed25519 public key to x25519 public key. Uses formula:\n * * `(u, v) = ((1+y)/(1-y), sqrt(-486664)*u/x)`\n * * `(x, y) = (sqrt(-486664)*u/v, (u-1)/(u+1))`\n * @example\n *   const aPub = ed25519.getPublicKey(utils.randomPrivateKey());\n *   x25519.getSharedSecret(edwardsToMontgomery(aPub), edwardsToMontgomery(someonesPub))\n */\nexport function edwardsToMontgomery(edwardsPub) {\n    const { y } = ed25519.ExtendedPoint.fromHex(edwardsPub);\n    const _1n = BigInt(1);\n    return Fp.toBytes(Fp.create((y - _1n) * Fp.inv(y + _1n)));\n}\n// Hash To Curve Elligator2 Map (NOTE: different from ristretto255 elligator)\n// NOTE: very important part is usage of FpSqrtEven for ELL2_C1_EDWARDS, since\n// SageMath returns different root first and everything falls apart\nconst ELL2_C1 = (Fp.ORDER + BigInt(3)) / BigInt(8); // 1. c1 = (q + 3) / 8       # Integer arithmetic\nconst ELL2_C2 = Fp.pow(_2n, ELL2_C1); // 2. c2 = 2^c1\nconst ELL2_C3 = Fp.sqrt(Fp.neg(Fp.ONE)); // 3. c3 = sqrt(-1)\nconst ELL2_C4 = (Fp.ORDER - BigInt(5)) / BigInt(8); // 4. c4 = (q - 5) / 8       # Integer arithmetic\nconst ELL2_J = BigInt(486662);\n// prettier-ignore\nfunction map_to_curve_elligator2_curve25519(u) {\n    let tv1 = Fp.sqr(u); //  1.  tv1 = u^2\n    tv1 = Fp.mul(tv1, _2n); //  2.  tv1 = 2 * tv1\n    let xd = Fp.add(tv1, Fp.ONE); //  3.   xd = tv1 + 1         # Nonzero: -1 is square (mod p), tv1 is not\n    let x1n = Fp.neg(ELL2_J); //  4.  x1n = -J              # x1 = x1n / xd = -J / (1 + 2 * u^2)\n    let tv2 = Fp.sqr(xd); //  5.  tv2 = xd^2\n    let gxd = Fp.mul(tv2, xd); //  6.  gxd = tv2 * xd        # gxd = xd^3\n    let gx1 = Fp.mul(tv1, ELL2_J); //  7.  gx1 = J * tv1         # x1n + J * xd\n    gx1 = Fp.mul(gx1, x1n); //  8.  gx1 = gx1 * x1n       # x1n^2 + J * x1n * xd\n    gx1 = Fp.add(gx1, tv2); //  9.  gx1 = gx1 + tv2       # x1n^2 + J * x1n * xd + xd^2\n    gx1 = Fp.mul(gx1, x1n); //  10. gx1 = gx1 * x1n       # x1n^3 + J * x1n^2 * xd + x1n * xd^2\n    let tv3 = Fp.sqr(gxd); //  11. tv3 = gxd^2\n    tv2 = Fp.sqr(tv3); //  12. tv2 = tv3^2           # gxd^4\n    tv3 = Fp.mul(tv3, gxd); //  13. tv3 = tv3 * gxd       # gxd^3\n    tv3 = Fp.mul(tv3, gx1); //  14. tv3 = tv3 * gx1       # gx1 * gxd^3\n    tv2 = Fp.mul(tv2, tv3); //  15. tv2 = tv2 * tv3       # gx1 * gxd^7\n    let y11 = Fp.pow(tv2, ELL2_C4); //  16. y11 = tv2^c4        # (gx1 * gxd^7)^((p - 5) / 8)\n    y11 = Fp.mul(y11, tv3); //  17. y11 = y11 * tv3       # gx1*gxd^3*(gx1*gxd^7)^((p-5)/8)\n    let y12 = Fp.mul(y11, ELL2_C3); //  18. y12 = y11 * c3\n    tv2 = Fp.sqr(y11); //  19. tv2 = y11^2\n    tv2 = Fp.mul(tv2, gxd); //  20. tv2 = tv2 * gxd\n    let e1 = Fp.eql(tv2, gx1); //  21.  e1 = tv2 == gx1\n    let y1 = Fp.cmov(y12, y11, e1); //  22.  y1 = CMOV(y12, y11, e1)  # If g(x1) is square, this is its sqrt\n    let x2n = Fp.mul(x1n, tv1); //  23. x2n = x1n * tv1       # x2 = x2n / xd = 2 * u^2 * x1n / xd\n    let y21 = Fp.mul(y11, u); //  24. y21 = y11 * u\n    y21 = Fp.mul(y21, ELL2_C2); //  25. y21 = y21 * c2\n    let y22 = Fp.mul(y21, ELL2_C3); //  26. y22 = y21 * c3\n    let gx2 = Fp.mul(gx1, tv1); //  27. gx2 = gx1 * tv1       # g(x2) = gx2 / gxd = 2 * u^2 * g(x1)\n    tv2 = Fp.sqr(y21); //  28. tv2 = y21^2\n    tv2 = Fp.mul(tv2, gxd); //  29. tv2 = tv2 * gxd\n    let e2 = Fp.eql(tv2, gx2); //  30.  e2 = tv2 == gx2\n    let y2 = Fp.cmov(y22, y21, e2); //  31.  y2 = CMOV(y22, y21, e2)  # If g(x2) is square, this is its sqrt\n    tv2 = Fp.sqr(y1); //  32. tv2 = y1^2\n    tv2 = Fp.mul(tv2, gxd); //  33. tv2 = tv2 * gxd\n    let e3 = Fp.eql(tv2, gx1); //  34.  e3 = tv2 == gx1\n    let xn = Fp.cmov(x2n, x1n, e3); //  35.  xn = CMOV(x2n, x1n, e3)  # If e3, x = x1, else x = x2\n    let y = Fp.cmov(y2, y1, e3); //  36.   y = CMOV(y2, y1, e3)    # If e3, y = y1, else y = y2\n    let e4 = Fp.isOdd(y); //  37.  e4 = sgn0(y) == 1        # Fix sign of y\n    y = Fp.cmov(y, Fp.neg(y), e3 !== e4); //  38.   y = CMOV(y, -y, e3 XOR e4)\n    return { xMn: xn, xMd: xd, yMn: y, yMd: _1n }; //  39. return (xn, xd, y, 1)\n}\nconst ELL2_C1_EDWARDS = FpSqrtEven(Fp, Fp.neg(BigInt(486664))); // sgn0(c1) MUST equal 0\nfunction map_to_curve_elligator2_edwards25519(u) {\n    const { xMn, xMd, yMn, yMd } = map_to_curve_elligator2_curve25519(u); //  1.  (xMn, xMd, yMn, yMd) = map_to_curve_elligator2_curve25519(u)\n    let xn = Fp.mul(xMn, yMd); //  2.  xn = xMn * yMd\n    xn = Fp.mul(xn, ELL2_C1_EDWARDS); //  3.  xn = xn * c1\n    let xd = Fp.mul(xMd, yMn); //  4.  xd = xMd * yMn    # xn / xd = c1 * xM / yM\n    let yn = Fp.sub(xMn, xMd); //  5.  yn = xMn - xMd\n    let yd = Fp.add(xMn, xMd); //  6.  yd = xMn + xMd    # (n / d - 1) / (n / d + 1) = (n - d) / (n + d)\n    let tv1 = Fp.mul(xd, yd); //  7. tv1 = xd * yd\n    let e = Fp.eql(tv1, Fp.ZERO); //  8.   e = tv1 == 0\n    xn = Fp.cmov(xn, Fp.ZERO, e); //  9.  xn = CMOV(xn, 0, e)\n    xd = Fp.cmov(xd, Fp.ONE, e); //  10. xd = CMOV(xd, 1, e)\n    yn = Fp.cmov(yn, Fp.ONE, e); //  11. yn = CMOV(yn, 1, e)\n    yd = Fp.cmov(yd, Fp.ONE, e); //  12. yd = CMOV(yd, 1, e)\n    const inv = Fp.invertBatch([xd, yd]); // batch division\n    return { x: Fp.mul(xn, inv[0]), y: Fp.mul(yn, inv[1]) }; //  13. return (xn, xd, yn, yd)\n}\nconst { hashToCurve, encodeToCurve } = htf.createHasher(ed25519.ExtendedPoint, (scalars) => map_to_curve_elligator2_edwards25519(scalars[0]), {\n    DST: 'edwards25519_XMD:SHA-512_ELL2_RO_',\n    encodeDST: 'edwards25519_XMD:SHA-512_ELL2_NU_',\n    p: Fp.ORDER,\n    m: 1,\n    k: 128,\n    expand: 'xmd',\n    hash: sha512,\n});\nexport { hashToCurve, encodeToCurve };\nfunction assertRstPoint(other) {\n    if (!(other instanceof RistrettoPoint))\n        throw new Error('RistrettoPoint expected');\n}\n// √(-1) aka √(a) aka 2^((p-1)/4)\nconst SQRT_M1 = BigInt('19681161376707505956807079304988542015446066515923890162744021073123829784752');\n// √(ad - 1)\nconst SQRT_AD_MINUS_ONE = BigInt('25063068953384623474111414158702152701244531502492656460079210482610430750235');\n// 1 / √(a-d)\nconst INVSQRT_A_MINUS_D = BigInt('54469307008909316920995813868745141605393597292927456921205312896311721017578');\n// 1-d²\nconst ONE_MINUS_D_SQ = BigInt('1159843021668779879193775521855586647937357759715417654439879720876111806838');\n// (d-1)²\nconst D_MINUS_ONE_SQ = BigInt('40440834346308536858101042469323190826248399146238708352240133220865137265952');\n// Calculates 1/√(number)\nconst invertSqrt = (number) => uvRatio(_1n, number);\nconst MAX_255B = BigInt('0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff');\nconst bytes255ToNumberLE = (bytes) => ed25519.CURVE.Fp.create(bytesToNumberLE(bytes) & MAX_255B);\n// Computes Elligator map for Ristretto\n// https://ristretto.group/formulas/elligator.html\nfunction calcElligatorRistrettoMap(r0) {\n    const { d } = ed25519.CURVE;\n    const P = ed25519.CURVE.Fp.ORDER;\n    const mod = ed25519.CURVE.Fp.create;\n    const r = mod(SQRT_M1 * r0 * r0); // 1\n    const Ns = mod((r + _1n) * ONE_MINUS_D_SQ); // 2\n    let c = BigInt(-1); // 3\n    const D = mod((c - d * r) * mod(r + d)); // 4\n    let { isValid: Ns_D_is_sq, value: s } = uvRatio(Ns, D); // 5\n    let s_ = mod(s * r0); // 6\n    if (!isNegativeLE(s_, P))\n        s_ = mod(-s_);\n    if (!Ns_D_is_sq)\n        s = s_; // 7\n    if (!Ns_D_is_sq)\n        c = r; // 8\n    const Nt = mod(c * (r - _1n) * D_MINUS_ONE_SQ - D); // 9\n    const s2 = s * s;\n    const W0 = mod((s + s) * D); // 10\n    const W1 = mod(Nt * SQRT_AD_MINUS_ONE); // 11\n    const W2 = mod(_1n - s2); // 12\n    const W3 = mod(_1n + s2); // 13\n    return new ed25519.ExtendedPoint(mod(W0 * W3), mod(W2 * W1), mod(W1 * W3), mod(W0 * W2));\n}\n/**\n * Each ed25519/ExtendedPoint has 8 different equivalent points. This can be\n * a source of bugs for protocols like ring signatures. Ristretto was created to solve this.\n * Ristretto point operates in X:Y:Z:T extended coordinates like ExtendedPoint,\n * but it should work in its own namespace: do not combine those two.\n * https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-ristretto255-decaf448\n */\nclass RistrettoPoint {\n    // Private property to discourage combining ExtendedPoint + RistrettoPoint\n    // Always use Ristretto encoding/decoding instead.\n    constructor(ep) {\n        this.ep = ep;\n    }\n    static fromAffine(ap) {\n        return new RistrettoPoint(ed25519.ExtendedPoint.fromAffine(ap));\n    }\n    /**\n     * Takes uniform output of 64-bit hash function like sha512 and converts it to `RistrettoPoint`.\n     * The hash-to-group operation applies Elligator twice and adds the results.\n     * **Note:** this is one-way map, there is no conversion from point to hash.\n     * https://ristretto.group/formulas/elligator.html\n     * @param hex 64-bit output of a hash function\n     */\n    static hashToCurve(hex) {\n        hex = ensureBytes('ristrettoHash', hex, 64);\n        const r1 = bytes255ToNumberLE(hex.slice(0, 32));\n        const R1 = calcElligatorRistrettoMap(r1);\n        const r2 = bytes255ToNumberLE(hex.slice(32, 64));\n        const R2 = calcElligatorRistrettoMap(r2);\n        return new RistrettoPoint(R1.add(R2));\n    }\n    /**\n     * Converts ristretto-encoded string to ristretto point.\n     * https://ristretto.group/formulas/decoding.html\n     * @param hex Ristretto-encoded 32 bytes. Not every 32-byte string is valid ristretto encoding\n     */\n    static fromHex(hex) {\n        hex = ensureBytes('ristrettoHex', hex, 32);\n        const { a, d } = ed25519.CURVE;\n        const P = ed25519.CURVE.Fp.ORDER;\n        const mod = ed25519.CURVE.Fp.create;\n        const emsg = 'RistrettoPoint.fromHex: the hex is not valid encoding of RistrettoPoint';\n        const s = bytes255ToNumberLE(hex);\n        // 1. Check that s_bytes is the canonical encoding of a field element, or else abort.\n        // 3. Check that s is non-negative, or else abort\n        if (!equalBytes(numberToBytesLE(s, 32), hex) || isNegativeLE(s, P))\n            throw new Error(emsg);\n        const s2 = mod(s * s);\n        const u1 = mod(_1n + a * s2); // 4 (a is -1)\n        const u2 = mod(_1n - a * s2); // 5\n        const u1_2 = mod(u1 * u1);\n        const u2_2 = mod(u2 * u2);\n        const v = mod(a * d * u1_2 - u2_2); // 6\n        const { isValid, value: I } = invertSqrt(mod(v * u2_2)); // 7\n        const Dx = mod(I * u2); // 8\n        const Dy = mod(I * Dx * v); // 9\n        let x = mod((s + s) * Dx); // 10\n        if (isNegativeLE(x, P))\n            x = mod(-x); // 10\n        const y = mod(u1 * Dy); // 11\n        const t = mod(x * y); // 12\n        if (!isValid || isNegativeLE(t, P) || y === _0n)\n            throw new Error(emsg);\n        return new RistrettoPoint(new ed25519.ExtendedPoint(x, y, _1n, t));\n    }\n    /**\n     * Encodes ristretto point to Uint8Array.\n     * https://ristretto.group/formulas/encoding.html\n     */\n    toRawBytes() {\n        let { ex: x, ey: y, ez: z, et: t } = this.ep;\n        const P = ed25519.CURVE.Fp.ORDER;\n        const mod = ed25519.CURVE.Fp.create;\n        const u1 = mod(mod(z + y) * mod(z - y)); // 1\n        const u2 = mod(x * y); // 2\n        // Square root always exists\n        const u2sq = mod(u2 * u2);\n        const { value: invsqrt } = invertSqrt(mod(u1 * u2sq)); // 3\n        const D1 = mod(invsqrt * u1); // 4\n        const D2 = mod(invsqrt * u2); // 5\n        const zInv = mod(D1 * D2 * t); // 6\n        let D; // 7\n        if (isNegativeLE(t * zInv, P)) {\n            let _x = mod(y * SQRT_M1);\n            let _y = mod(x * SQRT_M1);\n            x = _x;\n            y = _y;\n            D = mod(D1 * INVSQRT_A_MINUS_D);\n        }\n        else {\n            D = D2; // 8\n        }\n        if (isNegativeLE(x * zInv, P))\n            y = mod(-y); // 9\n        let s = mod((z - y) * D); // 10 (check footer's note, no sqrt(-a))\n        if (isNegativeLE(s, P))\n            s = mod(-s);\n        return numberToBytesLE(s, 32); // 11\n    }\n    toHex() {\n        return bytesToHex(this.toRawBytes());\n    }\n    toString() {\n        return this.toHex();\n    }\n    // Compare one point to another.\n    equals(other) {\n        assertRstPoint(other);\n        const { ex: X1, ey: Y1 } = this.ep;\n        const { ex: X2, ey: Y2 } = other.ep;\n        const mod = ed25519.CURVE.Fp.create;\n        // (x1 * y2 == y1 * x2) | (y1 * y2 == x1 * x2)\n        const one = mod(X1 * Y2) === mod(Y1 * X2);\n        const two = mod(Y1 * Y2) === mod(X1 * X2);\n        return one || two;\n    }\n    add(other) {\n        assertRstPoint(other);\n        return new RistrettoPoint(this.ep.add(other.ep));\n    }\n    subtract(other) {\n        assertRstPoint(other);\n        return new RistrettoPoint(this.ep.subtract(other.ep));\n    }\n    multiply(scalar) {\n        return new RistrettoPoint(this.ep.multiply(scalar));\n    }\n    multiplyUnsafe(scalar) {\n        return new RistrettoPoint(this.ep.multiplyUnsafe(scalar));\n    }\n}\nRistrettoPoint.BASE = new RistrettoPoint(ed25519.ExtendedPoint.BASE);\nRistrettoPoint.ZERO = new RistrettoPoint(ed25519.ExtendedPoint.ZERO);\nexport { RistrettoPoint };\n// https://datatracker.ietf.org/doc/draft-irtf-cfrg-hash-to-curve/14/\n// Appendix B.  Hashing to ristretto255\nexport const hash_to_ristretto255 = (msg, options) => {\n    const d = options.DST;\n    const DST = typeof d === 'string' ? utf8ToBytes(d) : d;\n    const uniform_bytes = htf.expand_message_xmd(msg, DST, 64, sha512);\n    const P = RistrettoPoint.hashToCurve(uniform_bytes);\n    return P;\n};\n//# sourceMappingURL=ed25519.js.map","import {ed25519} from '@noble/curves/ed25519';\n\n/**\n * A 64 byte secret key, the first 32 bytes of which is the\n * private scalar and the last 32 bytes is the public key.\n * Read more: https://blog.mozilla.org/warner/2011/11/29/ed25519-keys/\n */\ntype Ed25519SecretKey = Uint8Array;\n\n/**\n * Ed25519 Keypair\n */\nexport interface Ed25519Keypair {\n  publicKey: Uint8Array;\n  secretKey: Ed25519SecretKey;\n}\n\nexport const generatePrivateKey = ed25519.utils.randomPrivateKey;\nexport const generateKeypair = (): Ed25519Keypair => {\n  const privateScalar = ed25519.utils.randomPrivateKey();\n  const publicKey = getPublicKey(privateScalar);\n  const secretKey = new Uint8Array(64);\n  secretKey.set(privateScalar);\n  secretKey.set(publicKey, 32);\n  return {\n    publicKey,\n    secretKey,\n  };\n};\nexport const getPublicKey = ed25519.getPublicKey;\nexport function isOnCurve(publicKey: Uint8Array): boolean {\n  try {\n    ed25519.ExtendedPoint.fromHex(publicKey);\n    return true;\n  } catch {\n    return false;\n  }\n}\nexport const sign = (\n  message: Parameters<typeof ed25519.sign>[0],\n  secretKey: Ed25519SecretKey,\n) => ed25519.sign(message, secretKey.slice(0, 32));\nexport const verify = ed25519.verify;\n","import {Buffer} from 'buffer';\n\nexport const toBuffer = (arr: Buffer | Uint8Array | Array<number>): Buffer => {\n  if (Buffer.isBuffer(arr)) {\n    return arr;\n  } else if (arr instanceof Uint8Array) {\n    return Buffer.from(arr.buffer, arr.byteOffset, arr.byteLength);\n  } else {\n    return Buffer.from(arr);\n  }\n};\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // '0' - '9'\n    if (c >= 48 && c <= 57) {\n      return c - 48;\n    // 'A' - 'F'\n    } else if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    } else {\n      assert(false, 'Invalid character in ' + string);\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this._strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this._strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move (dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move (dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    try {\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } catch (e) {\n      BN.prototype.inspect = inspect;\n    }\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate (ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position++] = word & 0xff;\n      if (position < res.length) {\n        res[position++] = (word >> 8) & 0xff;\n      }\n      if (position < res.length) {\n        res[position++] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position--] = word & 0xff;\n      if (position >= 0) {\n        res[position--] = (word >> 8) & 0xff;\n      }\n      if (position >= 0) {\n        res[position--] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] >>> wbit) & 0x01;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn (num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.prototype = Object.create(Buffer.prototype)\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","'use strict'\n// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n// @ts-ignore\nvar _Buffer = require('safe-buffer').Buffer\nfunction base (ALPHABET) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  var BASE_MAP = new Uint8Array(256)\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i)\n    var xc = x.charCodeAt(0)\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i\n  }\n  var BASE = ALPHABET.length\n  var LEADER = ALPHABET.charAt(0)\n  var FACTOR = Math.log(BASE) / Math.log(256) // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE) // log(256) / log(BASE), rounded up\n  function encode (source) {\n    if (Array.isArray(source) || source instanceof Uint8Array) { source = _Buffer.from(source) }\n    if (!_Buffer.isBuffer(source)) { throw new TypeError('Expected Buffer') }\n    if (source.length === 0) { return '' }\n        // Skip & count leading zeroes.\n    var zeroes = 0\n    var length = 0\n    var pbegin = 0\n    var pend = source.length\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++\n      zeroes++\n    }\n        // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0\n    var b58 = new Uint8Array(size)\n        // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin]\n            // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0\n        b58[it1] = (carry % BASE) >>> 0\n        carry = (carry / BASE) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      pbegin++\n    }\n        // Skip leading zeroes in base58 result.\n    var it2 = size - length\n    while (it2 !== size && b58[it2] === 0) {\n      it2++\n    }\n        // Translate the result into a string.\n    var str = LEADER.repeat(zeroes)\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]) }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return _Buffer.alloc(0) }\n    var psz = 0\n        // Skip and count leading '1's.\n    var zeroes = 0\n    var length = 0\n    while (source[psz] === LEADER) {\n      zeroes++\n      psz++\n    }\n        // Allocate enough space in big-endian base256 representation.\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0 // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size)\n        // Process the characters.\n    while (source[psz]) {\n            // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)]\n            // Invalid character\n      if (carry === 255) { return }\n      var i = 0\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0\n        b256[it3] = (carry % 256) >>> 0\n        carry = (carry / 256) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      psz++\n    }\n        // Skip leading zeroes in b256.\n    var it4 = size - length\n    while (it4 !== size && b256[it4] === 0) {\n      it4++\n    }\n    var vch = _Buffer.allocUnsafe(zeroes + (size - it4))\n    vch.fill(0x00, 0, zeroes)\n    var j = zeroes\n    while (it4 !== size) {\n      vch[j++] = b256[it4++]\n    }\n    return vch\n  }\n  function decode (string) {\n    var buffer = decodeUnsafe(string)\n    if (buffer) { return buffer }\n    throw new Error('Non-base' + BASE + ' character')\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\nmodule.exports = base\n","var basex = require('base-x')\nvar ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n\nmodule.exports = basex(ALPHABET)\n","import { SHA2 } from './_sha2.js';\nimport { rotr, wrapConstructor } from './utils.js';\n// Choice: a ? b : c\nconst Chi = (a, b, c) => (a & b) ^ (~a & c);\n// Majority function, true if any two inpust is true\nconst Maj = (a, b, c) => (a & b) ^ (a & c) ^ (b & c);\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = new Uint32Array([\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n// Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n// prettier-ignore\nconst IV = new Uint32Array([\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = new Uint32Array(64);\nclass SHA256 extends SHA2 {\n    constructor() {\n        super(64, 32, 8, false);\n        // We cannot use array here since array allows indexing by variable\n        // which means optimizer/compiler cannot use registers.\n        this.A = IV[0] | 0;\n        this.B = IV[1] | 0;\n        this.C = IV[2] | 0;\n        this.D = IV[3] | 0;\n        this.E = IV[4] | 0;\n        this.F = IV[5] | 0;\n        this.G = IV[6] | 0;\n        this.H = IV[7] | 0;\n    }\n    get() {\n        const { A, B, C, D, E, F, G, H } = this;\n        return [A, B, C, D, E, F, G, H];\n    }\n    // prettier-ignore\n    set(A, B, C, D, E, F, G, H) {\n        this.A = A | 0;\n        this.B = B | 0;\n        this.C = C | 0;\n        this.D = D | 0;\n        this.E = E | 0;\n        this.F = F | 0;\n        this.G = G | 0;\n        this.H = H | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4)\n            SHA256_W[i] = view.getUint32(offset, false);\n        for (let i = 16; i < 64; i++) {\n            const W15 = SHA256_W[i - 15];\n            const W2 = SHA256_W[i - 2];\n            const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\n            const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\n            SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n        }\n        // Compression function main loop, 64 rounds\n        let { A, B, C, D, E, F, G, H } = this;\n        for (let i = 0; i < 64; i++) {\n            const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n            const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n            const T2 = (sigma0 + Maj(A, B, C)) | 0;\n            H = G;\n            G = F;\n            F = E;\n            E = (D + T1) | 0;\n            D = C;\n            C = B;\n            B = A;\n            A = (T1 + T2) | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        A = (A + this.A) | 0;\n        B = (B + this.B) | 0;\n        C = (C + this.C) | 0;\n        D = (D + this.D) | 0;\n        E = (E + this.E) | 0;\n        F = (F + this.F) | 0;\n        G = (G + this.G) | 0;\n        H = (H + this.H) | 0;\n        this.set(A, B, C, D, E, F, G, H);\n    }\n    roundClean() {\n        SHA256_W.fill(0);\n    }\n    destroy() {\n        this.set(0, 0, 0, 0, 0, 0, 0, 0);\n        this.buffer.fill(0);\n    }\n}\n// Constants from https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\nclass SHA224 extends SHA256 {\n    constructor() {\n        super();\n        this.A = 0xc1059ed8 | 0;\n        this.B = 0x367cd507 | 0;\n        this.C = 0x3070dd17 | 0;\n        this.D = 0xf70e5939 | 0;\n        this.E = 0xffc00b31 | 0;\n        this.F = 0x68581511 | 0;\n        this.G = 0x64f98fa7 | 0;\n        this.H = 0xbefa4fa4 | 0;\n        this.outputLen = 28;\n    }\n}\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nexport const sha256 = wrapConstructor(() => new SHA256());\nexport const sha224 = wrapConstructor(() => new SHA224());\n//# sourceMappingURL=sha256.js.map","'use strict';\n\n// This is free and unencumbered software released into the public domain.\n// See LICENSE.md for more information.\n\n//\n// Utilities\n//\n\n/**\n * @param {number} a The number to test.\n * @param {number} min The minimum value in the range, inclusive.\n * @param {number} max The maximum value in the range, inclusive.\n * @return {boolean} True if a >= min and a <= max.\n */\nfunction inRange(a, min, max) {\n  return min <= a && a <= max;\n}\n\n/**\n * @param {*} o\n * @return {Object}\n */\nfunction ToDictionary(o) {\n  if (o === undefined) return {};\n  if (o === Object(o)) return o;\n  throw TypeError('Could not convert argument to dictionary');\n}\n\n/**\n * @param {string} string Input string of UTF-16 code units.\n * @return {!Array.<number>} Code points.\n */\nfunction stringToCodePoints(string) {\n  // https://heycam.github.io/webidl/#dfn-obtain-unicode\n\n  // 1. Let S be the DOMString value.\n  var s = String(string);\n\n  // 2. Let n be the length of S.\n  var n = s.length;\n\n  // 3. Initialize i to 0.\n  var i = 0;\n\n  // 4. Initialize U to be an empty sequence of Unicode characters.\n  var u = [];\n\n  // 5. While i < n:\n  while (i < n) {\n\n    // 1. Let c be the code unit in S at index i.\n    var c = s.charCodeAt(i);\n\n    // 2. Depending on the value of c:\n\n    // c < 0xD800 or c > 0xDFFF\n    if (c < 0xD800 || c > 0xDFFF) {\n      // Append to U the Unicode character with code point c.\n      u.push(c);\n    }\n\n    // 0xDC00 ≤ c ≤ 0xDFFF\n    else if (0xDC00 <= c && c <= 0xDFFF) {\n      // Append to U a U+FFFD REPLACEMENT CHARACTER.\n      u.push(0xFFFD);\n    }\n\n    // 0xD800 ≤ c ≤ 0xDBFF\n    else if (0xD800 <= c && c <= 0xDBFF) {\n      // 1. If i = n−1, then append to U a U+FFFD REPLACEMENT\n      // CHARACTER.\n      if (i === n - 1) {\n        u.push(0xFFFD);\n      }\n      // 2. Otherwise, i < n−1:\n      else {\n        // 1. Let d be the code unit in S at index i+1.\n        var d = string.charCodeAt(i + 1);\n\n        // 2. If 0xDC00 ≤ d ≤ 0xDFFF, then:\n        if (0xDC00 <= d && d <= 0xDFFF) {\n          // 1. Let a be c & 0x3FF.\n          var a = c & 0x3FF;\n\n          // 2. Let b be d & 0x3FF.\n          var b = d & 0x3FF;\n\n          // 3. Append to U the Unicode character with code point\n          // 2^16+2^10*a+b.\n          u.push(0x10000 + (a << 10) + b);\n\n          // 4. Set i to i+1.\n          i += 1;\n        }\n\n        // 3. Otherwise, d < 0xDC00 or d > 0xDFFF. Append to U a\n        // U+FFFD REPLACEMENT CHARACTER.\n        else  {\n          u.push(0xFFFD);\n        }\n      }\n    }\n\n    // 3. Set i to i+1.\n    i += 1;\n  }\n\n  // 6. Return U.\n  return u;\n}\n\n/**\n * @param {!Array.<number>} code_points Array of code points.\n * @return {string} string String of UTF-16 code units.\n */\nfunction codePointsToString(code_points) {\n  var s = '';\n  for (var i = 0; i < code_points.length; ++i) {\n    var cp = code_points[i];\n    if (cp <= 0xFFFF) {\n      s += String.fromCharCode(cp);\n    } else {\n      cp -= 0x10000;\n      s += String.fromCharCode((cp >> 10) + 0xD800,\n                               (cp & 0x3FF) + 0xDC00);\n    }\n  }\n  return s;\n}\n\n\n//\n// Implementation of Encoding specification\n// https://encoding.spec.whatwg.org/\n//\n\n//\n// 3. Terminology\n//\n\n/**\n * End-of-stream is a special token that signifies no more tokens\n * are in the stream.\n * @const\n */ var end_of_stream = -1;\n\n/**\n * A stream represents an ordered sequence of tokens.\n *\n * @constructor\n * @param {!(Array.<number>|Uint8Array)} tokens Array of tokens that provide the\n * stream.\n */\nfunction Stream(tokens) {\n  /** @type {!Array.<number>} */\n  this.tokens = [].slice.call(tokens);\n}\n\nStream.prototype = {\n  /**\n   * @return {boolean} True if end-of-stream has been hit.\n   */\n  endOfStream: function() {\n    return !this.tokens.length;\n  },\n\n  /**\n   * When a token is read from a stream, the first token in the\n   * stream must be returned and subsequently removed, and\n   * end-of-stream must be returned otherwise.\n   *\n   * @return {number} Get the next token from the stream, or\n   * end_of_stream.\n   */\n   read: function() {\n    if (!this.tokens.length)\n      return end_of_stream;\n     return this.tokens.shift();\n   },\n\n  /**\n   * When one or more tokens are prepended to a stream, those tokens\n   * must be inserted, in given order, before the first token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The token(s) to prepend to the stream.\n   */\n  prepend: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.unshift(tokens.pop());\n    } else {\n      this.tokens.unshift(token);\n    }\n  },\n\n  /**\n   * When one or more tokens are pushed to a stream, those tokens\n   * must be inserted, in given order, after the last token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The tokens(s) to prepend to the stream.\n   */\n  push: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.push(tokens.shift());\n    } else {\n      this.tokens.push(token);\n    }\n  }\n};\n\n//\n// 4. Encodings\n//\n\n// 4.1 Encoders and decoders\n\n/** @const */\nvar finished = -1;\n\n/**\n * @param {boolean} fatal If true, decoding errors raise an exception.\n * @param {number=} opt_code_point Override the standard fallback code point.\n * @return {number} The code point to insert on a decoding error.\n */\nfunction decoderError(fatal, opt_code_point) {\n  if (fatal)\n    throw TypeError('Decoder error');\n  return opt_code_point || 0xFFFD;\n}\n\n//\n// 7. API\n//\n\n/** @const */ var DEFAULT_ENCODING = 'utf-8';\n\n// 7.1 Interface TextDecoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextDecoder(encoding, options) {\n  if (!(this instanceof TextDecoder)) {\n    return new TextDecoder(encoding, options);\n  }\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {boolean} */\n  this._BOMseen = false;\n  /** @private @type {?Decoder} */\n  this._decoder = null;\n  /** @private @type {boolean} */\n  this._fatal = Boolean(options['fatal']);\n  /** @private @type {boolean} */\n  this._ignoreBOM = Boolean(options['ignoreBOM']);\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n  Object.defineProperty(this, 'fatal', {value: this._fatal});\n  Object.defineProperty(this, 'ignoreBOM', {value: this._ignoreBOM});\n}\n\nTextDecoder.prototype = {\n  /**\n   * @param {ArrayBufferView=} input The buffer of bytes to decode.\n   * @param {Object=} options\n   * @return {string} The decoded string.\n   */\n  decode: function decode(input, options) {\n    var bytes;\n    if (typeof input === 'object' && input instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input);\n    } else if (typeof input === 'object' && 'buffer' in input &&\n               input.buffer instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input.buffer,\n                             input.byteOffset,\n                             input.byteLength);\n    } else {\n      bytes = new Uint8Array(0);\n    }\n\n    options = ToDictionary(options);\n\n    if (!this._streaming) {\n      this._decoder = new UTF8Decoder({fatal: this._fatal});\n      this._BOMseen = false;\n    }\n    this._streaming = Boolean(options['stream']);\n\n    var input_stream = new Stream(bytes);\n\n    var code_points = [];\n\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n\n    while (!input_stream.endOfStream()) {\n      result = this._decoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (result === null)\n        continue;\n      if (Array.isArray(result))\n        code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n      else\n        code_points.push(result);\n    }\n    if (!this._streaming) {\n      do {\n        result = this._decoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (result === null)\n          continue;\n        if (Array.isArray(result))\n          code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n        else\n          code_points.push(result);\n      } while (!input_stream.endOfStream());\n      this._decoder = null;\n    }\n\n    if (code_points.length) {\n      // If encoding is one of utf-8, utf-16be, and utf-16le, and\n      // ignore BOM flag and BOM seen flag are unset, run these\n      // subsubsteps:\n      if (['utf-8'].indexOf(this.encoding) !== -1 &&\n          !this._ignoreBOM && !this._BOMseen) {\n        // If token is U+FEFF, set BOM seen flag.\n        if (code_points[0] === 0xFEFF) {\n          this._BOMseen = true;\n          code_points.shift();\n        } else {\n          // Otherwise, if token is not end-of-stream, set BOM seen\n          // flag and append token to output.\n          this._BOMseen = true;\n        }\n      }\n    }\n\n    return codePointsToString(code_points);\n  }\n};\n\n// 7.2 Interface TextEncoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextEncoder(encoding, options) {\n  if (!(this instanceof TextEncoder))\n    return new TextEncoder(encoding, options);\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {?Encoder} */\n  this._encoder = null;\n  /** @private @type {{fatal: boolean}} */\n  this._options = {fatal: Boolean(options['fatal'])};\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n}\n\nTextEncoder.prototype = {\n  /**\n   * @param {string=} opt_string The string to encode.\n   * @param {Object=} options\n   * @return {Uint8Array} Encoded bytes, as a Uint8Array.\n   */\n  encode: function encode(opt_string, options) {\n    opt_string = opt_string ? String(opt_string) : '';\n    options = ToDictionary(options);\n\n    // NOTE: This option is nonstandard. None of the encodings\n    // permitted for encoding (i.e. UTF-8, UTF-16) are stateful,\n    // so streaming is not necessary.\n    if (!this._streaming)\n      this._encoder = new UTF8Encoder(this._options);\n    this._streaming = Boolean(options['stream']);\n\n    var bytes = [];\n    var input_stream = new Stream(stringToCodePoints(opt_string));\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n    while (!input_stream.endOfStream()) {\n      result = this._encoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (Array.isArray(result))\n        bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n      else\n        bytes.push(result);\n    }\n    if (!this._streaming) {\n      while (true) {\n        result = this._encoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (Array.isArray(result))\n          bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n        else\n          bytes.push(result);\n      }\n      this._encoder = null;\n    }\n    return new Uint8Array(bytes);\n  }\n};\n\n//\n// 8. The encoding\n//\n\n// 8.1 utf-8\n\n/**\n * @constructor\n * @implements {Decoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Decoder(options) {\n  var fatal = options.fatal;\n\n  // utf-8's decoder's has an associated utf-8 code point, utf-8\n  // bytes seen, and utf-8 bytes needed (all initially 0), a utf-8\n  // lower boundary (initially 0x80), and a utf-8 upper boundary\n  // (initially 0xBF).\n  var /** @type {number} */ utf8_code_point = 0,\n      /** @type {number} */ utf8_bytes_seen = 0,\n      /** @type {number} */ utf8_bytes_needed = 0,\n      /** @type {number} */ utf8_lower_boundary = 0x80,\n      /** @type {number} */ utf8_upper_boundary = 0xBF;\n\n  /**\n   * @param {Stream} stream The stream of bytes being decoded.\n   * @param {number} bite The next byte read from the stream.\n   * @return {?(number|!Array.<number>)} The next code point(s)\n   *     decoded, or null if not enough data exists in the input\n   *     stream to decode a complete code point.\n   */\n  this.handler = function(stream, bite) {\n    // 1. If byte is end-of-stream and utf-8 bytes needed is not 0,\n    // set utf-8 bytes needed to 0 and return error.\n    if (bite === end_of_stream && utf8_bytes_needed !== 0) {\n      utf8_bytes_needed = 0;\n      return decoderError(fatal);\n    }\n\n    // 2. If byte is end-of-stream, return finished.\n    if (bite === end_of_stream)\n      return finished;\n\n    // 3. If utf-8 bytes needed is 0, based on byte:\n    if (utf8_bytes_needed === 0) {\n\n      // 0x00 to 0x7F\n      if (inRange(bite, 0x00, 0x7F)) {\n        // Return a code point whose value is byte.\n        return bite;\n      }\n\n      // 0xC2 to 0xDF\n      if (inRange(bite, 0xC2, 0xDF)) {\n        // Set utf-8 bytes needed to 1 and utf-8 code point to byte\n        // − 0xC0.\n        utf8_bytes_needed = 1;\n        utf8_code_point = bite - 0xC0;\n      }\n\n      // 0xE0 to 0xEF\n      else if (inRange(bite, 0xE0, 0xEF)) {\n        // 1. If byte is 0xE0, set utf-8 lower boundary to 0xA0.\n        if (bite === 0xE0)\n          utf8_lower_boundary = 0xA0;\n        // 2. If byte is 0xED, set utf-8 upper boundary to 0x9F.\n        if (bite === 0xED)\n          utf8_upper_boundary = 0x9F;\n        // 3. Set utf-8 bytes needed to 2 and utf-8 code point to\n        // byte − 0xE0.\n        utf8_bytes_needed = 2;\n        utf8_code_point = bite - 0xE0;\n      }\n\n      // 0xF0 to 0xF4\n      else if (inRange(bite, 0xF0, 0xF4)) {\n        // 1. If byte is 0xF0, set utf-8 lower boundary to 0x90.\n        if (bite === 0xF0)\n          utf8_lower_boundary = 0x90;\n        // 2. If byte is 0xF4, set utf-8 upper boundary to 0x8F.\n        if (bite === 0xF4)\n          utf8_upper_boundary = 0x8F;\n        // 3. Set utf-8 bytes needed to 3 and utf-8 code point to\n        // byte − 0xF0.\n        utf8_bytes_needed = 3;\n        utf8_code_point = bite - 0xF0;\n      }\n\n      // Otherwise\n      else {\n        // Return error.\n        return decoderError(fatal);\n      }\n\n      // Then (byte is in the range 0xC2 to 0xF4) set utf-8 code\n      // point to utf-8 code point << (6 × utf-8 bytes needed) and\n      // return continue.\n      utf8_code_point = utf8_code_point << (6 * utf8_bytes_needed);\n      return null;\n    }\n\n    // 4. If byte is not in the range utf-8 lower boundary to utf-8\n    // upper boundary, run these substeps:\n    if (!inRange(bite, utf8_lower_boundary, utf8_upper_boundary)) {\n\n      // 1. Set utf-8 code point, utf-8 bytes needed, and utf-8\n      // bytes seen to 0, set utf-8 lower boundary to 0x80, and set\n      // utf-8 upper boundary to 0xBF.\n      utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n      utf8_lower_boundary = 0x80;\n      utf8_upper_boundary = 0xBF;\n\n      // 2. Prepend byte to stream.\n      stream.prepend(bite);\n\n      // 3. Return error.\n      return decoderError(fatal);\n    }\n\n    // 5. Set utf-8 lower boundary to 0x80 and utf-8 upper boundary\n    // to 0xBF.\n    utf8_lower_boundary = 0x80;\n    utf8_upper_boundary = 0xBF;\n\n    // 6. Increase utf-8 bytes seen by one and set utf-8 code point\n    // to utf-8 code point + (byte − 0x80) << (6 × (utf-8 bytes\n    // needed − utf-8 bytes seen)).\n    utf8_bytes_seen += 1;\n    utf8_code_point += (bite - 0x80) << (6 * (utf8_bytes_needed - utf8_bytes_seen));\n\n    // 7. If utf-8 bytes seen is not equal to utf-8 bytes needed,\n    // continue.\n    if (utf8_bytes_seen !== utf8_bytes_needed)\n      return null;\n\n    // 8. Let code point be utf-8 code point.\n    var code_point = utf8_code_point;\n\n    // 9. Set utf-8 code point, utf-8 bytes needed, and utf-8 bytes\n    // seen to 0.\n    utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n\n    // 10. Return a code point whose value is code point.\n    return code_point;\n  };\n}\n\n/**\n * @constructor\n * @implements {Encoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Encoder(options) {\n  var fatal = options.fatal;\n  /**\n   * @param {Stream} stream Input stream.\n   * @param {number} code_point Next code point read from the stream.\n   * @return {(number|!Array.<number>)} Byte(s) to emit.\n   */\n  this.handler = function(stream, code_point) {\n    // 1. If code point is end-of-stream, return finished.\n    if (code_point === end_of_stream)\n      return finished;\n\n    // 2. If code point is in the range U+0000 to U+007F, return a\n    // byte whose value is code point.\n    if (inRange(code_point, 0x0000, 0x007f))\n      return code_point;\n\n    // 3. Set count and offset based on the range code point is in:\n    var count, offset;\n    // U+0080 to U+07FF:    1 and 0xC0\n    if (inRange(code_point, 0x0080, 0x07FF)) {\n      count = 1;\n      offset = 0xC0;\n    }\n    // U+0800 to U+FFFF:    2 and 0xE0\n    else if (inRange(code_point, 0x0800, 0xFFFF)) {\n      count = 2;\n      offset = 0xE0;\n    }\n    // U+10000 to U+10FFFF: 3 and 0xF0\n    else if (inRange(code_point, 0x10000, 0x10FFFF)) {\n      count = 3;\n      offset = 0xF0;\n    }\n\n    // 4.Let bytes be a byte sequence whose first byte is (code\n    // point >> (6 × count)) + offset.\n    var bytes = [(code_point >> (6 * count)) + offset];\n\n    // 5. Run these substeps while count is greater than 0:\n    while (count > 0) {\n\n      // 1. Set temp to code point >> (6 × (count − 1)).\n      var temp = code_point >> (6 * (count - 1));\n\n      // 2. Append to bytes 0x80 | (temp & 0x3F).\n      bytes.push(0x80 | (temp & 0x3F));\n\n      // 3. Decrease count by one.\n      count -= 1;\n    }\n\n    // 6. Return bytes bytes, in order.\n    return bytes;\n  };\n}\n\nexports.TextEncoder = TextEncoder;\nexports.TextDecoder = TextDecoder;","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.deserializeUnchecked = exports.deserialize = exports.serialize = exports.BinaryReader = exports.BinaryWriter = exports.BorshError = exports.baseDecode = exports.baseEncode = void 0;\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst bs58_1 = __importDefault(require(\"bs58\"));\n// TODO: Make sure this polyfill not included when not required\nconst encoding = __importStar(require(\"text-encoding-utf-8\"));\nconst ResolvedTextDecoder = typeof TextDecoder !== \"function\" ? encoding.TextDecoder : TextDecoder;\nconst textDecoder = new ResolvedTextDecoder(\"utf-8\", { fatal: true });\nfunction baseEncode(value) {\n    if (typeof value === \"string\") {\n        value = Buffer.from(value, \"utf8\");\n    }\n    return bs58_1.default.encode(Buffer.from(value));\n}\nexports.baseEncode = baseEncode;\nfunction baseDecode(value) {\n    return Buffer.from(bs58_1.default.decode(value));\n}\nexports.baseDecode = baseDecode;\nconst INITIAL_LENGTH = 1024;\nclass BorshError extends Error {\n    constructor(message) {\n        super(message);\n        this.fieldPath = [];\n        this.originalMessage = message;\n    }\n    addToFieldPath(fieldName) {\n        this.fieldPath.splice(0, 0, fieldName);\n        // NOTE: Modifying message directly as jest doesn't use .toString()\n        this.message = this.originalMessage + \": \" + this.fieldPath.join(\".\");\n    }\n}\nexports.BorshError = BorshError;\n/// Binary encoder.\nclass BinaryWriter {\n    constructor() {\n        this.buf = Buffer.alloc(INITIAL_LENGTH);\n        this.length = 0;\n    }\n    maybeResize() {\n        if (this.buf.length < 16 + this.length) {\n            this.buf = Buffer.concat([this.buf, Buffer.alloc(INITIAL_LENGTH)]);\n        }\n    }\n    writeU8(value) {\n        this.maybeResize();\n        this.buf.writeUInt8(value, this.length);\n        this.length += 1;\n    }\n    writeU16(value) {\n        this.maybeResize();\n        this.buf.writeUInt16LE(value, this.length);\n        this.length += 2;\n    }\n    writeU32(value) {\n        this.maybeResize();\n        this.buf.writeUInt32LE(value, this.length);\n        this.length += 4;\n    }\n    writeU64(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 8)));\n    }\n    writeU128(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 16)));\n    }\n    writeU256(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 32)));\n    }\n    writeU512(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 64)));\n    }\n    writeBuffer(buffer) {\n        // Buffer.from is needed as this.buf.subarray can return plain Uint8Array in browser\n        this.buf = Buffer.concat([\n            Buffer.from(this.buf.subarray(0, this.length)),\n            buffer,\n            Buffer.alloc(INITIAL_LENGTH),\n        ]);\n        this.length += buffer.length;\n    }\n    writeString(str) {\n        this.maybeResize();\n        const b = Buffer.from(str, \"utf8\");\n        this.writeU32(b.length);\n        this.writeBuffer(b);\n    }\n    writeFixedArray(array) {\n        this.writeBuffer(Buffer.from(array));\n    }\n    writeArray(array, fn) {\n        this.maybeResize();\n        this.writeU32(array.length);\n        for (const elem of array) {\n            this.maybeResize();\n            fn(elem);\n        }\n    }\n    toArray() {\n        return this.buf.subarray(0, this.length);\n    }\n}\nexports.BinaryWriter = BinaryWriter;\nfunction handlingRangeError(target, propertyKey, propertyDescriptor) {\n    const originalMethod = propertyDescriptor.value;\n    propertyDescriptor.value = function (...args) {\n        try {\n            return originalMethod.apply(this, args);\n        }\n        catch (e) {\n            if (e instanceof RangeError) {\n                const code = e.code;\n                if ([\"ERR_BUFFER_OUT_OF_BOUNDS\", \"ERR_OUT_OF_RANGE\"].indexOf(code) >= 0) {\n                    throw new BorshError(\"Reached the end of buffer when deserializing\");\n                }\n            }\n            throw e;\n        }\n    };\n}\nclass BinaryReader {\n    constructor(buf) {\n        this.buf = buf;\n        this.offset = 0;\n    }\n    readU8() {\n        const value = this.buf.readUInt8(this.offset);\n        this.offset += 1;\n        return value;\n    }\n    readU16() {\n        const value = this.buf.readUInt16LE(this.offset);\n        this.offset += 2;\n        return value;\n    }\n    readU32() {\n        const value = this.buf.readUInt32LE(this.offset);\n        this.offset += 4;\n        return value;\n    }\n    readU64() {\n        const buf = this.readBuffer(8);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readU128() {\n        const buf = this.readBuffer(16);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readU256() {\n        const buf = this.readBuffer(32);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readU512() {\n        const buf = this.readBuffer(64);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readBuffer(len) {\n        if (this.offset + len > this.buf.length) {\n            throw new BorshError(`Expected buffer length ${len} isn't within bounds`);\n        }\n        const result = this.buf.slice(this.offset, this.offset + len);\n        this.offset += len;\n        return result;\n    }\n    readString() {\n        const len = this.readU32();\n        const buf = this.readBuffer(len);\n        try {\n            // NOTE: Using TextDecoder to fail on invalid UTF-8\n            return textDecoder.decode(buf);\n        }\n        catch (e) {\n            throw new BorshError(`Error decoding UTF-8 string: ${e}`);\n        }\n    }\n    readFixedArray(len) {\n        return new Uint8Array(this.readBuffer(len));\n    }\n    readArray(fn) {\n        const len = this.readU32();\n        const result = Array();\n        for (let i = 0; i < len; ++i) {\n            result.push(fn());\n        }\n        return result;\n    }\n}\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU8\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU16\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU32\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU64\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU128\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU256\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU512\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readString\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readFixedArray\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readArray\", null);\nexports.BinaryReader = BinaryReader;\nfunction capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n}\nfunction serializeField(schema, fieldName, value, fieldType, writer) {\n    try {\n        // TODO: Handle missing values properly (make sure they never result in just skipped write)\n        if (typeof fieldType === \"string\") {\n            writer[`write${capitalizeFirstLetter(fieldType)}`](value);\n        }\n        else if (fieldType instanceof Array) {\n            if (typeof fieldType[0] === \"number\") {\n                if (value.length !== fieldType[0]) {\n                    throw new BorshError(`Expecting byte array of length ${fieldType[0]}, but got ${value.length} bytes`);\n                }\n                writer.writeFixedArray(value);\n            }\n            else if (fieldType.length === 2 && typeof fieldType[1] === \"number\") {\n                if (value.length !== fieldType[1]) {\n                    throw new BorshError(`Expecting byte array of length ${fieldType[1]}, but got ${value.length} bytes`);\n                }\n                for (let i = 0; i < fieldType[1]; i++) {\n                    serializeField(schema, null, value[i], fieldType[0], writer);\n                }\n            }\n            else {\n                writer.writeArray(value, (item) => {\n                    serializeField(schema, fieldName, item, fieldType[0], writer);\n                });\n            }\n        }\n        else if (fieldType.kind !== undefined) {\n            switch (fieldType.kind) {\n                case \"option\": {\n                    if (value === null || value === undefined) {\n                        writer.writeU8(0);\n                    }\n                    else {\n                        writer.writeU8(1);\n                        serializeField(schema, fieldName, value, fieldType.type, writer);\n                    }\n                    break;\n                }\n                case \"map\": {\n                    writer.writeU32(value.size);\n                    value.forEach((val, key) => {\n                        serializeField(schema, fieldName, key, fieldType.key, writer);\n                        serializeField(schema, fieldName, val, fieldType.value, writer);\n                    });\n                    break;\n                }\n                default:\n                    throw new BorshError(`FieldType ${fieldType} unrecognized`);\n            }\n        }\n        else {\n            serializeStruct(schema, value, writer);\n        }\n    }\n    catch (error) {\n        if (error instanceof BorshError) {\n            error.addToFieldPath(fieldName);\n        }\n        throw error;\n    }\n}\nfunction serializeStruct(schema, obj, writer) {\n    if (typeof obj.borshSerialize === \"function\") {\n        obj.borshSerialize(writer);\n        return;\n    }\n    const structSchema = schema.get(obj.constructor);\n    if (!structSchema) {\n        throw new BorshError(`Class ${obj.constructor.name} is missing in schema`);\n    }\n    if (structSchema.kind === \"struct\") {\n        structSchema.fields.map(([fieldName, fieldType]) => {\n            serializeField(schema, fieldName, obj[fieldName], fieldType, writer);\n        });\n    }\n    else if (structSchema.kind === \"enum\") {\n        const name = obj[structSchema.field];\n        for (let idx = 0; idx < structSchema.values.length; ++idx) {\n            const [fieldName, fieldType] = structSchema.values[idx];\n            if (fieldName === name) {\n                writer.writeU8(idx);\n                serializeField(schema, fieldName, obj[fieldName], fieldType, writer);\n                break;\n            }\n        }\n    }\n    else {\n        throw new BorshError(`Unexpected schema kind: ${structSchema.kind} for ${obj.constructor.name}`);\n    }\n}\n/// Serialize given object using schema of the form:\n/// { class_name -> [ [field_name, field_type], .. ], .. }\nfunction serialize(schema, obj, Writer = BinaryWriter) {\n    const writer = new Writer();\n    serializeStruct(schema, obj, writer);\n    return writer.toArray();\n}\nexports.serialize = serialize;\nfunction deserializeField(schema, fieldName, fieldType, reader) {\n    try {\n        if (typeof fieldType === \"string\") {\n            return reader[`read${capitalizeFirstLetter(fieldType)}`]();\n        }\n        if (fieldType instanceof Array) {\n            if (typeof fieldType[0] === \"number\") {\n                return reader.readFixedArray(fieldType[0]);\n            }\n            else if (typeof fieldType[1] === \"number\") {\n                const arr = [];\n                for (let i = 0; i < fieldType[1]; i++) {\n                    arr.push(deserializeField(schema, null, fieldType[0], reader));\n                }\n                return arr;\n            }\n            else {\n                return reader.readArray(() => deserializeField(schema, fieldName, fieldType[0], reader));\n            }\n        }\n        if (fieldType.kind === \"option\") {\n            const option = reader.readU8();\n            if (option) {\n                return deserializeField(schema, fieldName, fieldType.type, reader);\n            }\n            return undefined;\n        }\n        if (fieldType.kind === \"map\") {\n            let map = new Map();\n            const length = reader.readU32();\n            for (let i = 0; i < length; i++) {\n                const key = deserializeField(schema, fieldName, fieldType.key, reader);\n                const val = deserializeField(schema, fieldName, fieldType.value, reader);\n                map.set(key, val);\n            }\n            return map;\n        }\n        return deserializeStruct(schema, fieldType, reader);\n    }\n    catch (error) {\n        if (error instanceof BorshError) {\n            error.addToFieldPath(fieldName);\n        }\n        throw error;\n    }\n}\nfunction deserializeStruct(schema, classType, reader) {\n    if (typeof classType.borshDeserialize === \"function\") {\n        return classType.borshDeserialize(reader);\n    }\n    const structSchema = schema.get(classType);\n    if (!structSchema) {\n        throw new BorshError(`Class ${classType.name} is missing in schema`);\n    }\n    if (structSchema.kind === \"struct\") {\n        const result = {};\n        for (const [fieldName, fieldType] of schema.get(classType).fields) {\n            result[fieldName] = deserializeField(schema, fieldName, fieldType, reader);\n        }\n        return new classType(result);\n    }\n    if (structSchema.kind === \"enum\") {\n        const idx = reader.readU8();\n        if (idx >= structSchema.values.length) {\n            throw new BorshError(`Enum index: ${idx} is out of range`);\n        }\n        const [fieldName, fieldType] = structSchema.values[idx];\n        const fieldValue = deserializeField(schema, fieldName, fieldType, reader);\n        return new classType({ [fieldName]: fieldValue });\n    }\n    throw new BorshError(`Unexpected schema kind: ${structSchema.kind} for ${classType.constructor.name}`);\n}\n/// Deserializes object from bytes using schema.\nfunction deserialize(schema, classType, buffer, Reader = BinaryReader) {\n    const reader = new Reader(buffer);\n    const result = deserializeStruct(schema, classType, reader);\n    if (reader.offset < buffer.length) {\n        throw new BorshError(`Unexpected ${buffer.length - reader.offset} bytes after deserialized data`);\n    }\n    return result;\n}\nexports.deserialize = deserialize;\n/// Deserializes object from bytes using schema, without checking the length read\nfunction deserializeUnchecked(schema, classType, buffer, Reader = BinaryReader) {\n    const reader = new Reader(buffer);\n    return deserializeStruct(schema, classType, reader);\n}\nexports.deserializeUnchecked = deserializeUnchecked;\n","import {Buffer} from 'buffer';\nimport {serialize, deserialize, deserializeUnchecked} from 'borsh';\n\n// Class wrapping a plain object\nexport class Struct {\n  constructor(properties: any) {\n    Object.assign(this, properties);\n  }\n\n  encode(): Buffer {\n    return Buffer.from(serialize(SOLANA_SCHEMA, this));\n  }\n\n  static decode(data: Buffer): any {\n    return deserialize(SOLANA_SCHEMA, this, data);\n  }\n\n  static decodeUnchecked(data: Buffer): any {\n    return deserializeUnchecked(SOLANA_SCHEMA, this, data);\n  }\n}\n\n// Class representing a Rust-compatible enum, since enums are only strings or\n// numbers in pure JS\nexport class Enum extends Struct {\n  enum: string = '';\n  constructor(properties: any) {\n    super(properties);\n    if (Object.keys(properties).length !== 1) {\n      throw new Error('Enum can only take single value');\n    }\n    Object.keys(properties).map(key => {\n      this.enum = key;\n    });\n  }\n}\n\nexport const SOLANA_SCHEMA: Map<Function, any> = new Map();\n","import BN from 'bn.js';\nimport bs58 from 'bs58';\nimport {Buffer} from 'buffer';\nimport {sha256} from '@noble/hashes/sha256';\n\nimport {isOnCurve} from './utils/ed25519';\nimport {Struct, SOLANA_SCHEMA} from './utils/borsh-schema';\nimport {toBuffer} from './utils/to-buffer';\n\n/**\n * Maximum length of derived pubkey seed\n */\nexport const MAX_SEED_LENGTH = 32;\n\n/**\n * Size of public key in bytes\n */\nexport const PUBLIC_KEY_LENGTH = 32;\n\n/**\n * Value to be converted into public key\n */\nexport type PublicKeyInitData =\n  | number\n  | string\n  | Uint8Array\n  | Array<number>\n  | PublicKeyData;\n\n/**\n * JSON object representation of PublicKey class\n */\nexport type PublicKeyData = {\n  /** @internal */\n  _bn: BN;\n};\n\nfunction isPublicKeyData(value: PublicKeyInitData): value is PublicKeyData {\n  return (value as PublicKeyData)._bn !== undefined;\n}\n\n// local counter used by PublicKey.unique()\nlet uniquePublicKeyCounter = 1;\n\n/**\n * A public key\n */\nexport class PublicKey extends Struct {\n  /** @internal */\n  _bn: BN;\n\n  /**\n   * Create a new PublicKey object\n   * @param value ed25519 public key as buffer or base-58 encoded string\n   */\n  constructor(value: PublicKeyInitData) {\n    super({});\n    if (isPublicKeyData(value)) {\n      this._bn = value._bn;\n    } else {\n      if (typeof value === 'string') {\n        // assume base 58 encoding by default\n        const decoded = bs58.decode(value);\n        if (decoded.length != PUBLIC_KEY_LENGTH) {\n          throw new Error(`Invalid public key input`);\n        }\n        this._bn = new BN(decoded);\n      } else {\n        this._bn = new BN(value);\n      }\n\n      if (this._bn.byteLength() > PUBLIC_KEY_LENGTH) {\n        throw new Error(`Invalid public key input`);\n      }\n    }\n  }\n\n  /**\n   * Returns a unique PublicKey for tests and benchmarks using a counter\n   */\n  static unique(): PublicKey {\n    const key = new PublicKey(uniquePublicKeyCounter);\n    uniquePublicKeyCounter += 1;\n    return new PublicKey(key.toBuffer());\n  }\n\n  /**\n   * Default public key value. The base58-encoded string representation is all ones (as seen below)\n   * The underlying BN number is 32 bytes that are all zeros\n   */\n  static default: PublicKey = new PublicKey('11111111111111111111111111111111');\n\n  /**\n   * Checks if two publicKeys are equal\n   */\n  equals(publicKey: PublicKey): boolean {\n    return this._bn.eq(publicKey._bn);\n  }\n\n  /**\n   * Return the base-58 representation of the public key\n   */\n  toBase58(): string {\n    return bs58.encode(this.toBytes());\n  }\n\n  toJSON(): string {\n    return this.toBase58();\n  }\n\n  /**\n   * Return the byte array representation of the public key in big endian\n   */\n  toBytes(): Uint8Array {\n    const buf = this.toBuffer();\n    return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength);\n  }\n\n  /**\n   * Return the Buffer representation of the public key in big endian\n   */\n  toBuffer(): Buffer {\n    const b = this._bn.toArrayLike(Buffer);\n    if (b.length === PUBLIC_KEY_LENGTH) {\n      return b;\n    }\n\n    const zeroPad = Buffer.alloc(32);\n    b.copy(zeroPad, 32 - b.length);\n    return zeroPad;\n  }\n\n  get [Symbol.toStringTag](): string {\n    return `PublicKey(${this.toString()})`;\n  }\n\n  /**\n   * Return the base-58 representation of the public key\n   */\n  toString(): string {\n    return this.toBase58();\n  }\n\n  /**\n   * Derive a public key from another key, a seed, and a program ID.\n   * The program ID will also serve as the owner of the public key, giving\n   * it permission to write data to the account.\n   */\n  /* eslint-disable require-await */\n  static async createWithSeed(\n    fromPublicKey: PublicKey,\n    seed: string,\n    programId: PublicKey,\n  ): Promise<PublicKey> {\n    const buffer = Buffer.concat([\n      fromPublicKey.toBuffer(),\n      Buffer.from(seed),\n      programId.toBuffer(),\n    ]);\n    const publicKeyBytes = sha256(buffer);\n    return new PublicKey(publicKeyBytes);\n  }\n\n  /**\n   * Derive a program address from seeds and a program ID.\n   */\n  /* eslint-disable require-await */\n  static createProgramAddressSync(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): PublicKey {\n    let buffer = Buffer.alloc(0);\n    seeds.forEach(function (seed) {\n      if (seed.length > MAX_SEED_LENGTH) {\n        throw new TypeError(`Max seed length exceeded`);\n      }\n      buffer = Buffer.concat([buffer, toBuffer(seed)]);\n    });\n    buffer = Buffer.concat([\n      buffer,\n      programId.toBuffer(),\n      Buffer.from('ProgramDerivedAddress'),\n    ]);\n    const publicKeyBytes = sha256(buffer);\n    if (isOnCurve(publicKeyBytes)) {\n      throw new Error(`Invalid seeds, address must fall off the curve`);\n    }\n    return new PublicKey(publicKeyBytes);\n  }\n\n  /**\n   * Async version of createProgramAddressSync\n   * For backwards compatibility\n   *\n   * @deprecated Use {@link createProgramAddressSync} instead\n   */\n  /* eslint-disable require-await */\n  static async createProgramAddress(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): Promise<PublicKey> {\n    return this.createProgramAddressSync(seeds, programId);\n  }\n\n  /**\n   * Find a valid program address\n   *\n   * Valid program addresses must fall off the ed25519 curve.  This function\n   * iterates a nonce until it finds one that when combined with the seeds\n   * results in a valid program address.\n   */\n  static findProgramAddressSync(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): [PublicKey, number] {\n    let nonce = 255;\n    let address;\n    while (nonce != 0) {\n      try {\n        const seedsWithNonce = seeds.concat(Buffer.from([nonce]));\n        address = this.createProgramAddressSync(seedsWithNonce, programId);\n      } catch (err) {\n        if (err instanceof TypeError) {\n          throw err;\n        }\n        nonce--;\n        continue;\n      }\n      return [address, nonce];\n    }\n    throw new Error(`Unable to find a viable program address nonce`);\n  }\n\n  /**\n   * Async version of findProgramAddressSync\n   * For backwards compatibility\n   *\n   * @deprecated Use {@link findProgramAddressSync} instead\n   */\n  static async findProgramAddress(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): Promise<[PublicKey, number]> {\n    return this.findProgramAddressSync(seeds, programId);\n  }\n\n  /**\n   * Check that a pubkey is on the ed25519 curve.\n   */\n  static isOnCurve(pubkeyData: PublicKeyInitData): boolean {\n    const pubkey = new PublicKey(pubkeyData);\n    return isOnCurve(pubkey.toBytes());\n  }\n}\n\nSOLANA_SCHEMA.set(PublicKey, {\n  kind: 'struct',\n  fields: [['_bn', 'u256']],\n});\n","import {Buffer} from 'buffer';\n\nimport {generatePrivateKey, getPublicKey} from './utils/ed25519';\nimport {toBuffer} from './utils/to-buffer';\nimport {PublicKey} from './publickey';\n\n/**\n * An account key pair (public and secret keys).\n *\n * @deprecated since v1.10.0, please use {@link Keypair} instead.\n */\nexport class Account {\n  /** @internal */\n  private _publicKey: Buffer;\n  /** @internal */\n  private _secretKey: Buffer;\n\n  /**\n   * Create a new Account object\n   *\n   * If the secretKey parameter is not provided a new key pair is randomly\n   * created for the account\n   *\n   * @param secretKey Secret key for the account\n   */\n  constructor(secretKey?: Uint8Array | Array<number>) {\n    if (secretKey) {\n      const secretKeyBuffer = toBuffer(secretKey);\n      if (secretKey.length !== 64) {\n        throw new Error('bad secret key size');\n      }\n      this._publicKey = secretKeyBuffer.slice(32, 64);\n      this._secretKey = secretKeyBuffer.slice(0, 32);\n    } else {\n      this._secretKey = toBuffer(generatePrivateKey());\n      this._publicKey = toBuffer(getPublicKey(this._secretKey));\n    }\n  }\n\n  /**\n   * The public key for this account\n   */\n  get publicKey(): PublicKey {\n    return new PublicKey(this._publicKey);\n  }\n\n  /**\n   * The **unencrypted** secret key for this account. The first 32 bytes\n   * is the private scalar and the last 32 bytes is the public key.\n   * Read more: https://blog.mozilla.org/warner/2011/11/29/ed25519-keys/\n   */\n  get secretKey(): Buffer {\n    return Buffer.concat([this._secretKey, this._publicKey], 64);\n  }\n}\n","import {PublicKey} from './publickey';\n\nexport const BPF_LOADER_DEPRECATED_PROGRAM_ID = new PublicKey(\n  'BPFLoader1111111111111111111111111111111111',\n);\n","/* The MIT License (MIT)\n *\n * Copyright 2015-2018 Peter A. Bigot\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n/**\n * Support for translating between Uint8Array instances and JavaScript\n * native types.\n *\n * {@link module:Layout~Layout|Layout} is the basis of a class\n * hierarchy that associates property names with sequences of encoded\n * bytes.\n *\n * Layouts are supported for these scalar (numeric) types:\n * * {@link module:Layout~UInt|Unsigned integers in little-endian\n *   format} with {@link module:Layout.u8|8-bit}, {@link\n *   module:Layout.u16|16-bit}, {@link module:Layout.u24|24-bit},\n *   {@link module:Layout.u32|32-bit}, {@link\n *   module:Layout.u40|40-bit}, and {@link module:Layout.u48|48-bit}\n *   representation ranges;\n * * {@link module:Layout~UIntBE|Unsigned integers in big-endian\n *   format} with {@link module:Layout.u16be|16-bit}, {@link\n *   module:Layout.u24be|24-bit}, {@link module:Layout.u32be|32-bit},\n *   {@link module:Layout.u40be|40-bit}, and {@link\n *   module:Layout.u48be|48-bit} representation ranges;\n * * {@link module:Layout~Int|Signed integers in little-endian\n *   format} with {@link module:Layout.s8|8-bit}, {@link\n *   module:Layout.s16|16-bit}, {@link module:Layout.s24|24-bit},\n *   {@link module:Layout.s32|32-bit}, {@link\n *   module:Layout.s40|40-bit}, and {@link module:Layout.s48|48-bit}\n *   representation ranges;\n * * {@link module:Layout~IntBE|Signed integers in big-endian format}\n *   with {@link module:Layout.s16be|16-bit}, {@link\n *   module:Layout.s24be|24-bit}, {@link module:Layout.s32be|32-bit},\n *   {@link module:Layout.s40be|40-bit}, and {@link\n *   module:Layout.s48be|48-bit} representation ranges;\n * * 64-bit integral values that decode to an exact (if magnitude is\n *   less than 2^53) or nearby integral Number in {@link\n *   module:Layout.nu64|unsigned little-endian}, {@link\n *   module:Layout.nu64be|unsigned big-endian}, {@link\n *   module:Layout.ns64|signed little-endian}, and {@link\n *   module:Layout.ns64be|unsigned big-endian} encodings;\n * * 32-bit floating point values with {@link\n *   module:Layout.f32|little-endian} and {@link\n *   module:Layout.f32be|big-endian} representations;\n * * 64-bit floating point values with {@link\n *   module:Layout.f64|little-endian} and {@link\n *   module:Layout.f64be|big-endian} representations;\n * * {@link module:Layout.const|Constants} that take no space in the\n *   encoded expression.\n *\n * and for these aggregate types:\n * * {@link module:Layout.seq|Sequence}s of instances of a {@link\n *   module:Layout~Layout|Layout}, with JavaScript representation as\n *   an Array and constant or data-dependent {@link\n *   module:Layout~Sequence#count|length};\n * * {@link module:Layout.struct|Structure}s that aggregate a\n *   heterogeneous sequence of {@link module:Layout~Layout|Layout}\n *   instances, with JavaScript representation as an Object;\n * * {@link module:Layout.union|Union}s that support multiple {@link\n *   module:Layout~VariantLayout|variant layouts} over a fixed\n *   (padded) or variable (not padded) span of bytes, using an\n *   unsigned integer at the start of the data or a separate {@link\n *   module:Layout.unionLayoutDiscriminator|layout element} to\n *   determine which layout to use when interpreting the buffer\n *   contents;\n * * {@link module:Layout.bits|BitStructure}s that contain a sequence\n *   of individual {@link\n *   module:Layout~BitStructure#addField|BitField}s packed into an 8,\n *   16, 24, or 32-bit unsigned integer starting at the least- or\n *   most-significant bit;\n * * {@link module:Layout.cstr|C strings} of varying length;\n * * {@link module:Layout.blob|Blobs} of fixed- or variable-{@link\n *   module:Layout~Blob#length|length} raw data.\n *\n * All {@link module:Layout~Layout|Layout} instances are immutable\n * after construction, to prevent internal state from becoming\n * inconsistent.\n *\n * @local Layout\n * @local ExternalLayout\n * @local GreedyCount\n * @local OffsetLayout\n * @local UInt\n * @local UIntBE\n * @local Int\n * @local IntBE\n * @local NearUInt64\n * @local NearUInt64BE\n * @local NearInt64\n * @local NearInt64BE\n * @local Float\n * @local FloatBE\n * @local Double\n * @local DoubleBE\n * @local Sequence\n * @local Structure\n * @local UnionDiscriminator\n * @local UnionLayoutDiscriminator\n * @local Union\n * @local VariantLayout\n * @local BitStructure\n * @local BitField\n * @local Boolean\n * @local Blob\n * @local CString\n * @local Constant\n * @local bindConstructorLayout\n * @module Layout\n * @license MIT\n * @author Peter A. Bigot\n * @see {@link https://github.com/pabigot/buffer-layout|buffer-layout on GitHub}\n */\n'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.s16 = exports.s8 = exports.nu64be = exports.u48be = exports.u40be = exports.u32be = exports.u24be = exports.u16be = exports.nu64 = exports.u48 = exports.u40 = exports.u32 = exports.u24 = exports.u16 = exports.u8 = exports.offset = exports.greedy = exports.Constant = exports.UTF8 = exports.CString = exports.Blob = exports.Boolean = exports.BitField = exports.BitStructure = exports.VariantLayout = exports.Union = exports.UnionLayoutDiscriminator = exports.UnionDiscriminator = exports.Structure = exports.Sequence = exports.DoubleBE = exports.Double = exports.FloatBE = exports.Float = exports.NearInt64BE = exports.NearInt64 = exports.NearUInt64BE = exports.NearUInt64 = exports.IntBE = exports.Int = exports.UIntBE = exports.UInt = exports.OffsetLayout = exports.GreedyCount = exports.ExternalLayout = exports.bindConstructorLayout = exports.nameWithProperty = exports.Layout = exports.uint8ArrayToBuffer = exports.checkUint8Array = void 0;\nexports.constant = exports.utf8 = exports.cstr = exports.blob = exports.unionLayoutDiscriminator = exports.union = exports.seq = exports.bits = exports.struct = exports.f64be = exports.f64 = exports.f32be = exports.f32 = exports.ns64be = exports.s48be = exports.s40be = exports.s32be = exports.s24be = exports.s16be = exports.ns64 = exports.s48 = exports.s40 = exports.s32 = exports.s24 = void 0;\nconst buffer_1 = require(\"buffer\");\n/* Check if a value is a Uint8Array.\n *\n * @ignore */\nfunction checkUint8Array(b) {\n    if (!(b instanceof Uint8Array)) {\n        throw new TypeError('b must be a Uint8Array');\n    }\n}\nexports.checkUint8Array = checkUint8Array;\n/* Create a Buffer instance from a Uint8Array.\n *\n * @ignore */\nfunction uint8ArrayToBuffer(b) {\n    checkUint8Array(b);\n    return buffer_1.Buffer.from(b.buffer, b.byteOffset, b.length);\n}\nexports.uint8ArrayToBuffer = uint8ArrayToBuffer;\n/**\n * Base class for layout objects.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support the {@link\n * Layout#encode|encode} or {@link Layout#decode|decode} functions.\n *\n * @param {Number} span - Initializer for {@link Layout#span|span}.  The\n * parameter must be an integer; a negative value signifies that the\n * span is {@link Layout#getSpan|value-specific}.\n *\n * @param {string} [property] - Initializer for {@link\n * Layout#property|property}.\n *\n * @abstract\n */\nclass Layout {\n    constructor(span, property) {\n        if (!Number.isInteger(span)) {\n            throw new TypeError('span must be an integer');\n        }\n        /** The span of the layout in bytes.\n         *\n         * Positive values are generally expected.\n         *\n         * Zero will only appear in {@link Constant}s and in {@link\n         * Sequence}s where the {@link Sequence#count|count} is zero.\n         *\n         * A negative value indicates that the span is value-specific, and\n         * must be obtained using {@link Layout#getSpan|getSpan}. */\n        this.span = span;\n        /** The property name used when this layout is represented in an\n         * Object.\n         *\n         * Used only for layouts that {@link Layout#decode|decode} to Object\n         * instances.  If left undefined the span of the unnamed layout will\n         * be treated as padding: it will not be mutated by {@link\n         * Layout#encode|encode} nor represented as a property in the\n         * decoded Object. */\n        this.property = property;\n    }\n    /** Function to create an Object into which decoded properties will\n     * be written.\n     *\n     * Used only for layouts that {@link Layout#decode|decode} to Object\n     * instances, which means:\n     * * {@link Structure}\n     * * {@link Union}\n     * * {@link VariantLayout}\n     * * {@link BitStructure}\n     *\n     * If left undefined the JavaScript representation of these layouts\n     * will be Object instances.\n     *\n     * See {@link bindConstructorLayout}.\n     */\n    makeDestinationObject() {\n        return {};\n    }\n    /**\n     * Calculate the span of a specific instance of a layout.\n     *\n     * @param {Uint8Array} b - the buffer that contains an encoded instance.\n     *\n     * @param {Number} [offset] - the offset at which the encoded instance\n     * starts.  If absent a zero offset is inferred.\n     *\n     * @return {Number} - the number of bytes covered by the layout\n     * instance.  If this method is not overridden in a subclass the\n     * definition-time constant {@link Layout#span|span} will be\n     * returned.\n     *\n     * @throws {RangeError} - if the length of the value cannot be\n     * determined.\n     */\n    getSpan(b, offset) {\n        if (0 > this.span) {\n            throw new RangeError('indeterminate span');\n        }\n        return this.span;\n    }\n    /**\n     * Replicate the layout using a new property.\n     *\n     * This function must be used to get a structurally-equivalent layout\n     * with a different name since all {@link Layout} instances are\n     * immutable.\n     *\n     * **NOTE** This is a shallow copy.  All fields except {@link\n     * Layout#property|property} are strictly equal to the origin layout.\n     *\n     * @param {String} property - the value for {@link\n     * Layout#property|property} in the replica.\n     *\n     * @returns {Layout} - the copy with {@link Layout#property|property}\n     * set to `property`.\n     */\n    replicate(property) {\n        const rv = Object.create(this.constructor.prototype);\n        Object.assign(rv, this);\n        rv.property = property;\n        return rv;\n    }\n    /**\n     * Create an object from layout properties and an array of values.\n     *\n     * **NOTE** This function returns `undefined` if invoked on a layout\n     * that does not return its value as an Object.  Objects are\n     * returned for things that are a {@link Structure}, which includes\n     * {@link VariantLayout|variant layouts} if they are structures, and\n     * excludes {@link Union}s.  If you want this feature for a union\n     * you must use {@link Union.getVariant|getVariant} to select the\n     * desired layout.\n     *\n     * @param {Array} values - an array of values that correspond to the\n     * default order for properties.  As with {@link Layout#decode|decode}\n     * layout elements that have no property name are skipped when\n     * iterating over the array values.  Only the top-level properties are\n     * assigned; arguments are not assigned to properties of contained\n     * layouts.  Any unused values are ignored.\n     *\n     * @return {(Object|undefined)}\n     */\n    fromArray(values) {\n        return undefined;\n    }\n}\nexports.Layout = Layout;\n/* Provide text that carries a name (such as for a function that will\n * be throwing an error) annotated with the property of a given layout\n * (such as one for which the value was unacceptable).\n *\n * @ignore */\nfunction nameWithProperty(name, lo) {\n    if (lo.property) {\n        return name + '[' + lo.property + ']';\n    }\n    return name;\n}\nexports.nameWithProperty = nameWithProperty;\n/**\n * Augment a class so that instances can be encoded/decoded using a\n * given layout.\n *\n * Calling this function couples `Class` with `layout` in several ways:\n *\n * * `Class.layout_` becomes a static member property equal to `layout`;\n * * `layout.boundConstructor_` becomes a static member property equal\n *    to `Class`;\n * * The {@link Layout#makeDestinationObject|makeDestinationObject()}\n *   property of `layout` is set to a function that returns a `new\n *   Class()`;\n * * `Class.decode(b, offset)` becomes a static member function that\n *   delegates to {@link Layout#decode|layout.decode}.  The\n *   synthesized function may be captured and extended.\n * * `Class.prototype.encode(b, offset)` provides an instance member\n *   function that delegates to {@link Layout#encode|layout.encode}\n *   with `src` set to `this`.  The synthesized function may be\n *   captured and extended, but when the extension is invoked `this`\n *   must be explicitly bound to the instance.\n *\n * @param {class} Class - a JavaScript class with a nullary\n * constructor.\n *\n * @param {Layout} layout - the {@link Layout} instance used to encode\n * instances of `Class`.\n */\n// `Class` must be a constructor Function, but the assignment of a `layout_` property to it makes it difficult to type\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nfunction bindConstructorLayout(Class, layout) {\n    if ('function' !== typeof Class) {\n        throw new TypeError('Class must be constructor');\n    }\n    if (Object.prototype.hasOwnProperty.call(Class, 'layout_')) {\n        throw new Error('Class is already bound to a layout');\n    }\n    if (!(layout && (layout instanceof Layout))) {\n        throw new TypeError('layout must be a Layout');\n    }\n    if (Object.prototype.hasOwnProperty.call(layout, 'boundConstructor_')) {\n        throw new Error('layout is already bound to a constructor');\n    }\n    Class.layout_ = layout;\n    layout.boundConstructor_ = Class;\n    layout.makeDestinationObject = (() => new Class());\n    Object.defineProperty(Class.prototype, 'encode', {\n        value(b, offset) {\n            return layout.encode(this, b, offset);\n        },\n        writable: true,\n    });\n    Object.defineProperty(Class, 'decode', {\n        value(b, offset) {\n            return layout.decode(b, offset);\n        },\n        writable: true,\n    });\n}\nexports.bindConstructorLayout = bindConstructorLayout;\n/**\n * An object that behaves like a layout but does not consume space\n * within its containing layout.\n *\n * This is primarily used to obtain metadata about a member, such as a\n * {@link OffsetLayout} that can provide data about a {@link\n * Layout#getSpan|value-specific span}.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support {@link\n * ExternalLayout#isCount|isCount} or other {@link Layout} functions.\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @abstract\n * @augments {Layout}\n */\nclass ExternalLayout extends Layout {\n    /**\n     * Return `true` iff the external layout decodes to an unsigned\n     * integer layout.\n     *\n     * In that case it can be used as the source of {@link\n     * Sequence#count|Sequence counts}, {@link Blob#length|Blob lengths},\n     * or as {@link UnionLayoutDiscriminator#layout|external union\n     * discriminators}.\n     *\n     * @abstract\n     */\n    isCount() {\n        throw new Error('ExternalLayout is abstract');\n    }\n}\nexports.ExternalLayout = ExternalLayout;\n/**\n * An {@link ExternalLayout} that determines its {@link\n * Layout#decode|value} based on offset into and length of the buffer\n * on which it is invoked.\n *\n * *Factory*: {@link module:Layout.greedy|greedy}\n *\n * @param {Number} [elementSpan] - initializer for {@link\n * GreedyCount#elementSpan|elementSpan}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {ExternalLayout}\n */\nclass GreedyCount extends ExternalLayout {\n    constructor(elementSpan = 1, property) {\n        if ((!Number.isInteger(elementSpan)) || (0 >= elementSpan)) {\n            throw new TypeError('elementSpan must be a (positive) integer');\n        }\n        super(-1, property);\n        /** The layout for individual elements of the sequence.  The value\n         * must be a positive integer.  If not provided, the value will be\n         * 1. */\n        this.elementSpan = elementSpan;\n    }\n    /** @override */\n    isCount() {\n        return true;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        checkUint8Array(b);\n        const rem = b.length - offset;\n        return Math.floor(rem / this.elementSpan);\n    }\n    /** @override */\n    encode(src, b, offset) {\n        return 0;\n    }\n}\nexports.GreedyCount = GreedyCount;\n/**\n * An {@link ExternalLayout} that supports accessing a {@link Layout}\n * at a fixed offset from the start of another Layout.  The offset may\n * be before, within, or after the base layout.\n *\n * *Factory*: {@link module:Layout.offset|offset}\n *\n * @param {Layout} layout - initializer for {@link\n * OffsetLayout#layout|layout}, modulo `property`.\n *\n * @param {Number} [offset] - Initializes {@link\n * OffsetLayout#offset|offset}.  Defaults to zero.\n *\n * @param {string} [property] - Optional new property name for a\n * {@link Layout#replicate| replica} of `layout` to be used as {@link\n * OffsetLayout#layout|layout}.  If not provided the `layout` is used\n * unchanged.\n *\n * @augments {Layout}\n */\nclass OffsetLayout extends ExternalLayout {\n    constructor(layout, offset = 0, property) {\n        if (!(layout instanceof Layout)) {\n            throw new TypeError('layout must be a Layout');\n        }\n        if (!Number.isInteger(offset)) {\n            throw new TypeError('offset must be integer or undefined');\n        }\n        super(layout.span, property || layout.property);\n        /** The subordinated layout. */\n        this.layout = layout;\n        /** The location of {@link OffsetLayout#layout} relative to the\n         * start of another layout.\n         *\n         * The value may be positive or negative, but an error will thrown\n         * if at the point of use it goes outside the span of the Uint8Array\n         * being accessed.  */\n        this.offset = offset;\n    }\n    /** @override */\n    isCount() {\n        return ((this.layout instanceof UInt)\n            || (this.layout instanceof UIntBE));\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return this.layout.decode(b, offset + this.offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        return this.layout.encode(src, b, offset + this.offset);\n    }\n}\nexports.OffsetLayout = OffsetLayout;\n/**\n * Represent an unsigned integer in little-endian format.\n *\n * *Factory*: {@link module:Layout.u8|u8}, {@link\n *  module:Layout.u16|u16}, {@link module:Layout.u24|u24}, {@link\n *  module:Layout.u32|u32}, {@link module:Layout.u40|u40}, {@link\n *  module:Layout.u48|u48}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UInt extends Layout {\n    constructor(span, property) {\n        super(span, property);\n        if (6 < this.span) {\n            throw new RangeError('span must not exceed 6 bytes');\n        }\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readUIntLE(offset, this.span);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeUIntLE(src, offset, this.span);\n        return this.span;\n    }\n}\nexports.UInt = UInt;\n/**\n * Represent an unsigned integer in big-endian format.\n *\n * *Factory*: {@link module:Layout.u8be|u8be}, {@link\n * module:Layout.u16be|u16be}, {@link module:Layout.u24be|u24be},\n * {@link module:Layout.u32be|u32be}, {@link\n * module:Layout.u40be|u40be}, {@link module:Layout.u48be|u48be}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UIntBE extends Layout {\n    constructor(span, property) {\n        super(span, property);\n        if (6 < this.span) {\n            throw new RangeError('span must not exceed 6 bytes');\n        }\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readUIntBE(offset, this.span);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeUIntBE(src, offset, this.span);\n        return this.span;\n    }\n}\nexports.UIntBE = UIntBE;\n/**\n * Represent a signed integer in little-endian format.\n *\n * *Factory*: {@link module:Layout.s8|s8}, {@link\n *  module:Layout.s16|s16}, {@link module:Layout.s24|s24}, {@link\n *  module:Layout.s32|s32}, {@link module:Layout.s40|s40}, {@link\n *  module:Layout.s48|s48}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Int extends Layout {\n    constructor(span, property) {\n        super(span, property);\n        if (6 < this.span) {\n            throw new RangeError('span must not exceed 6 bytes');\n        }\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readIntLE(offset, this.span);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeIntLE(src, offset, this.span);\n        return this.span;\n    }\n}\nexports.Int = Int;\n/**\n * Represent a signed integer in big-endian format.\n *\n * *Factory*: {@link module:Layout.s8be|s8be}, {@link\n * module:Layout.s16be|s16be}, {@link module:Layout.s24be|s24be},\n * {@link module:Layout.s32be|s32be}, {@link\n * module:Layout.s40be|s40be}, {@link module:Layout.s48be|s48be}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass IntBE extends Layout {\n    constructor(span, property) {\n        super(span, property);\n        if (6 < this.span) {\n            throw new RangeError('span must not exceed 6 bytes');\n        }\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readIntBE(offset, this.span);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeIntBE(src, offset, this.span);\n        return this.span;\n    }\n}\nexports.IntBE = IntBE;\nconst V2E32 = Math.pow(2, 32);\n/* True modulus high and low 32-bit words, where low word is always\n * non-negative. */\nfunction divmodInt64(src) {\n    const hi32 = Math.floor(src / V2E32);\n    const lo32 = src - (hi32 * V2E32);\n    return { hi32, lo32 };\n}\n/* Reconstruct Number from quotient and non-negative remainder */\nfunction roundedInt64(hi32, lo32) {\n    return hi32 * V2E32 + lo32;\n}\n/**\n * Represent an unsigned 64-bit integer in little-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.nu64|nu64}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearUInt64 extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const buffer = uint8ArrayToBuffer(b);\n        const lo32 = buffer.readUInt32LE(offset);\n        const hi32 = buffer.readUInt32LE(offset + 4);\n        return roundedInt64(hi32, lo32);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        const split = divmodInt64(src);\n        const buffer = uint8ArrayToBuffer(b);\n        buffer.writeUInt32LE(split.lo32, offset);\n        buffer.writeUInt32LE(split.hi32, offset + 4);\n        return 8;\n    }\n}\nexports.NearUInt64 = NearUInt64;\n/**\n * Represent an unsigned 64-bit integer in big-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.nu64be|nu64be}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearUInt64BE extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const buffer = uint8ArrayToBuffer(b);\n        const hi32 = buffer.readUInt32BE(offset);\n        const lo32 = buffer.readUInt32BE(offset + 4);\n        return roundedInt64(hi32, lo32);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        const split = divmodInt64(src);\n        const buffer = uint8ArrayToBuffer(b);\n        buffer.writeUInt32BE(split.hi32, offset);\n        buffer.writeUInt32BE(split.lo32, offset + 4);\n        return 8;\n    }\n}\nexports.NearUInt64BE = NearUInt64BE;\n/**\n * Represent a signed 64-bit integer in little-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.ns64|ns64}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearInt64 extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const buffer = uint8ArrayToBuffer(b);\n        const lo32 = buffer.readUInt32LE(offset);\n        const hi32 = buffer.readInt32LE(offset + 4);\n        return roundedInt64(hi32, lo32);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        const split = divmodInt64(src);\n        const buffer = uint8ArrayToBuffer(b);\n        buffer.writeUInt32LE(split.lo32, offset);\n        buffer.writeInt32LE(split.hi32, offset + 4);\n        return 8;\n    }\n}\nexports.NearInt64 = NearInt64;\n/**\n * Represent a signed 64-bit integer in big-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.ns64be|ns64be}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearInt64BE extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const buffer = uint8ArrayToBuffer(b);\n        const hi32 = buffer.readInt32BE(offset);\n        const lo32 = buffer.readUInt32BE(offset + 4);\n        return roundedInt64(hi32, lo32);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        const split = divmodInt64(src);\n        const buffer = uint8ArrayToBuffer(b);\n        buffer.writeInt32BE(split.hi32, offset);\n        buffer.writeUInt32BE(split.lo32, offset + 4);\n        return 8;\n    }\n}\nexports.NearInt64BE = NearInt64BE;\n/**\n * Represent a 32-bit floating point number in little-endian format.\n *\n * *Factory*: {@link module:Layout.f32|f32}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Float extends Layout {\n    constructor(property) {\n        super(4, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readFloatLE(offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeFloatLE(src, offset);\n        return 4;\n    }\n}\nexports.Float = Float;\n/**\n * Represent a 32-bit floating point number in big-endian format.\n *\n * *Factory*: {@link module:Layout.f32be|f32be}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass FloatBE extends Layout {\n    constructor(property) {\n        super(4, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readFloatBE(offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeFloatBE(src, offset);\n        return 4;\n    }\n}\nexports.FloatBE = FloatBE;\n/**\n * Represent a 64-bit floating point number in little-endian format.\n *\n * *Factory*: {@link module:Layout.f64|f64}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Double extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readDoubleLE(offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeDoubleLE(src, offset);\n        return 8;\n    }\n}\nexports.Double = Double;\n/**\n * Represent a 64-bit floating point number in big-endian format.\n *\n * *Factory*: {@link module:Layout.f64be|f64be}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass DoubleBE extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readDoubleBE(offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeDoubleBE(src, offset);\n        return 8;\n    }\n}\nexports.DoubleBE = DoubleBE;\n/**\n * Represent a contiguous sequence of a specific layout as an Array.\n *\n * *Factory*: {@link module:Layout.seq|seq}\n *\n * @param {Layout} elementLayout - initializer for {@link\n * Sequence#elementLayout|elementLayout}.\n *\n * @param {(Number|ExternalLayout)} count - initializer for {@link\n * Sequence#count|count}.  The parameter must be either a positive\n * integer or an instance of {@link ExternalLayout}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Sequence extends Layout {\n    constructor(elementLayout, count, property) {\n        if (!(elementLayout instanceof Layout)) {\n            throw new TypeError('elementLayout must be a Layout');\n        }\n        if (!(((count instanceof ExternalLayout) && count.isCount())\n            || (Number.isInteger(count) && (0 <= count)))) {\n            throw new TypeError('count must be non-negative integer '\n                + 'or an unsigned integer ExternalLayout');\n        }\n        let span = -1;\n        if ((!(count instanceof ExternalLayout))\n            && (0 < elementLayout.span)) {\n            span = count * elementLayout.span;\n        }\n        super(span, property);\n        /** The layout for individual elements of the sequence. */\n        this.elementLayout = elementLayout;\n        /** The number of elements in the sequence.\n         *\n         * This will be either a non-negative integer or an instance of\n         * {@link ExternalLayout} for which {@link\n         * ExternalLayout#isCount|isCount()} is `true`. */\n        this.count = count;\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        if (0 <= this.span) {\n            return this.span;\n        }\n        let span = 0;\n        let count = this.count;\n        if (count instanceof ExternalLayout) {\n            count = count.decode(b, offset);\n        }\n        if (0 < this.elementLayout.span) {\n            span = count * this.elementLayout.span;\n        }\n        else {\n            let idx = 0;\n            while (idx < count) {\n                span += this.elementLayout.getSpan(b, offset + span);\n                ++idx;\n            }\n        }\n        return span;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const rv = [];\n        let i = 0;\n        let count = this.count;\n        if (count instanceof ExternalLayout) {\n            count = count.decode(b, offset);\n        }\n        while (i < count) {\n            rv.push(this.elementLayout.decode(b, offset));\n            offset += this.elementLayout.getSpan(b, offset);\n            i += 1;\n        }\n        return rv;\n    }\n    /** Implement {@link Layout#encode|encode} for {@link Sequence}.\n     *\n     * **NOTE** If `src` is shorter than {@link Sequence#count|count} then\n     * the unused space in the buffer is left unchanged.  If `src` is\n     * longer than {@link Sequence#count|count} the unneeded elements are\n     * ignored.\n     *\n     * **NOTE** If {@link Layout#count|count} is an instance of {@link\n     * ExternalLayout} then the length of `src` will be encoded as the\n     * count after `src` is encoded. */\n    encode(src, b, offset = 0) {\n        const elo = this.elementLayout;\n        const span = src.reduce((span, v) => {\n            return span + elo.encode(v, b, offset + span);\n        }, 0);\n        if (this.count instanceof ExternalLayout) {\n            this.count.encode(src.length, b, offset);\n        }\n        return span;\n    }\n}\nexports.Sequence = Sequence;\n/**\n * Represent a contiguous sequence of arbitrary layout elements as an\n * Object.\n *\n * *Factory*: {@link module:Layout.struct|struct}\n *\n * **NOTE** The {@link Layout#span|span} of the structure is variable\n * if any layout in {@link Structure#fields|fields} has a variable\n * span.  When {@link Layout#encode|encoding} we must have a value for\n * all variable-length fields, or we wouldn't be able to figure out\n * how much space to use for storage.  We can only identify the value\n * for a field when it has a {@link Layout#property|property}.  As\n * such, although a structure may contain both unnamed fields and\n * variable-length fields, it cannot contain an unnamed\n * variable-length field.\n *\n * @param {Layout[]} fields - initializer for {@link\n * Structure#fields|fields}.  An error is raised if this contains a\n * variable-length field for which a {@link Layout#property|property}\n * is not defined.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @param {Boolean} [decodePrefixes] - initializer for {@link\n * Structure#decodePrefixes|property}.\n *\n * @throws {Error} - if `fields` contains an unnamed variable-length\n * layout.\n *\n * @augments {Layout}\n */\nclass Structure extends Layout {\n    constructor(fields, property, decodePrefixes) {\n        if (!(Array.isArray(fields)\n            && fields.reduce((acc, v) => acc && (v instanceof Layout), true))) {\n            throw new TypeError('fields must be array of Layout instances');\n        }\n        if (('boolean' === typeof property)\n            && (undefined === decodePrefixes)) {\n            decodePrefixes = property;\n            property = undefined;\n        }\n        /* Verify absence of unnamed variable-length fields. */\n        for (const fd of fields) {\n            if ((0 > fd.span)\n                && (undefined === fd.property)) {\n                throw new Error('fields cannot contain unnamed variable-length layout');\n            }\n        }\n        let span = -1;\n        try {\n            span = fields.reduce((span, fd) => span + fd.getSpan(), 0);\n        }\n        catch (e) {\n            // ignore error\n        }\n        super(span, property);\n        /** The sequence of {@link Layout} values that comprise the\n         * structure.\n         *\n         * The individual elements need not be the same type, and may be\n         * either scalar or aggregate layouts.  If a member layout leaves\n         * its {@link Layout#property|property} undefined the\n         * corresponding region of the buffer associated with the element\n         * will not be mutated.\n         *\n         * @type {Layout[]} */\n        this.fields = fields;\n        /** Control behavior of {@link Layout#decode|decode()} given short\n         * buffers.\n         *\n         * In some situations a structure many be extended with additional\n         * fields over time, with older installations providing only a\n         * prefix of the full structure.  If this property is `true`\n         * decoding will accept those buffers and leave subsequent fields\n         * undefined, as long as the buffer ends at a field boundary.\n         * Defaults to `false`. */\n        this.decodePrefixes = !!decodePrefixes;\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        if (0 <= this.span) {\n            return this.span;\n        }\n        let span = 0;\n        try {\n            span = this.fields.reduce((span, fd) => {\n                const fsp = fd.getSpan(b, offset);\n                offset += fsp;\n                return span + fsp;\n            }, 0);\n        }\n        catch (e) {\n            throw new RangeError('indeterminate span');\n        }\n        return span;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        checkUint8Array(b);\n        const dest = this.makeDestinationObject();\n        for (const fd of this.fields) {\n            if (undefined !== fd.property) {\n                dest[fd.property] = fd.decode(b, offset);\n            }\n            offset += fd.getSpan(b, offset);\n            if (this.decodePrefixes\n                && (b.length === offset)) {\n                break;\n            }\n        }\n        return dest;\n    }\n    /** Implement {@link Layout#encode|encode} for {@link Structure}.\n     *\n     * If `src` is missing a property for a member with a defined {@link\n     * Layout#property|property} the corresponding region of the buffer is\n     * left unmodified. */\n    encode(src, b, offset = 0) {\n        const firstOffset = offset;\n        let lastOffset = 0;\n        let lastWrote = 0;\n        for (const fd of this.fields) {\n            let span = fd.span;\n            lastWrote = (0 < span) ? span : 0;\n            if (undefined !== fd.property) {\n                const fv = src[fd.property];\n                if (undefined !== fv) {\n                    lastWrote = fd.encode(fv, b, offset);\n                    if (0 > span) {\n                        /* Read the as-encoded span, which is not necessarily the\n                         * same as what we wrote. */\n                        span = fd.getSpan(b, offset);\n                    }\n                }\n            }\n            lastOffset = offset;\n            offset += span;\n        }\n        /* Use (lastOffset + lastWrote) instead of offset because the last\n         * item may have had a dynamic length and we don't want to include\n         * the padding between it and the end of the space reserved for\n         * it. */\n        return (lastOffset + lastWrote) - firstOffset;\n    }\n    /** @override */\n    fromArray(values) {\n        const dest = this.makeDestinationObject();\n        for (const fd of this.fields) {\n            if ((undefined !== fd.property)\n                && (0 < values.length)) {\n                dest[fd.property] = values.shift();\n            }\n        }\n        return dest;\n    }\n    /**\n     * Get access to the layout of a given property.\n     *\n     * @param {String} property - the structure member of interest.\n     *\n     * @return {Layout} - the layout associated with `property`, or\n     * undefined if there is no such property.\n     */\n    layoutFor(property) {\n        if ('string' !== typeof property) {\n            throw new TypeError('property must be string');\n        }\n        for (const fd of this.fields) {\n            if (fd.property === property) {\n                return fd;\n            }\n        }\n        return undefined;\n    }\n    /**\n     * Get the offset of a structure member.\n     *\n     * @param {String} property - the structure member of interest.\n     *\n     * @return {Number} - the offset in bytes to the start of `property`\n     * within the structure, or undefined if `property` is not a field\n     * within the structure.  If the property is a member but follows a\n     * variable-length structure member a negative number will be\n     * returned.\n     */\n    offsetOf(property) {\n        if ('string' !== typeof property) {\n            throw new TypeError('property must be string');\n        }\n        let offset = 0;\n        for (const fd of this.fields) {\n            if (fd.property === property) {\n                return offset;\n            }\n            if (0 > fd.span) {\n                offset = -1;\n            }\n            else if (0 <= offset) {\n                offset += fd.span;\n            }\n        }\n        return undefined;\n    }\n}\nexports.Structure = Structure;\n/**\n * An object that can provide a {@link\n * Union#discriminator|discriminator} API for {@link Union}.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support the {@link\n * UnionDiscriminator#encode|encode} or {@link\n * UnionDiscriminator#decode|decode} functions.\n *\n * @param {string} [property] - Default for {@link\n * UnionDiscriminator#property|property}.\n *\n * @abstract\n */\nclass UnionDiscriminator {\n    constructor(property) {\n        /** The {@link Layout#property|property} to be used when the\n         * discriminator is referenced in isolation (generally when {@link\n         * Union#decode|Union decode} cannot delegate to a specific\n         * variant). */\n        this.property = property;\n    }\n    /** Analog to {@link Layout#decode|Layout decode} for union discriminators.\n     *\n     * The implementation of this method need not reference the buffer if\n     * variant information is available through other means. */\n    decode(b, offset) {\n        throw new Error('UnionDiscriminator is abstract');\n    }\n    /** Analog to {@link Layout#decode|Layout encode} for union discriminators.\n     *\n     * The implementation of this method need not store the value if\n     * variant information is maintained through other means. */\n    encode(src, b, offset) {\n        throw new Error('UnionDiscriminator is abstract');\n    }\n}\nexports.UnionDiscriminator = UnionDiscriminator;\n/**\n * An object that can provide a {@link\n * UnionDiscriminator|discriminator API} for {@link Union} using an\n * unsigned integral {@link Layout} instance located either inside or\n * outside the union.\n *\n * @param {ExternalLayout} layout - initializes {@link\n * UnionLayoutDiscriminator#layout|layout}.  Must satisfy {@link\n * ExternalLayout#isCount|isCount()}.\n *\n * @param {string} [property] - Default for {@link\n * UnionDiscriminator#property|property}, superseding the property\n * from `layout`, but defaulting to `variant` if neither `property`\n * nor layout provide a property name.\n *\n * @augments {UnionDiscriminator}\n */\nclass UnionLayoutDiscriminator extends UnionDiscriminator {\n    constructor(layout, property) {\n        if (!((layout instanceof ExternalLayout)\n            && layout.isCount())) {\n            throw new TypeError('layout must be an unsigned integer ExternalLayout');\n        }\n        super(property || layout.property || 'variant');\n        /** The {@link ExternalLayout} used to access the discriminator\n         * value. */\n        this.layout = layout;\n    }\n    /** Delegate decoding to {@link UnionLayoutDiscriminator#layout|layout}. */\n    decode(b, offset) {\n        return this.layout.decode(b, offset);\n    }\n    /** Delegate encoding to {@link UnionLayoutDiscriminator#layout|layout}. */\n    encode(src, b, offset) {\n        return this.layout.encode(src, b, offset);\n    }\n}\nexports.UnionLayoutDiscriminator = UnionLayoutDiscriminator;\n/**\n * Represent any number of span-compatible layouts.\n *\n * *Factory*: {@link module:Layout.union|union}\n *\n * If the union has a {@link Union#defaultLayout|default layout} that\n * layout must have a non-negative {@link Layout#span|span}.  The span\n * of a fixed-span union includes its {@link\n * Union#discriminator|discriminator} if the variant is a {@link\n * Union#usesPrefixDiscriminator|prefix of the union}, plus the span\n * of its {@link Union#defaultLayout|default layout}.\n *\n * If the union does not have a default layout then the encoded span\n * of the union depends on the encoded span of its variant (which may\n * be fixed or variable).\n *\n * {@link VariantLayout#layout|Variant layout}s are added through\n * {@link Union#addVariant|addVariant}.  If the union has a default\n * layout, the span of the {@link VariantLayout#layout|layout\n * contained by the variant} must not exceed the span of the {@link\n * Union#defaultLayout|default layout} (minus the span of a {@link\n * Union#usesPrefixDiscriminator|prefix disriminator}, if used).  The\n * span of the variant will equal the span of the union itself.\n *\n * The variant for a buffer can only be identified from the {@link\n * Union#discriminator|discriminator} {@link\n * UnionDiscriminator#property|property} (in the case of the {@link\n * Union#defaultLayout|default layout}), or by using {@link\n * Union#getVariant|getVariant} and examining the resulting {@link\n * VariantLayout} instance.\n *\n * A variant compatible with a JavaScript object can be identified\n * using {@link Union#getSourceVariant|getSourceVariant}.\n *\n * @param {(UnionDiscriminator|ExternalLayout|Layout)} discr - How to\n * identify the layout used to interpret the union contents.  The\n * parameter must be an instance of {@link UnionDiscriminator}, an\n * {@link ExternalLayout} that satisfies {@link\n * ExternalLayout#isCount|isCount()}, or {@link UInt} (or {@link\n * UIntBE}).  When a non-external layout element is passed the layout\n * appears at the start of the union.  In all cases the (synthesized)\n * {@link UnionDiscriminator} instance is recorded as {@link\n * Union#discriminator|discriminator}.\n *\n * @param {(Layout|null)} defaultLayout - initializer for {@link\n * Union#defaultLayout|defaultLayout}.  If absent defaults to `null`.\n * If `null` there is no default layout: the union has data-dependent\n * length and attempts to decode or encode unrecognized variants will\n * throw an exception.  A {@link Layout} instance must have a\n * non-negative {@link Layout#span|span}, and if it lacks a {@link\n * Layout#property|property} the {@link\n * Union#defaultLayout|defaultLayout} will be a {@link\n * Layout#replicate|replica} with property `content`.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Union extends Layout {\n    constructor(discr, defaultLayout, property) {\n        let discriminator;\n        if ((discr instanceof UInt)\n            || (discr instanceof UIntBE)) {\n            discriminator = new UnionLayoutDiscriminator(new OffsetLayout(discr));\n        }\n        else if ((discr instanceof ExternalLayout)\n            && discr.isCount()) {\n            discriminator = new UnionLayoutDiscriminator(discr);\n        }\n        else if (!(discr instanceof UnionDiscriminator)) {\n            throw new TypeError('discr must be a UnionDiscriminator '\n                + 'or an unsigned integer layout');\n        }\n        else {\n            discriminator = discr;\n        }\n        if (undefined === defaultLayout) {\n            defaultLayout = null;\n        }\n        if (!((null === defaultLayout)\n            || (defaultLayout instanceof Layout))) {\n            throw new TypeError('defaultLayout must be null or a Layout');\n        }\n        if (null !== defaultLayout) {\n            if (0 > defaultLayout.span) {\n                throw new Error('defaultLayout must have constant span');\n            }\n            if (undefined === defaultLayout.property) {\n                defaultLayout = defaultLayout.replicate('content');\n            }\n        }\n        /* The union span can be estimated only if there's a default\n         * layout.  The union spans its default layout, plus any prefix\n         * variant layout.  By construction both layouts, if present, have\n         * non-negative span. */\n        let span = -1;\n        if (defaultLayout) {\n            span = defaultLayout.span;\n            if ((0 <= span) && ((discr instanceof UInt)\n                || (discr instanceof UIntBE))) {\n                span += discriminator.layout.span;\n            }\n        }\n        super(span, property);\n        /** The interface for the discriminator value in isolation.\n         *\n         * This a {@link UnionDiscriminator} either passed to the\n         * constructor or synthesized from the `discr` constructor\n         * argument.  {@link\n         * Union#usesPrefixDiscriminator|usesPrefixDiscriminator} will be\n         * `true` iff the `discr` parameter was a non-offset {@link\n         * Layout} instance. */\n        this.discriminator = discriminator;\n        /** `true` if the {@link Union#discriminator|discriminator} is the\n         * first field in the union.\n         *\n         * If `false` the discriminator is obtained from somewhere\n         * else. */\n        this.usesPrefixDiscriminator = (discr instanceof UInt)\n            || (discr instanceof UIntBE);\n        /** The layout for non-discriminator content when the value of the\n         * discriminator is not recognized.\n         *\n         * This is the value passed to the constructor.  It is\n         * structurally equivalent to the second component of {@link\n         * Union#layout|layout} but may have a different property\n         * name. */\n        this.defaultLayout = defaultLayout;\n        /** A registry of allowed variants.\n         *\n         * The keys are unsigned integers which should be compatible with\n         * {@link Union.discriminator|discriminator}.  The property value\n         * is the corresponding {@link VariantLayout} instances assigned\n         * to this union by {@link Union#addVariant|addVariant}.\n         *\n         * **NOTE** The registry remains mutable so that variants can be\n         * {@link Union#addVariant|added} at any time.  Users should not\n         * manipulate the content of this property. */\n        this.registry = {};\n        /* Private variable used when invoking getSourceVariant */\n        let boundGetSourceVariant = this.defaultGetSourceVariant.bind(this);\n        /** Function to infer the variant selected by a source object.\n         *\n         * Defaults to {@link\n         * Union#defaultGetSourceVariant|defaultGetSourceVariant} but may\n         * be overridden using {@link\n         * Union#configGetSourceVariant|configGetSourceVariant}.\n         *\n         * @param {Object} src - as with {@link\n         * Union#defaultGetSourceVariant|defaultGetSourceVariant}.\n         *\n         * @returns {(undefined|VariantLayout)} The default variant\n         * (`undefined`) or first registered variant that uses a property\n         * available in `src`. */\n        this.getSourceVariant = function (src) {\n            return boundGetSourceVariant(src);\n        };\n        /** Function to override the implementation of {@link\n         * Union#getSourceVariant|getSourceVariant}.\n         *\n         * Use this if the desired variant cannot be identified using the\n         * algorithm of {@link\n         * Union#defaultGetSourceVariant|defaultGetSourceVariant}.\n         *\n         * **NOTE** The provided function will be invoked bound to this\n         * Union instance, providing local access to {@link\n         * Union#registry|registry}.\n         *\n         * @param {Function} gsv - a function that follows the API of\n         * {@link Union#defaultGetSourceVariant|defaultGetSourceVariant}. */\n        this.configGetSourceVariant = function (gsv) {\n            boundGetSourceVariant = gsv.bind(this);\n        };\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        if (0 <= this.span) {\n            return this.span;\n        }\n        /* Default layouts always have non-negative span, so we don't have\n         * one and we have to recognize the variant which will in turn\n         * determine the span. */\n        const vlo = this.getVariant(b, offset);\n        if (!vlo) {\n            throw new Error('unable to determine span for unrecognized variant');\n        }\n        return vlo.getSpan(b, offset);\n    }\n    /**\n     * Method to infer a registered Union variant compatible with `src`.\n     *\n     * The first satisfied rule in the following sequence defines the\n     * return value:\n     * * If `src` has properties matching the Union discriminator and\n     *   the default layout, `undefined` is returned regardless of the\n     *   value of the discriminator property (this ensures the default\n     *   layout will be used);\n     * * If `src` has a property matching the Union discriminator, the\n     *   value of the discriminator identifies a registered variant, and\n     *   either (a) the variant has no layout, or (b) `src` has the\n     *   variant's property, then the variant is returned (because the\n     *   source satisfies the constraints of the variant it identifies);\n     * * If `src` does not have a property matching the Union\n     *   discriminator, but does have a property matching a registered\n     *   variant, then the variant is returned (because the source\n     *   matches a variant without an explicit conflict);\n     * * An error is thrown (because we either can't identify a variant,\n     *   or we were explicitly told the variant but can't satisfy it).\n     *\n     * @param {Object} src - an object presumed to be compatible with\n     * the content of the Union.\n     *\n     * @return {(undefined|VariantLayout)} - as described above.\n     *\n     * @throws {Error} - if `src` cannot be associated with a default or\n     * registered variant.\n     */\n    defaultGetSourceVariant(src) {\n        if (Object.prototype.hasOwnProperty.call(src, this.discriminator.property)) {\n            if (this.defaultLayout && this.defaultLayout.property\n                && Object.prototype.hasOwnProperty.call(src, this.defaultLayout.property)) {\n                return undefined;\n            }\n            const vlo = this.registry[src[this.discriminator.property]];\n            if (vlo\n                && ((!vlo.layout)\n                    || (vlo.property && Object.prototype.hasOwnProperty.call(src, vlo.property)))) {\n                return vlo;\n            }\n        }\n        else {\n            for (const tag in this.registry) {\n                const vlo = this.registry[tag];\n                if (vlo.property && Object.prototype.hasOwnProperty.call(src, vlo.property)) {\n                    return vlo;\n                }\n            }\n        }\n        throw new Error('unable to infer src variant');\n    }\n    /** Implement {@link Layout#decode|decode} for {@link Union}.\n     *\n     * If the variant is {@link Union#addVariant|registered} the return\n     * value is an instance of that variant, with no explicit\n     * discriminator.  Otherwise the {@link Union#defaultLayout|default\n     * layout} is used to decode the content. */\n    decode(b, offset = 0) {\n        let dest;\n        const dlo = this.discriminator;\n        const discr = dlo.decode(b, offset);\n        const clo = this.registry[discr];\n        if (undefined === clo) {\n            const defaultLayout = this.defaultLayout;\n            let contentOffset = 0;\n            if (this.usesPrefixDiscriminator) {\n                contentOffset = dlo.layout.span;\n            }\n            dest = this.makeDestinationObject();\n            dest[dlo.property] = discr;\n            // defaultLayout.property can be undefined, but this is allowed by buffer-layout\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            dest[defaultLayout.property] = defaultLayout.decode(b, offset + contentOffset);\n        }\n        else {\n            dest = clo.decode(b, offset);\n        }\n        return dest;\n    }\n    /** Implement {@link Layout#encode|encode} for {@link Union}.\n     *\n     * This API assumes the `src` object is consistent with the union's\n     * {@link Union#defaultLayout|default layout}.  To encode variants\n     * use the appropriate variant-specific {@link VariantLayout#encode}\n     * method. */\n    encode(src, b, offset = 0) {\n        const vlo = this.getSourceVariant(src);\n        if (undefined === vlo) {\n            const dlo = this.discriminator;\n            // this.defaultLayout is not undefined when vlo is undefined\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            const clo = this.defaultLayout;\n            let contentOffset = 0;\n            if (this.usesPrefixDiscriminator) {\n                contentOffset = dlo.layout.span;\n            }\n            dlo.encode(src[dlo.property], b, offset);\n            // clo.property is not undefined when vlo is undefined\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            return contentOffset + clo.encode(src[clo.property], b, offset + contentOffset);\n        }\n        return vlo.encode(src, b, offset);\n    }\n    /** Register a new variant structure within a union.  The newly\n     * created variant is returned.\n     *\n     * @param {Number} variant - initializer for {@link\n     * VariantLayout#variant|variant}.\n     *\n     * @param {Layout} layout - initializer for {@link\n     * VariantLayout#layout|layout}.\n     *\n     * @param {String} property - initializer for {@link\n     * Layout#property|property}.\n     *\n     * @return {VariantLayout} */\n    addVariant(variant, layout, property) {\n        const rv = new VariantLayout(this, variant, layout, property);\n        this.registry[variant] = rv;\n        return rv;\n    }\n    /**\n     * Get the layout associated with a registered variant.\n     *\n     * If `vb` does not produce a registered variant the function returns\n     * `undefined`.\n     *\n     * @param {(Number|Uint8Array)} vb - either the variant number, or a\n     * buffer from which the discriminator is to be read.\n     *\n     * @param {Number} offset - offset into `vb` for the start of the\n     * union.  Used only when `vb` is an instance of {Uint8Array}.\n     *\n     * @return {({VariantLayout}|undefined)}\n     */\n    getVariant(vb, offset = 0) {\n        let variant;\n        if (vb instanceof Uint8Array) {\n            variant = this.discriminator.decode(vb, offset);\n        }\n        else {\n            variant = vb;\n        }\n        return this.registry[variant];\n    }\n}\nexports.Union = Union;\n/**\n * Represent a specific variant within a containing union.\n *\n * **NOTE** The {@link Layout#span|span} of the variant may include\n * the span of the {@link Union#discriminator|discriminator} used to\n * identify it, but values read and written using the variant strictly\n * conform to the content of {@link VariantLayout#layout|layout}.\n *\n * **NOTE** User code should not invoke this constructor directly.  Use\n * the union {@link Union#addVariant|addVariant} helper method.\n *\n * @param {Union} union - initializer for {@link\n * VariantLayout#union|union}.\n *\n * @param {Number} variant - initializer for {@link\n * VariantLayout#variant|variant}.\n *\n * @param {Layout} [layout] - initializer for {@link\n * VariantLayout#layout|layout}.  If absent the variant carries no\n * data.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.  Unlike many other layouts, variant\n * layouts normally include a property name so they can be identified\n * within their containing {@link Union}.  The property identifier may\n * be absent only if `layout` is is absent.\n *\n * @augments {Layout}\n */\nclass VariantLayout extends Layout {\n    constructor(union, variant, layout, property) {\n        if (!(union instanceof Union)) {\n            throw new TypeError('union must be a Union');\n        }\n        if ((!Number.isInteger(variant)) || (0 > variant)) {\n            throw new TypeError('variant must be a (non-negative) integer');\n        }\n        if (('string' === typeof layout)\n            && (undefined === property)) {\n            property = layout;\n            layout = null;\n        }\n        if (layout) {\n            if (!(layout instanceof Layout)) {\n                throw new TypeError('layout must be a Layout');\n            }\n            if ((null !== union.defaultLayout)\n                && (0 <= layout.span)\n                && (layout.span > union.defaultLayout.span)) {\n                throw new Error('variant span exceeds span of containing union');\n            }\n            if ('string' !== typeof property) {\n                throw new TypeError('variant must have a String property');\n            }\n        }\n        let span = union.span;\n        if (0 > union.span) {\n            span = layout ? layout.span : 0;\n            if ((0 <= span) && union.usesPrefixDiscriminator) {\n                span += union.discriminator.layout.span;\n            }\n        }\n        super(span, property);\n        /** The {@link Union} to which this variant belongs. */\n        this.union = union;\n        /** The unsigned integral value identifying this variant within\n         * the {@link Union#discriminator|discriminator} of the containing\n         * union. */\n        this.variant = variant;\n        /** The {@link Layout} to be used when reading/writing the\n         * non-discriminator part of the {@link\n         * VariantLayout#union|union}.  If `null` the variant carries no\n         * data. */\n        this.layout = layout || null;\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        if (0 <= this.span) {\n            /* Will be equal to the containing union span if that is not\n             * variable. */\n            return this.span;\n        }\n        let contentOffset = 0;\n        if (this.union.usesPrefixDiscriminator) {\n            contentOffset = this.union.discriminator.layout.span;\n        }\n        /* Span is defined solely by the variant (and prefix discriminator) */\n        let span = 0;\n        if (this.layout) {\n            span = this.layout.getSpan(b, offset + contentOffset);\n        }\n        return contentOffset + span;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const dest = this.makeDestinationObject();\n        if (this !== this.union.getVariant(b, offset)) {\n            throw new Error('variant mismatch');\n        }\n        let contentOffset = 0;\n        if (this.union.usesPrefixDiscriminator) {\n            contentOffset = this.union.discriminator.layout.span;\n        }\n        if (this.layout) {\n            dest[this.property] = this.layout.decode(b, offset + contentOffset);\n        }\n        else if (this.property) {\n            dest[this.property] = true;\n        }\n        else if (this.union.usesPrefixDiscriminator) {\n            dest[this.union.discriminator.property] = this.variant;\n        }\n        return dest;\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        let contentOffset = 0;\n        if (this.union.usesPrefixDiscriminator) {\n            contentOffset = this.union.discriminator.layout.span;\n        }\n        if (this.layout\n            && (!Object.prototype.hasOwnProperty.call(src, this.property))) {\n            throw new TypeError('variant lacks property ' + this.property);\n        }\n        this.union.discriminator.encode(this.variant, b, offset);\n        let span = contentOffset;\n        if (this.layout) {\n            this.layout.encode(src[this.property], b, offset + contentOffset);\n            span += this.layout.getSpan(b, offset + contentOffset);\n            if ((0 <= this.union.span)\n                && (span > this.union.span)) {\n                throw new Error('encoded variant overruns containing union');\n            }\n        }\n        return span;\n    }\n    /** Delegate {@link Layout#fromArray|fromArray} to {@link\n     * VariantLayout#layout|layout}. */\n    fromArray(values) {\n        if (this.layout) {\n            return this.layout.fromArray(values);\n        }\n        return undefined;\n    }\n}\nexports.VariantLayout = VariantLayout;\n/** JavaScript chose to define bitwise operations as operating on\n * signed 32-bit values in 2's complement form, meaning any integer\n * with bit 31 set is going to look negative.  For right shifts that's\n * not a problem, because `>>>` is a logical shift, but for every\n * other bitwise operator we have to compensate for possible negative\n * results. */\nfunction fixBitwiseResult(v) {\n    if (0 > v) {\n        v += 0x100000000;\n    }\n    return v;\n}\n/**\n * Contain a sequence of bit fields as an unsigned integer.\n *\n * *Factory*: {@link module:Layout.bits|bits}\n *\n * This is a container element; within it there are {@link BitField}\n * instances that provide the extracted properties.  The container\n * simply defines the aggregate representation and its bit ordering.\n * The representation is an object containing properties with numeric\n * or {@link Boolean} values.\n *\n * {@link BitField}s are added with the {@link\n * BitStructure#addField|addField} and {@link\n * BitStructure#addBoolean|addBoolean} methods.\n\n * @param {Layout} word - initializer for {@link\n * BitStructure#word|word}.  The parameter must be an instance of\n * {@link UInt} (or {@link UIntBE}) that is no more than 4 bytes wide.\n *\n * @param {bool} [msb] - `true` if the bit numbering starts at the\n * most significant bit of the containing word; `false` (default) if\n * it starts at the least significant bit of the containing word.  If\n * the parameter at this position is a string and `property` is\n * `undefined` the value of this argument will instead be used as the\n * value of `property`.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass BitStructure extends Layout {\n    constructor(word, msb, property) {\n        if (!((word instanceof UInt)\n            || (word instanceof UIntBE))) {\n            throw new TypeError('word must be a UInt or UIntBE layout');\n        }\n        if (('string' === typeof msb)\n            && (undefined === property)) {\n            property = msb;\n            msb = false;\n        }\n        if (4 < word.span) {\n            throw new RangeError('word cannot exceed 32 bits');\n        }\n        super(word.span, property);\n        /** The layout used for the packed value.  {@link BitField}\n         * instances are packed sequentially depending on {@link\n         * BitStructure#msb|msb}. */\n        this.word = word;\n        /** Whether the bit sequences are packed starting at the most\n         * significant bit growing down (`true`), or the least significant\n         * bit growing up (`false`).\n         *\n         * **NOTE** Regardless of this value, the least significant bit of\n         * any {@link BitField} value is the least significant bit of the\n         * corresponding section of the packed value. */\n        this.msb = !!msb;\n        /** The sequence of {@link BitField} layouts that comprise the\n         * packed structure.\n         *\n         * **NOTE** The array remains mutable to allow fields to be {@link\n         * BitStructure#addField|added} after construction.  Users should\n         * not manipulate the content of this property.*/\n        this.fields = [];\n        /* Storage for the value.  Capture a variable instead of using an\n         * instance property because we don't want anything to change the\n         * value without going through the mutator. */\n        let value = 0;\n        this._packedSetValue = function (v) {\n            value = fixBitwiseResult(v);\n            return this;\n        };\n        this._packedGetValue = function () {\n            return value;\n        };\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const dest = this.makeDestinationObject();\n        const value = this.word.decode(b, offset);\n        this._packedSetValue(value);\n        for (const fd of this.fields) {\n            if (undefined !== fd.property) {\n                dest[fd.property] = fd.decode(b);\n            }\n        }\n        return dest;\n    }\n    /** Implement {@link Layout#encode|encode} for {@link BitStructure}.\n     *\n     * If `src` is missing a property for a member with a defined {@link\n     * Layout#property|property} the corresponding region of the packed\n     * value is left unmodified.  Unused bits are also left unmodified. */\n    encode(src, b, offset = 0) {\n        const value = this.word.decode(b, offset);\n        this._packedSetValue(value);\n        for (const fd of this.fields) {\n            if (undefined !== fd.property) {\n                const fv = src[fd.property];\n                if (undefined !== fv) {\n                    fd.encode(fv);\n                }\n            }\n        }\n        return this.word.encode(this._packedGetValue(), b, offset);\n    }\n    /** Register a new bitfield with a containing bit structure.  The\n     * resulting bitfield is returned.\n     *\n     * @param {Number} bits - initializer for {@link BitField#bits|bits}.\n     *\n     * @param {string} property - initializer for {@link\n     * Layout#property|property}.\n     *\n     * @return {BitField} */\n    addField(bits, property) {\n        const bf = new BitField(this, bits, property);\n        this.fields.push(bf);\n        return bf;\n    }\n    /** As with {@link BitStructure#addField|addField} for single-bit\n     * fields with `boolean` value representation.\n     *\n     * @param {string} property - initializer for {@link\n     * Layout#property|property}.\n     *\n     * @return {Boolean} */\n    // `Boolean` conflicts with the native primitive type\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    addBoolean(property) {\n        // This is my Boolean, not the Javascript one.\n        const bf = new Boolean(this, property);\n        this.fields.push(bf);\n        return bf;\n    }\n    /**\n     * Get access to the bit field for a given property.\n     *\n     * @param {String} property - the bit field of interest.\n     *\n     * @return {BitField} - the field associated with `property`, or\n     * undefined if there is no such property.\n     */\n    fieldFor(property) {\n        if ('string' !== typeof property) {\n            throw new TypeError('property must be string');\n        }\n        for (const fd of this.fields) {\n            if (fd.property === property) {\n                return fd;\n            }\n        }\n        return undefined;\n    }\n}\nexports.BitStructure = BitStructure;\n/**\n * Represent a sequence of bits within a {@link BitStructure}.\n *\n * All bit field values are represented as unsigned integers.\n *\n * **NOTE** User code should not invoke this constructor directly.\n * Use the container {@link BitStructure#addField|addField} helper\n * method.\n *\n * **NOTE** BitField instances are not instances of {@link Layout}\n * since {@link Layout#span|span} measures 8-bit units.\n *\n * @param {BitStructure} container - initializer for {@link\n * BitField#container|container}.\n *\n * @param {Number} bits - initializer for {@link BitField#bits|bits}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n */\nclass BitField {\n    constructor(container, bits, property) {\n        if (!(container instanceof BitStructure)) {\n            throw new TypeError('container must be a BitStructure');\n        }\n        if ((!Number.isInteger(bits)) || (0 >= bits)) {\n            throw new TypeError('bits must be positive integer');\n        }\n        const totalBits = 8 * container.span;\n        const usedBits = container.fields.reduce((sum, fd) => sum + fd.bits, 0);\n        if ((bits + usedBits) > totalBits) {\n            throw new Error('bits too long for span remainder ('\n                + (totalBits - usedBits) + ' of '\n                + totalBits + ' remain)');\n        }\n        /** The {@link BitStructure} instance to which this bit field\n         * belongs. */\n        this.container = container;\n        /** The span of this value in bits. */\n        this.bits = bits;\n        /** A mask of {@link BitField#bits|bits} bits isolating value bits\n         * that fit within the field.\n         *\n         * That is, it masks a value that has not yet been shifted into\n         * position within its containing packed integer. */\n        this.valueMask = (1 << bits) - 1;\n        if (32 === bits) { // shifted value out of range\n            this.valueMask = 0xFFFFFFFF;\n        }\n        /** The offset of the value within the containing packed unsigned\n         * integer.  The least significant bit of the packed value is at\n         * offset zero, regardless of bit ordering used. */\n        this.start = usedBits;\n        if (this.container.msb) {\n            this.start = totalBits - usedBits - bits;\n        }\n        /** A mask of {@link BitField#bits|bits} isolating the field value\n         * within the containing packed unsigned integer. */\n        this.wordMask = fixBitwiseResult(this.valueMask << this.start);\n        /** The property name used when this bitfield is represented in an\n         * Object.\n         *\n         * Intended to be functionally equivalent to {@link\n         * Layout#property}.\n         *\n         * If left undefined the corresponding span of bits will be\n         * treated as padding: it will not be mutated by {@link\n         * Layout#encode|encode} nor represented as a property in the\n         * decoded Object. */\n        this.property = property;\n    }\n    /** Store a value into the corresponding subsequence of the containing\n     * bit field. */\n    decode(b, offset) {\n        const word = this.container._packedGetValue();\n        const wordValue = fixBitwiseResult(word & this.wordMask);\n        const value = wordValue >>> this.start;\n        return value;\n    }\n    /** Store a value into the corresponding subsequence of the containing\n     * bit field.\n     *\n     * **NOTE** This is not a specialization of {@link\n     * Layout#encode|Layout.encode} and there is no return value. */\n    encode(value) {\n        if ('number' !== typeof value\n            || !Number.isInteger(value)\n            || (value !== fixBitwiseResult(value & this.valueMask))) {\n            throw new TypeError(nameWithProperty('BitField.encode', this)\n                + ' value must be integer not exceeding ' + this.valueMask);\n        }\n        const word = this.container._packedGetValue();\n        const wordValue = fixBitwiseResult(value << this.start);\n        this.container._packedSetValue(fixBitwiseResult(word & ~this.wordMask)\n            | wordValue);\n    }\n}\nexports.BitField = BitField;\n/**\n * Represent a single bit within a {@link BitStructure} as a\n * JavaScript boolean.\n *\n * **NOTE** User code should not invoke this constructor directly.\n * Use the container {@link BitStructure#addBoolean|addBoolean} helper\n * method.\n *\n * @param {BitStructure} container - initializer for {@link\n * BitField#container|container}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {BitField}\n */\n/* eslint-disable no-extend-native */\nclass Boolean extends BitField {\n    constructor(container, property) {\n        super(container, 1, property);\n    }\n    /** Override {@link BitField#decode|decode} for {@link Boolean|Boolean}.\n     *\n     * @returns {boolean} */\n    decode(b, offset) {\n        return !!super.decode(b, offset);\n    }\n    /** @override */\n    encode(value) {\n        if ('boolean' === typeof value) {\n            // BitField requires integer values\n            value = +value;\n        }\n        super.encode(value);\n    }\n}\nexports.Boolean = Boolean;\n/* eslint-enable no-extend-native */\n/**\n * Contain a fixed-length block of arbitrary data, represented as a\n * Uint8Array.\n *\n * *Factory*: {@link module:Layout.blob|blob}\n *\n * @param {(Number|ExternalLayout)} length - initializes {@link\n * Blob#length|length}.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Blob extends Layout {\n    constructor(length, property) {\n        if (!(((length instanceof ExternalLayout) && length.isCount())\n            || (Number.isInteger(length) && (0 <= length)))) {\n            throw new TypeError('length must be positive integer '\n                + 'or an unsigned integer ExternalLayout');\n        }\n        let span = -1;\n        if (!(length instanceof ExternalLayout)) {\n            span = length;\n        }\n        super(span, property);\n        /** The number of bytes in the blob.\n         *\n         * This may be a non-negative integer, or an instance of {@link\n         * ExternalLayout} that satisfies {@link\n         * ExternalLayout#isCount|isCount()}. */\n        this.length = length;\n    }\n    /** @override */\n    getSpan(b, offset) {\n        let span = this.span;\n        if (0 > span) {\n            span = this.length.decode(b, offset);\n        }\n        return span;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        let span = this.span;\n        if (0 > span) {\n            span = this.length.decode(b, offset);\n        }\n        return uint8ArrayToBuffer(b).slice(offset, offset + span);\n    }\n    /** Implement {@link Layout#encode|encode} for {@link Blob}.\n     *\n     * **NOTE** If {@link Layout#count|count} is an instance of {@link\n     * ExternalLayout} then the length of `src` will be encoded as the\n     * count after `src` is encoded. */\n    encode(src, b, offset) {\n        let span = this.length;\n        if (this.length instanceof ExternalLayout) {\n            span = src.length;\n        }\n        if (!(src instanceof Uint8Array && span === src.length)) {\n            throw new TypeError(nameWithProperty('Blob.encode', this)\n                + ' requires (length ' + span + ') Uint8Array as src');\n        }\n        if ((offset + span) > b.length) {\n            throw new RangeError('encoding overruns Uint8Array');\n        }\n        const srcBuffer = uint8ArrayToBuffer(src);\n        uint8ArrayToBuffer(b).write(srcBuffer.toString('hex'), offset, span, 'hex');\n        if (this.length instanceof ExternalLayout) {\n            this.length.encode(span, b, offset);\n        }\n        return span;\n    }\n}\nexports.Blob = Blob;\n/**\n * Contain a `NUL`-terminated UTF8 string.\n *\n * *Factory*: {@link module:Layout.cstr|cstr}\n *\n * **NOTE** Any UTF8 string that incorporates a zero-valued byte will\n * not be correctly decoded by this layout.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass CString extends Layout {\n    constructor(property) {\n        super(-1, property);\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        checkUint8Array(b);\n        let idx = offset;\n        while ((idx < b.length) && (0 !== b[idx])) {\n            idx += 1;\n        }\n        return 1 + idx - offset;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const span = this.getSpan(b, offset);\n        return uint8ArrayToBuffer(b).slice(offset, offset + span - 1).toString('utf-8');\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        /* Must force this to a string, lest it be a number and the\n         * \"utf8-encoding\" below actually allocate a buffer of length\n         * src */\n        if ('string' !== typeof src) {\n            src = String(src);\n        }\n        const srcb = buffer_1.Buffer.from(src, 'utf8');\n        const span = srcb.length;\n        if ((offset + span) > b.length) {\n            throw new RangeError('encoding overruns Buffer');\n        }\n        const buffer = uint8ArrayToBuffer(b);\n        srcb.copy(buffer, offset);\n        buffer[offset + span] = 0;\n        return span + 1;\n    }\n}\nexports.CString = CString;\n/**\n * Contain a UTF8 string with implicit length.\n *\n * *Factory*: {@link module:Layout.utf8|utf8}\n *\n * **NOTE** Because the length is implicit in the size of the buffer\n * this layout should be used only in isolation, or in a situation\n * where the length can be expressed by operating on a slice of the\n * containing buffer.\n *\n * @param {Number} [maxSpan] - the maximum length allowed for encoded\n * string content.  If not provided there is no bound on the allowed\n * content.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UTF8 extends Layout {\n    constructor(maxSpan, property) {\n        if (('string' === typeof maxSpan) && (undefined === property)) {\n            property = maxSpan;\n            maxSpan = undefined;\n        }\n        if (undefined === maxSpan) {\n            maxSpan = -1;\n        }\n        else if (!Number.isInteger(maxSpan)) {\n            throw new TypeError('maxSpan must be an integer');\n        }\n        super(-1, property);\n        /** The maximum span of the layout in bytes.\n         *\n         * Positive values are generally expected.  Zero is abnormal.\n         * Attempts to encode or decode a value that exceeds this length\n         * will throw a `RangeError`.\n         *\n         * A negative value indicates that there is no bound on the length\n         * of the content. */\n        this.maxSpan = maxSpan;\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        checkUint8Array(b);\n        return b.length - offset;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const span = this.getSpan(b, offset);\n        if ((0 <= this.maxSpan)\n            && (this.maxSpan < span)) {\n            throw new RangeError('text length exceeds maxSpan');\n        }\n        return uint8ArrayToBuffer(b).slice(offset, offset + span).toString('utf-8');\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        /* Must force this to a string, lest it be a number and the\n         * \"utf8-encoding\" below actually allocate a buffer of length\n         * src */\n        if ('string' !== typeof src) {\n            src = String(src);\n        }\n        const srcb = buffer_1.Buffer.from(src, 'utf8');\n        const span = srcb.length;\n        if ((0 <= this.maxSpan)\n            && (this.maxSpan < span)) {\n            throw new RangeError('text length exceeds maxSpan');\n        }\n        if ((offset + span) > b.length) {\n            throw new RangeError('encoding overruns Buffer');\n        }\n        srcb.copy(uint8ArrayToBuffer(b), offset);\n        return span;\n    }\n}\nexports.UTF8 = UTF8;\n/**\n * Contain a constant value.\n *\n * This layout may be used in cases where a JavaScript value can be\n * inferred without an expression in the binary encoding.  An example\n * would be a {@link VariantLayout|variant layout} where the content\n * is implied by the union {@link Union#discriminator|discriminator}.\n *\n * @param {Object|Number|String} value - initializer for {@link\n * Constant#value|value}.  If the value is an object (or array) and\n * the application intends the object to remain unchanged regardless\n * of what is done to values decoded by this layout, the value should\n * be frozen prior passing it to this constructor.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Constant extends Layout {\n    constructor(value, property) {\n        super(0, property);\n        /** The value produced by this constant when the layout is {@link\n         * Constant#decode|decoded}.\n         *\n         * Any JavaScript value including `null` and `undefined` is\n         * permitted.\n         *\n         * **WARNING** If `value` passed in the constructor was not\n         * frozen, it is possible for users of decoded values to change\n         * the content of the value. */\n        this.value = value;\n    }\n    /** @override */\n    decode(b, offset) {\n        return this.value;\n    }\n    /** @override */\n    encode(src, b, offset) {\n        /* Constants take no space */\n        return 0;\n    }\n}\nexports.Constant = Constant;\n/** Factory for {@link GreedyCount}. */\nexports.greedy = ((elementSpan, property) => new GreedyCount(elementSpan, property));\n/** Factory for {@link OffsetLayout}. */\nexports.offset = ((layout, offset, property) => new OffsetLayout(layout, offset, property));\n/** Factory for {@link UInt|unsigned int layouts} spanning one\n * byte. */\nexports.u8 = ((property) => new UInt(1, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning two bytes. */\nexports.u16 = ((property) => new UInt(2, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning three bytes. */\nexports.u24 = ((property) => new UInt(3, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning four bytes. */\nexports.u32 = ((property) => new UInt(4, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning five bytes. */\nexports.u40 = ((property) => new UInt(5, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning six bytes. */\nexports.u48 = ((property) => new UInt(6, property));\n/** Factory for {@link NearUInt64|little-endian unsigned int\n * layouts} interpreted as Numbers. */\nexports.nu64 = ((property) => new NearUInt64(property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning two bytes. */\nexports.u16be = ((property) => new UIntBE(2, property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning three bytes. */\nexports.u24be = ((property) => new UIntBE(3, property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning four bytes. */\nexports.u32be = ((property) => new UIntBE(4, property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning five bytes. */\nexports.u40be = ((property) => new UIntBE(5, property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning six bytes. */\nexports.u48be = ((property) => new UIntBE(6, property));\n/** Factory for {@link NearUInt64BE|big-endian unsigned int\n * layouts} interpreted as Numbers. */\nexports.nu64be = ((property) => new NearUInt64BE(property));\n/** Factory for {@link Int|signed int layouts} spanning one\n * byte. */\nexports.s8 = ((property) => new Int(1, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning two bytes. */\nexports.s16 = ((property) => new Int(2, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning three bytes. */\nexports.s24 = ((property) => new Int(3, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning four bytes. */\nexports.s32 = ((property) => new Int(4, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning five bytes. */\nexports.s40 = ((property) => new Int(5, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning six bytes. */\nexports.s48 = ((property) => new Int(6, property));\n/** Factory for {@link NearInt64|little-endian signed int layouts}\n * interpreted as Numbers. */\nexports.ns64 = ((property) => new NearInt64(property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning two bytes. */\nexports.s16be = ((property) => new IntBE(2, property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning three bytes. */\nexports.s24be = ((property) => new IntBE(3, property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning four bytes. */\nexports.s32be = ((property) => new IntBE(4, property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning five bytes. */\nexports.s40be = ((property) => new IntBE(5, property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning six bytes. */\nexports.s48be = ((property) => new IntBE(6, property));\n/** Factory for {@link NearInt64BE|big-endian signed int layouts}\n * interpreted as Numbers. */\nexports.ns64be = ((property) => new NearInt64BE(property));\n/** Factory for {@link Float|little-endian 32-bit floating point} values. */\nexports.f32 = ((property) => new Float(property));\n/** Factory for {@link FloatBE|big-endian 32-bit floating point} values. */\nexports.f32be = ((property) => new FloatBE(property));\n/** Factory for {@link Double|little-endian 64-bit floating point} values. */\nexports.f64 = ((property) => new Double(property));\n/** Factory for {@link DoubleBE|big-endian 64-bit floating point} values. */\nexports.f64be = ((property) => new DoubleBE(property));\n/** Factory for {@link Structure} values. */\nexports.struct = ((fields, property, decodePrefixes) => new Structure(fields, property, decodePrefixes));\n/** Factory for {@link BitStructure} values. */\nexports.bits = ((word, msb, property) => new BitStructure(word, msb, property));\n/** Factory for {@link Sequence} values. */\nexports.seq = ((elementLayout, count, property) => new Sequence(elementLayout, count, property));\n/** Factory for {@link Union} values. */\nexports.union = ((discr, defaultLayout, property) => new Union(discr, defaultLayout, property));\n/** Factory for {@link UnionLayoutDiscriminator} values. */\nexports.unionLayoutDiscriminator = ((layout, property) => new UnionLayoutDiscriminator(layout, property));\n/** Factory for {@link Blob} values. */\nexports.blob = ((length, property) => new Blob(length, property));\n/** Factory for {@link CString} values. */\nexports.cstr = ((property) => new CString(property));\n/** Factory for {@link UTF8} values. */\nexports.utf8 = ((maxSpan, property) => new UTF8(maxSpan, property));\n/** Factory for {@link Constant} values. */\nexports.constant = ((value, property) => new Constant(value, property));\n//# sourceMappingURL=Layout.js.map","/**\n * Maximum over-the-wire size of a Transaction\n *\n * 1280 is IPv6 minimum MTU\n * 40 bytes is the size of the IPv6 header\n * 8 bytes is the size of the fragment header\n */\nexport const PACKET_DATA_SIZE = 1280 - 40 - 8;\n\nexport const VERSION_PREFIX_MASK = 0x7f;\n\nexport const SIGNATURE_LENGTH_IN_BYTES = 64;\n","export class TransactionExpiredBlockheightExceededError extends Error {\n  signature: string;\n\n  constructor(signature: string) {\n    super(`Signature ${signature} has expired: block height exceeded.`);\n    this.signature = signature;\n  }\n}\n\nObject.defineProperty(\n  TransactionExpiredBlockheightExceededError.prototype,\n  'name',\n  {\n    value: 'TransactionExpiredBlockheightExceededError',\n  },\n);\n\nexport class TransactionExpiredTimeoutError extends Error {\n  signature: string;\n\n  constructor(signature: string, timeoutSeconds: number) {\n    super(\n      `Transaction was not confirmed in ${timeoutSeconds.toFixed(\n        2,\n      )} seconds. It is ` +\n        'unknown if it succeeded or failed. Check signature ' +\n        `${signature} using the Solana Explorer or CLI tools.`,\n    );\n    this.signature = signature;\n  }\n}\n\nObject.defineProperty(TransactionExpiredTimeoutError.prototype, 'name', {\n  value: 'TransactionExpiredTimeoutError',\n});\n\nexport class TransactionExpiredNonceInvalidError extends Error {\n  signature: string;\n\n  constructor(signature: string) {\n    super(`Signature ${signature} has expired: the nonce is no longer valid.`);\n    this.signature = signature;\n  }\n}\n\nObject.defineProperty(TransactionExpiredNonceInvalidError.prototype, 'name', {\n  value: 'TransactionExpiredNonceInvalidError',\n});\n","import {LoadedAddresses} from '../connection';\nimport {PublicKey} from '../publickey';\nimport {TransactionInstruction} from '../transaction';\nimport {MessageCompiledInstruction} from './index';\n\nexport type AccountKeysFromLookups = LoadedAddresses;\n\nexport class MessageAccountKeys {\n  staticAccountKeys: Array<PublicKey>;\n  accountKeysFromLookups?: AccountKeysFromLookups;\n\n  constructor(\n    staticAccountKeys: Array<PublicKey>,\n    accountKeysFromLookups?: AccountKeysFromLookups,\n  ) {\n    this.staticAccountKeys = staticAccountKeys;\n    this.accountKeysFromLookups = accountKeysFromLookups;\n  }\n\n  keySegments(): Array<Array<PublicKey>> {\n    const keySegments = [this.staticAccountKeys];\n    if (this.accountKeysFromLookups) {\n      keySegments.push(this.accountKeysFromLookups.writable);\n      keySegments.push(this.accountKeysFromLookups.readonly);\n    }\n    return keySegments;\n  }\n\n  get(index: number): PublicKey | undefined {\n    for (const keySegment of this.keySegments()) {\n      if (index < keySegment.length) {\n        return keySegment[index];\n      } else {\n        index -= keySegment.length;\n      }\n    }\n    return;\n  }\n\n  get length(): number {\n    return this.keySegments().flat().length;\n  }\n\n  compileInstructions(\n    instructions: Array<TransactionInstruction>,\n  ): Array<MessageCompiledInstruction> {\n    // Bail early if any account indexes would overflow a u8\n    const U8_MAX = 255;\n    if (this.length > U8_MAX + 1) {\n      throw new Error('Account index overflow encountered during compilation');\n    }\n\n    const keyIndexMap = new Map();\n    this.keySegments()\n      .flat()\n      .forEach((key, index) => {\n        keyIndexMap.set(key.toBase58(), index);\n      });\n\n    const findKeyIndex = (key: PublicKey) => {\n      const keyIndex = keyIndexMap.get(key.toBase58());\n      if (keyIndex === undefined)\n        throw new Error(\n          'Encountered an unknown instruction account key during compilation',\n        );\n      return keyIndex;\n    };\n\n    return instructions.map((instruction): MessageCompiledInstruction => {\n      return {\n        programIdIndex: findKeyIndex(instruction.programId),\n        accountKeyIndexes: instruction.keys.map(meta =>\n          findKeyIndex(meta.pubkey),\n        ),\n        data: instruction.data,\n      };\n    });\n  }\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {VoteAuthorizeWithSeedArgs} from './programs/vote';\n\n/**\n * Layout for a public key\n */\nexport const publicKey = (property: string = 'publicKey') => {\n  return BufferLayout.blob(32, property);\n};\n\n/**\n * Layout for a signature\n */\nexport const signature = (property: string = 'signature') => {\n  return BufferLayout.blob(64, property);\n};\n\n/**\n * Layout for a 64bit unsigned value\n */\nexport const uint64 = (property: string = 'uint64') => {\n  return BufferLayout.blob(8, property);\n};\n\ninterface IRustStringShim\n  extends Omit<\n    BufferLayout.Structure<\n      Readonly<{\n        length: number;\n        lengthPadding: number;\n        chars: Uint8Array;\n      }>\n    >,\n    'decode' | 'encode' | 'replicate'\n  > {\n  alloc: (str: string) => number;\n  decode: (b: Uint8Array, offset?: number) => string;\n  encode: (str: string, b: Uint8Array, offset?: number) => number;\n  replicate: (property: string) => this;\n}\n\n/**\n * Layout for a Rust String type\n */\nexport const rustString = (\n  property: string = 'string',\n): BufferLayout.Layout<string> => {\n  const rsl = BufferLayout.struct<\n    Readonly<{\n      length?: number;\n      lengthPadding?: number;\n      chars: Uint8Array;\n    }>\n  >(\n    [\n      BufferLayout.u32('length'),\n      BufferLayout.u32('lengthPadding'),\n      BufferLayout.blob(BufferLayout.offset(BufferLayout.u32(), -8), 'chars'),\n    ],\n    property,\n  );\n  const _decode = rsl.decode.bind(rsl);\n  const _encode = rsl.encode.bind(rsl);\n\n  const rslShim = rsl as unknown as IRustStringShim;\n\n  rslShim.decode = (b: Uint8Array, offset?: number) => {\n    const data = _decode(b, offset);\n    return data['chars'].toString();\n  };\n\n  rslShim.encode = (str: string, b: Uint8Array, offset?: number) => {\n    const data = {\n      chars: Buffer.from(str, 'utf8'),\n    };\n    return _encode(data, b, offset);\n  };\n\n  rslShim.alloc = (str: string) => {\n    return (\n      BufferLayout.u32().span +\n      BufferLayout.u32().span +\n      Buffer.from(str, 'utf8').length\n    );\n  };\n\n  return rslShim;\n};\n\n/**\n * Layout for an Authorized object\n */\nexport const authorized = (property: string = 'authorized') => {\n  return BufferLayout.struct<\n    Readonly<{\n      staker: Uint8Array;\n      withdrawer: Uint8Array;\n    }>\n  >([publicKey('staker'), publicKey('withdrawer')], property);\n};\n\n/**\n * Layout for a Lockup object\n */\nexport const lockup = (property: string = 'lockup') => {\n  return BufferLayout.struct<\n    Readonly<{\n      custodian: Uint8Array;\n      epoch: number;\n      unixTimestamp: number;\n    }>\n  >(\n    [\n      BufferLayout.ns64('unixTimestamp'),\n      BufferLayout.ns64('epoch'),\n      publicKey('custodian'),\n    ],\n    property,\n  );\n};\n\n/**\n *  Layout for a VoteInit object\n */\nexport const voteInit = (property: string = 'voteInit') => {\n  return BufferLayout.struct<\n    Readonly<{\n      authorizedVoter: Uint8Array;\n      authorizedWithdrawer: Uint8Array;\n      commission: number;\n      nodePubkey: Uint8Array;\n    }>\n  >(\n    [\n      publicKey('nodePubkey'),\n      publicKey('authorizedVoter'),\n      publicKey('authorizedWithdrawer'),\n      BufferLayout.u8('commission'),\n    ],\n    property,\n  );\n};\n\n/**\n *  Layout for a VoteAuthorizeWithSeedArgs object\n */\nexport const voteAuthorizeWithSeedArgs = (\n  property: string = 'voteAuthorizeWithSeedArgs',\n) => {\n  return BufferLayout.struct<VoteAuthorizeWithSeedArgs>(\n    [\n      BufferLayout.u32('voteAuthorizationType'),\n      publicKey('currentAuthorityDerivedKeyOwnerPubkey'),\n      rustString('currentAuthorityDerivedKeySeed'),\n      publicKey('newAuthorized'),\n    ],\n    property,\n  );\n};\n\nexport function getAlloc(type: any, fields: any): number {\n  const getItemAlloc = (item: any): number => {\n    if (item.span >= 0) {\n      return item.span;\n    } else if (typeof item.alloc === 'function') {\n      return item.alloc(fields[item.property]);\n    } else if ('count' in item && 'elementLayout' in item) {\n      const field = fields[item.property];\n      if (Array.isArray(field)) {\n        return field.length * getItemAlloc(item.elementLayout);\n      }\n    } else if ('fields' in item) {\n      // This is a `Structure` whose size needs to be recursively measured.\n      return getAlloc({layout: item}, fields[item.property]);\n    }\n    // Couldn't determine allocated size of layout\n    return 0;\n  };\n\n  let alloc = 0;\n  type.layout.fields.forEach((item: any) => {\n    alloc += getItemAlloc(item);\n  });\n\n  return alloc;\n}\n","export function decodeLength(bytes: Array<number>): number {\n  let len = 0;\n  let size = 0;\n  for (;;) {\n    let elem = bytes.shift() as number;\n    len |= (elem & 0x7f) << (size * 7);\n    size += 1;\n    if ((elem & 0x80) === 0) {\n      break;\n    }\n  }\n  return len;\n}\n\nexport function encodeLength(bytes: Array<number>, len: number) {\n  let rem_len = len;\n  for (;;) {\n    let elem = rem_len & 0x7f;\n    rem_len >>= 7;\n    if (rem_len == 0) {\n      bytes.push(elem);\n      break;\n    } else {\n      elem |= 0x80;\n      bytes.push(elem);\n    }\n  }\n}\n","export default function (\n  condition: unknown,\n  message?: string,\n): asserts condition {\n  if (!condition) {\n    throw new Error(message || 'Assertion failed');\n  }\n}\n","import {MessageHeader, MessageAddressTableLookup} from './index';\nimport {AccountKeysFromLookups} from './account-keys';\nimport {AddressLookupTableAccount} from '../programs';\nimport {TransactionInstruction} from '../transaction';\nimport assert from '../utils/assert';\nimport {PublicKey} from '../publickey';\n\nexport type CompiledKeyMeta = {\n  isSigner: boolean;\n  isWritable: boolean;\n  isInvoked: boolean;\n};\n\ntype KeyMetaMap = Map<string, CompiledKeyMeta>;\n\nexport class CompiledKeys {\n  payer: PublicKey;\n  keyMetaMap: KeyMetaMap;\n\n  constructor(payer: PublicKey, keyMetaMap: KeyMetaMap) {\n    this.payer = payer;\n    this.keyMetaMap = keyMetaMap;\n  }\n\n  static compile(\n    instructions: Array<TransactionInstruction>,\n    payer: PublicKey,\n  ): CompiledKeys {\n    const keyMetaMap: KeyMetaMap = new Map();\n    const getOrInsertDefault = (pubkey: PublicKey): CompiledKeyMeta => {\n      const address = pubkey.toBase58();\n      let keyMeta = keyMetaMap.get(address);\n      if (keyMeta === undefined) {\n        keyMeta = {\n          isSigner: false,\n          isWritable: false,\n          isInvoked: false,\n        };\n        keyMetaMap.set(address, keyMeta);\n      }\n      return keyMeta;\n    };\n\n    const payerKeyMeta = getOrInsertDefault(payer);\n    payerKeyMeta.isSigner = true;\n    payerKeyMeta.isWritable = true;\n\n    for (const ix of instructions) {\n      getOrInsertDefault(ix.programId).isInvoked = true;\n      for (const accountMeta of ix.keys) {\n        const keyMeta = getOrInsertDefault(accountMeta.pubkey);\n        keyMeta.isSigner ||= accountMeta.isSigner;\n        keyMeta.isWritable ||= accountMeta.isWritable;\n      }\n    }\n\n    return new CompiledKeys(payer, keyMetaMap);\n  }\n\n  getMessageComponents(): [MessageHeader, Array<PublicKey>] {\n    const mapEntries = [...this.keyMetaMap.entries()];\n    assert(mapEntries.length <= 256, 'Max static account keys length exceeded');\n\n    const writableSigners = mapEntries.filter(\n      ([, meta]) => meta.isSigner && meta.isWritable,\n    );\n    const readonlySigners = mapEntries.filter(\n      ([, meta]) => meta.isSigner && !meta.isWritable,\n    );\n    const writableNonSigners = mapEntries.filter(\n      ([, meta]) => !meta.isSigner && meta.isWritable,\n    );\n    const readonlyNonSigners = mapEntries.filter(\n      ([, meta]) => !meta.isSigner && !meta.isWritable,\n    );\n\n    const header: MessageHeader = {\n      numRequiredSignatures: writableSigners.length + readonlySigners.length,\n      numReadonlySignedAccounts: readonlySigners.length,\n      numReadonlyUnsignedAccounts: readonlyNonSigners.length,\n    };\n\n    // sanity checks\n    {\n      assert(\n        writableSigners.length > 0,\n        'Expected at least one writable signer key',\n      );\n      const [payerAddress] = writableSigners[0];\n      assert(\n        payerAddress === this.payer.toBase58(),\n        'Expected first writable signer key to be the fee payer',\n      );\n    }\n\n    const staticAccountKeys = [\n      ...writableSigners.map(([address]) => new PublicKey(address)),\n      ...readonlySigners.map(([address]) => new PublicKey(address)),\n      ...writableNonSigners.map(([address]) => new PublicKey(address)),\n      ...readonlyNonSigners.map(([address]) => new PublicKey(address)),\n    ];\n\n    return [header, staticAccountKeys];\n  }\n\n  extractTableLookup(\n    lookupTable: AddressLookupTableAccount,\n  ): [MessageAddressTableLookup, AccountKeysFromLookups] | undefined {\n    const [writableIndexes, drainedWritableKeys] =\n      this.drainKeysFoundInLookupTable(\n        lookupTable.state.addresses,\n        keyMeta =>\n          !keyMeta.isSigner && !keyMeta.isInvoked && keyMeta.isWritable,\n      );\n    const [readonlyIndexes, drainedReadonlyKeys] =\n      this.drainKeysFoundInLookupTable(\n        lookupTable.state.addresses,\n        keyMeta =>\n          !keyMeta.isSigner && !keyMeta.isInvoked && !keyMeta.isWritable,\n      );\n\n    // Don't extract lookup if no keys were found\n    if (writableIndexes.length === 0 && readonlyIndexes.length === 0) {\n      return;\n    }\n\n    return [\n      {\n        accountKey: lookupTable.key,\n        writableIndexes,\n        readonlyIndexes,\n      },\n      {\n        writable: drainedWritableKeys,\n        readonly: drainedReadonlyKeys,\n      },\n    ];\n  }\n\n  /** @internal */\n  private drainKeysFoundInLookupTable(\n    lookupTableEntries: Array<PublicKey>,\n    keyMetaFilter: (keyMeta: CompiledKeyMeta) => boolean,\n  ): [Array<number>, Array<PublicKey>] {\n    const lookupTableIndexes = new Array();\n    const drainedKeys = new Array();\n\n    for (const [address, keyMeta] of this.keyMetaMap.entries()) {\n      if (keyMetaFilter(keyMeta)) {\n        const key = new PublicKey(address);\n        const lookupTableIndex = lookupTableEntries.findIndex(entry =>\n          entry.equals(key),\n        );\n        if (lookupTableIndex >= 0) {\n          assert(lookupTableIndex < 256, 'Max lookup table index exceeded');\n          lookupTableIndexes.push(lookupTableIndex);\n          drainedKeys.push(key);\n          this.keyMetaMap.delete(address);\n        }\n      }\n    }\n\n    return [lookupTableIndexes, drainedKeys];\n  }\n}\n","import bs58 from 'bs58';\nimport {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {PublicKey, PUBLIC_KEY_LENGTH} from '../publickey';\nimport type {Blockhash} from '../blockhash';\nimport * as Layout from '../layout';\nimport {PACKET_DATA_SIZE, VERSION_PREFIX_MASK} from '../transaction/constants';\nimport * as shortvec from '../utils/shortvec-encoding';\nimport {toBuffer} from '../utils/to-buffer';\nimport {\n  MessageHeader,\n  MessageAddressTableLookup,\n  MessageCompiledInstruction,\n} from './index';\nimport {TransactionInstruction} from '../transaction';\nimport {CompiledKeys} from './compiled-keys';\nimport {MessageAccountKeys} from './account-keys';\n\n/**\n * An instruction to execute by a program\n *\n * @property {number} programIdIndex\n * @property {number[]} accounts\n * @property {string} data\n */\nexport type CompiledInstruction = {\n  /** Index into the transaction keys array indicating the program account that executes this instruction */\n  programIdIndex: number;\n  /** Ordered indices into the transaction keys array indicating which accounts to pass to the program */\n  accounts: number[];\n  /** The program input data encoded as base 58 */\n  data: string;\n};\n\n/**\n * Message constructor arguments\n */\nexport type MessageArgs = {\n  /** The message header, identifying signed and read-only `accountKeys` */\n  header: MessageHeader;\n  /** All the account keys used by this transaction */\n  accountKeys: string[] | PublicKey[];\n  /** The hash of a recent ledger block */\n  recentBlockhash: Blockhash;\n  /** Instructions that will be executed in sequence and committed in one atomic transaction if all succeed. */\n  instructions: CompiledInstruction[];\n};\n\nexport type CompileLegacyArgs = {\n  payerKey: PublicKey;\n  instructions: Array<TransactionInstruction>;\n  recentBlockhash: Blockhash;\n};\n\n/**\n * List of instructions to be processed atomically\n */\nexport class Message {\n  header: MessageHeader;\n  accountKeys: PublicKey[];\n  recentBlockhash: Blockhash;\n  instructions: CompiledInstruction[];\n\n  private indexToProgramIds: Map<number, PublicKey> = new Map<\n    number,\n    PublicKey\n  >();\n\n  constructor(args: MessageArgs) {\n    this.header = args.header;\n    this.accountKeys = args.accountKeys.map(account => new PublicKey(account));\n    this.recentBlockhash = args.recentBlockhash;\n    this.instructions = args.instructions;\n    this.instructions.forEach(ix =>\n      this.indexToProgramIds.set(\n        ix.programIdIndex,\n        this.accountKeys[ix.programIdIndex],\n      ),\n    );\n  }\n\n  get version(): 'legacy' {\n    return 'legacy';\n  }\n\n  get staticAccountKeys(): Array<PublicKey> {\n    return this.accountKeys;\n  }\n\n  get compiledInstructions(): Array<MessageCompiledInstruction> {\n    return this.instructions.map(\n      (ix): MessageCompiledInstruction => ({\n        programIdIndex: ix.programIdIndex,\n        accountKeyIndexes: ix.accounts,\n        data: bs58.decode(ix.data),\n      }),\n    );\n  }\n\n  get addressTableLookups(): Array<MessageAddressTableLookup> {\n    return [];\n  }\n\n  getAccountKeys(): MessageAccountKeys {\n    return new MessageAccountKeys(this.staticAccountKeys);\n  }\n\n  static compile(args: CompileLegacyArgs): Message {\n    const compiledKeys = CompiledKeys.compile(args.instructions, args.payerKey);\n    const [header, staticAccountKeys] = compiledKeys.getMessageComponents();\n    const accountKeys = new MessageAccountKeys(staticAccountKeys);\n    const instructions = accountKeys.compileInstructions(args.instructions).map(\n      (ix: MessageCompiledInstruction): CompiledInstruction => ({\n        programIdIndex: ix.programIdIndex,\n        accounts: ix.accountKeyIndexes,\n        data: bs58.encode(ix.data),\n      }),\n    );\n    return new Message({\n      header,\n      accountKeys: staticAccountKeys,\n      recentBlockhash: args.recentBlockhash,\n      instructions,\n    });\n  }\n\n  isAccountSigner(index: number): boolean {\n    return index < this.header.numRequiredSignatures;\n  }\n\n  isAccountWritable(index: number): boolean {\n    const numSignedAccounts = this.header.numRequiredSignatures;\n    if (index >= this.header.numRequiredSignatures) {\n      const unsignedAccountIndex = index - numSignedAccounts;\n      const numUnsignedAccounts = this.accountKeys.length - numSignedAccounts;\n      const numWritableUnsignedAccounts =\n        numUnsignedAccounts - this.header.numReadonlyUnsignedAccounts;\n      return unsignedAccountIndex < numWritableUnsignedAccounts;\n    } else {\n      const numWritableSignedAccounts =\n        numSignedAccounts - this.header.numReadonlySignedAccounts;\n      return index < numWritableSignedAccounts;\n    }\n  }\n\n  isProgramId(index: number): boolean {\n    return this.indexToProgramIds.has(index);\n  }\n\n  programIds(): PublicKey[] {\n    return [...this.indexToProgramIds.values()];\n  }\n\n  nonProgramIds(): PublicKey[] {\n    return this.accountKeys.filter((_, index) => !this.isProgramId(index));\n  }\n\n  serialize(): Buffer {\n    const numKeys = this.accountKeys.length;\n\n    let keyCount: number[] = [];\n    shortvec.encodeLength(keyCount, numKeys);\n\n    const instructions = this.instructions.map(instruction => {\n      const {accounts, programIdIndex} = instruction;\n      const data = Array.from(bs58.decode(instruction.data));\n\n      let keyIndicesCount: number[] = [];\n      shortvec.encodeLength(keyIndicesCount, accounts.length);\n\n      let dataCount: number[] = [];\n      shortvec.encodeLength(dataCount, data.length);\n\n      return {\n        programIdIndex,\n        keyIndicesCount: Buffer.from(keyIndicesCount),\n        keyIndices: accounts,\n        dataLength: Buffer.from(dataCount),\n        data,\n      };\n    });\n\n    let instructionCount: number[] = [];\n    shortvec.encodeLength(instructionCount, instructions.length);\n    let instructionBuffer = Buffer.alloc(PACKET_DATA_SIZE);\n    Buffer.from(instructionCount).copy(instructionBuffer);\n    let instructionBufferLength = instructionCount.length;\n\n    instructions.forEach(instruction => {\n      const instructionLayout = BufferLayout.struct<\n        Readonly<{\n          data: number[];\n          dataLength: Uint8Array;\n          keyIndices: number[];\n          keyIndicesCount: Uint8Array;\n          programIdIndex: number;\n        }>\n      >([\n        BufferLayout.u8('programIdIndex'),\n\n        BufferLayout.blob(\n          instruction.keyIndicesCount.length,\n          'keyIndicesCount',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8('keyIndex'),\n          instruction.keyIndices.length,\n          'keyIndices',\n        ),\n        BufferLayout.blob(instruction.dataLength.length, 'dataLength'),\n        BufferLayout.seq(\n          BufferLayout.u8('userdatum'),\n          instruction.data.length,\n          'data',\n        ),\n      ]);\n      const length = instructionLayout.encode(\n        instruction,\n        instructionBuffer,\n        instructionBufferLength,\n      );\n      instructionBufferLength += length;\n    });\n    instructionBuffer = instructionBuffer.slice(0, instructionBufferLength);\n\n    const signDataLayout = BufferLayout.struct<\n      Readonly<{\n        keyCount: Uint8Array;\n        keys: Uint8Array[];\n        numReadonlySignedAccounts: Uint8Array;\n        numReadonlyUnsignedAccounts: Uint8Array;\n        numRequiredSignatures: Uint8Array;\n        recentBlockhash: Uint8Array;\n      }>\n    >([\n      BufferLayout.blob(1, 'numRequiredSignatures'),\n      BufferLayout.blob(1, 'numReadonlySignedAccounts'),\n      BufferLayout.blob(1, 'numReadonlyUnsignedAccounts'),\n      BufferLayout.blob(keyCount.length, 'keyCount'),\n      BufferLayout.seq(Layout.publicKey('key'), numKeys, 'keys'),\n      Layout.publicKey('recentBlockhash'),\n    ]);\n\n    const transaction = {\n      numRequiredSignatures: Buffer.from([this.header.numRequiredSignatures]),\n      numReadonlySignedAccounts: Buffer.from([\n        this.header.numReadonlySignedAccounts,\n      ]),\n      numReadonlyUnsignedAccounts: Buffer.from([\n        this.header.numReadonlyUnsignedAccounts,\n      ]),\n      keyCount: Buffer.from(keyCount),\n      keys: this.accountKeys.map(key => toBuffer(key.toBytes())),\n      recentBlockhash: bs58.decode(this.recentBlockhash),\n    };\n\n    let signData = Buffer.alloc(2048);\n    const length = signDataLayout.encode(transaction, signData);\n    instructionBuffer.copy(signData, length);\n    return signData.slice(0, length + instructionBuffer.length);\n  }\n\n  /**\n   * Decode a compiled message into a Message object.\n   */\n  static from(buffer: Buffer | Uint8Array | Array<number>): Message {\n    // Slice up wire data\n    let byteArray = [...buffer];\n\n    const numRequiredSignatures = byteArray.shift()!;\n    if (\n      numRequiredSignatures !==\n      (numRequiredSignatures & VERSION_PREFIX_MASK)\n    ) {\n      throw new Error(\n        'Versioned messages must be deserialized with VersionedMessage.deserialize()',\n      );\n    }\n\n    const numReadonlySignedAccounts = byteArray.shift()!;\n    const numReadonlyUnsignedAccounts = byteArray.shift()!;\n\n    const accountCount = shortvec.decodeLength(byteArray);\n    let accountKeys = [];\n    for (let i = 0; i < accountCount; i++) {\n      const account = byteArray.slice(0, PUBLIC_KEY_LENGTH);\n      byteArray = byteArray.slice(PUBLIC_KEY_LENGTH);\n      accountKeys.push(new PublicKey(Buffer.from(account)));\n    }\n\n    const recentBlockhash = byteArray.slice(0, PUBLIC_KEY_LENGTH);\n    byteArray = byteArray.slice(PUBLIC_KEY_LENGTH);\n\n    const instructionCount = shortvec.decodeLength(byteArray);\n    let instructions: CompiledInstruction[] = [];\n    for (let i = 0; i < instructionCount; i++) {\n      const programIdIndex = byteArray.shift()!;\n      const accountCount = shortvec.decodeLength(byteArray);\n      const accounts = byteArray.slice(0, accountCount);\n      byteArray = byteArray.slice(accountCount);\n      const dataLength = shortvec.decodeLength(byteArray);\n      const dataSlice = byteArray.slice(0, dataLength);\n      const data = bs58.encode(Buffer.from(dataSlice));\n      byteArray = byteArray.slice(dataLength);\n      instructions.push({\n        programIdIndex,\n        accounts,\n        data,\n      });\n    }\n\n    const messageArgs = {\n      header: {\n        numRequiredSignatures,\n        numReadonlySignedAccounts,\n        numReadonlyUnsignedAccounts,\n      },\n      recentBlockhash: bs58.encode(Buffer.from(recentBlockhash)),\n      accountKeys,\n      instructions,\n    };\n\n    return new Message(messageArgs);\n  }\n}\n","import bs58 from 'bs58';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport * as Layout from '../layout';\nimport {Blockhash} from '../blockhash';\nimport {\n  MessageHeader,\n  MessageAddressTableLookup,\n  MessageCompiledInstruction,\n} from './index';\nimport {PublicKey, PUBLIC_KEY_LENGTH} from '../publickey';\nimport * as shortvec from '../utils/shortvec-encoding';\nimport assert from '../utils/assert';\nimport {PACKET_DATA_SIZE, VERSION_PREFIX_MASK} from '../transaction/constants';\nimport {TransactionInstruction} from '../transaction';\nimport {AddressLookupTableAccount} from '../programs';\nimport {CompiledKeys} from './compiled-keys';\nimport {AccountKeysFromLookups, MessageAccountKeys} from './account-keys';\n\n/**\n * Message constructor arguments\n */\nexport type MessageV0Args = {\n  /** The message header, identifying signed and read-only `accountKeys` */\n  header: MessageHeader;\n  /** The static account keys used by this transaction */\n  staticAccountKeys: PublicKey[];\n  /** The hash of a recent ledger block */\n  recentBlockhash: Blockhash;\n  /** Instructions that will be executed in sequence and committed in one atomic transaction if all succeed. */\n  compiledInstructions: MessageCompiledInstruction[];\n  /** Instructions that will be executed in sequence and committed in one atomic transaction if all succeed. */\n  addressTableLookups: MessageAddressTableLookup[];\n};\n\nexport type CompileV0Args = {\n  payerKey: PublicKey;\n  instructions: Array<TransactionInstruction>;\n  recentBlockhash: Blockhash;\n  addressLookupTableAccounts?: Array<AddressLookupTableAccount>;\n};\n\nexport type GetAccountKeysArgs =\n  | {\n      accountKeysFromLookups?: AccountKeysFromLookups | null;\n    }\n  | {\n      addressLookupTableAccounts?: AddressLookupTableAccount[] | null;\n    };\n\nexport class MessageV0 {\n  header: MessageHeader;\n  staticAccountKeys: Array<PublicKey>;\n  recentBlockhash: Blockhash;\n  compiledInstructions: Array<MessageCompiledInstruction>;\n  addressTableLookups: Array<MessageAddressTableLookup>;\n\n  constructor(args: MessageV0Args) {\n    this.header = args.header;\n    this.staticAccountKeys = args.staticAccountKeys;\n    this.recentBlockhash = args.recentBlockhash;\n    this.compiledInstructions = args.compiledInstructions;\n    this.addressTableLookups = args.addressTableLookups;\n  }\n\n  get version(): 0 {\n    return 0;\n  }\n\n  get numAccountKeysFromLookups(): number {\n    let count = 0;\n    for (const lookup of this.addressTableLookups) {\n      count += lookup.readonlyIndexes.length + lookup.writableIndexes.length;\n    }\n    return count;\n  }\n\n  getAccountKeys(args?: GetAccountKeysArgs): MessageAccountKeys {\n    let accountKeysFromLookups: AccountKeysFromLookups | undefined;\n    if (\n      args &&\n      'accountKeysFromLookups' in args &&\n      args.accountKeysFromLookups\n    ) {\n      if (\n        this.numAccountKeysFromLookups !=\n        args.accountKeysFromLookups.writable.length +\n          args.accountKeysFromLookups.readonly.length\n      ) {\n        throw new Error(\n          'Failed to get account keys because of a mismatch in the number of account keys from lookups',\n        );\n      }\n      accountKeysFromLookups = args.accountKeysFromLookups;\n    } else if (\n      args &&\n      'addressLookupTableAccounts' in args &&\n      args.addressLookupTableAccounts\n    ) {\n      accountKeysFromLookups = this.resolveAddressTableLookups(\n        args.addressLookupTableAccounts,\n      );\n    } else if (this.addressTableLookups.length > 0) {\n      throw new Error(\n        'Failed to get account keys because address table lookups were not resolved',\n      );\n    }\n    return new MessageAccountKeys(\n      this.staticAccountKeys,\n      accountKeysFromLookups,\n    );\n  }\n\n  isAccountSigner(index: number): boolean {\n    return index < this.header.numRequiredSignatures;\n  }\n\n  isAccountWritable(index: number): boolean {\n    const numSignedAccounts = this.header.numRequiredSignatures;\n    const numStaticAccountKeys = this.staticAccountKeys.length;\n    if (index >= numStaticAccountKeys) {\n      const lookupAccountKeysIndex = index - numStaticAccountKeys;\n      const numWritableLookupAccountKeys = this.addressTableLookups.reduce(\n        (count, lookup) => count + lookup.writableIndexes.length,\n        0,\n      );\n      return lookupAccountKeysIndex < numWritableLookupAccountKeys;\n    } else if (index >= this.header.numRequiredSignatures) {\n      const unsignedAccountIndex = index - numSignedAccounts;\n      const numUnsignedAccounts = numStaticAccountKeys - numSignedAccounts;\n      const numWritableUnsignedAccounts =\n        numUnsignedAccounts - this.header.numReadonlyUnsignedAccounts;\n      return unsignedAccountIndex < numWritableUnsignedAccounts;\n    } else {\n      const numWritableSignedAccounts =\n        numSignedAccounts - this.header.numReadonlySignedAccounts;\n      return index < numWritableSignedAccounts;\n    }\n  }\n\n  resolveAddressTableLookups(\n    addressLookupTableAccounts: AddressLookupTableAccount[],\n  ): AccountKeysFromLookups {\n    const accountKeysFromLookups: AccountKeysFromLookups = {\n      writable: [],\n      readonly: [],\n    };\n\n    for (const tableLookup of this.addressTableLookups) {\n      const tableAccount = addressLookupTableAccounts.find(account =>\n        account.key.equals(tableLookup.accountKey),\n      );\n      if (!tableAccount) {\n        throw new Error(\n          `Failed to find address lookup table account for table key ${tableLookup.accountKey.toBase58()}`,\n        );\n      }\n\n      for (const index of tableLookup.writableIndexes) {\n        if (index < tableAccount.state.addresses.length) {\n          accountKeysFromLookups.writable.push(\n            tableAccount.state.addresses[index],\n          );\n        } else {\n          throw new Error(\n            `Failed to find address for index ${index} in address lookup table ${tableLookup.accountKey.toBase58()}`,\n          );\n        }\n      }\n\n      for (const index of tableLookup.readonlyIndexes) {\n        if (index < tableAccount.state.addresses.length) {\n          accountKeysFromLookups.readonly.push(\n            tableAccount.state.addresses[index],\n          );\n        } else {\n          throw new Error(\n            `Failed to find address for index ${index} in address lookup table ${tableLookup.accountKey.toBase58()}`,\n          );\n        }\n      }\n    }\n\n    return accountKeysFromLookups;\n  }\n\n  static compile(args: CompileV0Args): MessageV0 {\n    const compiledKeys = CompiledKeys.compile(args.instructions, args.payerKey);\n\n    const addressTableLookups = new Array<MessageAddressTableLookup>();\n    const accountKeysFromLookups: AccountKeysFromLookups = {\n      writable: new Array(),\n      readonly: new Array(),\n    };\n    const lookupTableAccounts = args.addressLookupTableAccounts || [];\n    for (const lookupTable of lookupTableAccounts) {\n      const extractResult = compiledKeys.extractTableLookup(lookupTable);\n      if (extractResult !== undefined) {\n        const [addressTableLookup, {writable, readonly}] = extractResult;\n        addressTableLookups.push(addressTableLookup);\n        accountKeysFromLookups.writable.push(...writable);\n        accountKeysFromLookups.readonly.push(...readonly);\n      }\n    }\n\n    const [header, staticAccountKeys] = compiledKeys.getMessageComponents();\n    const accountKeys = new MessageAccountKeys(\n      staticAccountKeys,\n      accountKeysFromLookups,\n    );\n    const compiledInstructions = accountKeys.compileInstructions(\n      args.instructions,\n    );\n    return new MessageV0({\n      header,\n      staticAccountKeys,\n      recentBlockhash: args.recentBlockhash,\n      compiledInstructions,\n      addressTableLookups,\n    });\n  }\n\n  serialize(): Uint8Array {\n    const encodedStaticAccountKeysLength = Array<number>();\n    shortvec.encodeLength(\n      encodedStaticAccountKeysLength,\n      this.staticAccountKeys.length,\n    );\n\n    const serializedInstructions = this.serializeInstructions();\n    const encodedInstructionsLength = Array<number>();\n    shortvec.encodeLength(\n      encodedInstructionsLength,\n      this.compiledInstructions.length,\n    );\n\n    const serializedAddressTableLookups = this.serializeAddressTableLookups();\n    const encodedAddressTableLookupsLength = Array<number>();\n    shortvec.encodeLength(\n      encodedAddressTableLookupsLength,\n      this.addressTableLookups.length,\n    );\n\n    const messageLayout = BufferLayout.struct<{\n      prefix: number;\n      header: MessageHeader;\n      staticAccountKeysLength: Uint8Array;\n      staticAccountKeys: Array<Uint8Array>;\n      recentBlockhash: Uint8Array;\n      instructionsLength: Uint8Array;\n      serializedInstructions: Uint8Array;\n      addressTableLookupsLength: Uint8Array;\n      serializedAddressTableLookups: Uint8Array;\n    }>([\n      BufferLayout.u8('prefix'),\n      BufferLayout.struct<MessageHeader>(\n        [\n          BufferLayout.u8('numRequiredSignatures'),\n          BufferLayout.u8('numReadonlySignedAccounts'),\n          BufferLayout.u8('numReadonlyUnsignedAccounts'),\n        ],\n        'header',\n      ),\n      BufferLayout.blob(\n        encodedStaticAccountKeysLength.length,\n        'staticAccountKeysLength',\n      ),\n      BufferLayout.seq(\n        Layout.publicKey(),\n        this.staticAccountKeys.length,\n        'staticAccountKeys',\n      ),\n      Layout.publicKey('recentBlockhash'),\n      BufferLayout.blob(encodedInstructionsLength.length, 'instructionsLength'),\n      BufferLayout.blob(\n        serializedInstructions.length,\n        'serializedInstructions',\n      ),\n      BufferLayout.blob(\n        encodedAddressTableLookupsLength.length,\n        'addressTableLookupsLength',\n      ),\n      BufferLayout.blob(\n        serializedAddressTableLookups.length,\n        'serializedAddressTableLookups',\n      ),\n    ]);\n\n    const serializedMessage = new Uint8Array(PACKET_DATA_SIZE);\n    const MESSAGE_VERSION_0_PREFIX = 1 << 7;\n    const serializedMessageLength = messageLayout.encode(\n      {\n        prefix: MESSAGE_VERSION_0_PREFIX,\n        header: this.header,\n        staticAccountKeysLength: new Uint8Array(encodedStaticAccountKeysLength),\n        staticAccountKeys: this.staticAccountKeys.map(key => key.toBytes()),\n        recentBlockhash: bs58.decode(this.recentBlockhash),\n        instructionsLength: new Uint8Array(encodedInstructionsLength),\n        serializedInstructions,\n        addressTableLookupsLength: new Uint8Array(\n          encodedAddressTableLookupsLength,\n        ),\n        serializedAddressTableLookups,\n      },\n      serializedMessage,\n    );\n    return serializedMessage.slice(0, serializedMessageLength);\n  }\n\n  private serializeInstructions(): Uint8Array {\n    let serializedLength = 0;\n    const serializedInstructions = new Uint8Array(PACKET_DATA_SIZE);\n    for (const instruction of this.compiledInstructions) {\n      const encodedAccountKeyIndexesLength = Array<number>();\n      shortvec.encodeLength(\n        encodedAccountKeyIndexesLength,\n        instruction.accountKeyIndexes.length,\n      );\n\n      const encodedDataLength = Array<number>();\n      shortvec.encodeLength(encodedDataLength, instruction.data.length);\n\n      const instructionLayout = BufferLayout.struct<{\n        programIdIndex: number;\n        encodedAccountKeyIndexesLength: Uint8Array;\n        accountKeyIndexes: number[];\n        encodedDataLength: Uint8Array;\n        data: Uint8Array;\n      }>([\n        BufferLayout.u8('programIdIndex'),\n        BufferLayout.blob(\n          encodedAccountKeyIndexesLength.length,\n          'encodedAccountKeyIndexesLength',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8(),\n          instruction.accountKeyIndexes.length,\n          'accountKeyIndexes',\n        ),\n        BufferLayout.blob(encodedDataLength.length, 'encodedDataLength'),\n        BufferLayout.blob(instruction.data.length, 'data'),\n      ]);\n\n      serializedLength += instructionLayout.encode(\n        {\n          programIdIndex: instruction.programIdIndex,\n          encodedAccountKeyIndexesLength: new Uint8Array(\n            encodedAccountKeyIndexesLength,\n          ),\n          accountKeyIndexes: instruction.accountKeyIndexes,\n          encodedDataLength: new Uint8Array(encodedDataLength),\n          data: instruction.data,\n        },\n        serializedInstructions,\n        serializedLength,\n      );\n    }\n\n    return serializedInstructions.slice(0, serializedLength);\n  }\n\n  private serializeAddressTableLookups(): Uint8Array {\n    let serializedLength = 0;\n    const serializedAddressTableLookups = new Uint8Array(PACKET_DATA_SIZE);\n    for (const lookup of this.addressTableLookups) {\n      const encodedWritableIndexesLength = Array<number>();\n      shortvec.encodeLength(\n        encodedWritableIndexesLength,\n        lookup.writableIndexes.length,\n      );\n\n      const encodedReadonlyIndexesLength = Array<number>();\n      shortvec.encodeLength(\n        encodedReadonlyIndexesLength,\n        lookup.readonlyIndexes.length,\n      );\n\n      const addressTableLookupLayout = BufferLayout.struct<{\n        accountKey: Uint8Array;\n        encodedWritableIndexesLength: Uint8Array;\n        writableIndexes: number[];\n        encodedReadonlyIndexesLength: Uint8Array;\n        readonlyIndexes: number[];\n      }>([\n        Layout.publicKey('accountKey'),\n        BufferLayout.blob(\n          encodedWritableIndexesLength.length,\n          'encodedWritableIndexesLength',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8(),\n          lookup.writableIndexes.length,\n          'writableIndexes',\n        ),\n        BufferLayout.blob(\n          encodedReadonlyIndexesLength.length,\n          'encodedReadonlyIndexesLength',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8(),\n          lookup.readonlyIndexes.length,\n          'readonlyIndexes',\n        ),\n      ]);\n\n      serializedLength += addressTableLookupLayout.encode(\n        {\n          accountKey: lookup.accountKey.toBytes(),\n          encodedWritableIndexesLength: new Uint8Array(\n            encodedWritableIndexesLength,\n          ),\n          writableIndexes: lookup.writableIndexes,\n          encodedReadonlyIndexesLength: new Uint8Array(\n            encodedReadonlyIndexesLength,\n          ),\n          readonlyIndexes: lookup.readonlyIndexes,\n        },\n        serializedAddressTableLookups,\n        serializedLength,\n      );\n    }\n\n    return serializedAddressTableLookups.slice(0, serializedLength);\n  }\n\n  static deserialize(serializedMessage: Uint8Array): MessageV0 {\n    let byteArray = [...serializedMessage];\n\n    const prefix = byteArray.shift() as number;\n    const maskedPrefix = prefix & VERSION_PREFIX_MASK;\n    assert(\n      prefix !== maskedPrefix,\n      `Expected versioned message but received legacy message`,\n    );\n\n    const version = maskedPrefix;\n    assert(\n      version === 0,\n      `Expected versioned message with version 0 but found version ${version}`,\n    );\n\n    const header: MessageHeader = {\n      numRequiredSignatures: byteArray.shift() as number,\n      numReadonlySignedAccounts: byteArray.shift() as number,\n      numReadonlyUnsignedAccounts: byteArray.shift() as number,\n    };\n\n    const staticAccountKeys = [];\n    const staticAccountKeysLength = shortvec.decodeLength(byteArray);\n    for (let i = 0; i < staticAccountKeysLength; i++) {\n      staticAccountKeys.push(\n        new PublicKey(byteArray.splice(0, PUBLIC_KEY_LENGTH)),\n      );\n    }\n\n    const recentBlockhash = bs58.encode(byteArray.splice(0, PUBLIC_KEY_LENGTH));\n\n    const instructionCount = shortvec.decodeLength(byteArray);\n    const compiledInstructions: MessageCompiledInstruction[] = [];\n    for (let i = 0; i < instructionCount; i++) {\n      const programIdIndex = byteArray.shift() as number;\n      const accountKeyIndexesLength = shortvec.decodeLength(byteArray);\n      const accountKeyIndexes = byteArray.splice(0, accountKeyIndexesLength);\n      const dataLength = shortvec.decodeLength(byteArray);\n      const data = new Uint8Array(byteArray.splice(0, dataLength));\n      compiledInstructions.push({\n        programIdIndex,\n        accountKeyIndexes,\n        data,\n      });\n    }\n\n    const addressTableLookupsCount = shortvec.decodeLength(byteArray);\n    const addressTableLookups: MessageAddressTableLookup[] = [];\n    for (let i = 0; i < addressTableLookupsCount; i++) {\n      const accountKey = new PublicKey(byteArray.splice(0, PUBLIC_KEY_LENGTH));\n      const writableIndexesLength = shortvec.decodeLength(byteArray);\n      const writableIndexes = byteArray.splice(0, writableIndexesLength);\n      const readonlyIndexesLength = shortvec.decodeLength(byteArray);\n      const readonlyIndexes = byteArray.splice(0, readonlyIndexesLength);\n      addressTableLookups.push({\n        accountKey,\n        writableIndexes,\n        readonlyIndexes,\n      });\n    }\n\n    return new MessageV0({\n      header,\n      staticAccountKeys,\n      recentBlockhash,\n      compiledInstructions,\n      addressTableLookups,\n    });\n  }\n}\n","import {VERSION_PREFIX_MASK} from '../transaction/constants';\nimport {Message} from './legacy';\nimport {MessageV0} from './v0';\n\nexport type VersionedMessage = Message | MessageV0;\n// eslint-disable-next-line no-redeclare\nexport const VersionedMessage = {\n  deserializeMessageVersion(serializedMessage: Uint8Array): 'legacy' | number {\n    const prefix = serializedMessage[0];\n    const maskedPrefix = prefix & VERSION_PREFIX_MASK;\n\n    // if the highest bit of the prefix is not set, the message is not versioned\n    if (maskedPrefix === prefix) {\n      return 'legacy';\n    }\n\n    // the lower 7 bits of the prefix indicate the message version\n    return maskedPrefix;\n  },\n\n  deserialize: (serializedMessage: Uint8Array): VersionedMessage => {\n    const version =\n      VersionedMessage.deserializeMessageVersion(serializedMessage);\n    if (version === 'legacy') {\n      return Message.from(serializedMessage);\n    }\n\n    if (version === 0) {\n      return MessageV0.deserialize(serializedMessage);\n    } else {\n      throw new Error(\n        `Transaction message version ${version} deserialization is not supported`,\n      );\n    }\n  },\n};\n","import bs58 from 'bs58';\nimport {Buffer} from 'buffer';\n\nimport {PACKET_DATA_SIZE, SIGNATURE_LENGTH_IN_BYTES} from './constants';\nimport {Connection} from '../connection';\nimport {Message} from '../message';\nimport {PublicKey} from '../publickey';\nimport * as shortvec from '../utils/shortvec-encoding';\nimport {toBuffer} from '../utils/to-buffer';\nimport invariant from '../utils/assert';\nimport type {Signer} from '../keypair';\nimport type {Blockhash} from '../blockhash';\nimport type {CompiledInstruction} from '../message';\nimport {sign, verify} from '../utils/ed25519';\n\n/**\n * Transaction signature as base-58 encoded string\n */\nexport type TransactionSignature = string;\n\nexport const enum TransactionStatus {\n  BLOCKHEIGHT_EXCEEDED,\n  PROCESSED,\n  TIMED_OUT,\n  NONCE_INVALID,\n}\n\n/**\n * Default (empty) signature\n */\nconst DEFAULT_SIGNATURE = Buffer.alloc(SIGNATURE_LENGTH_IN_BYTES).fill(0);\n\n/**\n * Account metadata used to define instructions\n */\nexport type AccountMeta = {\n  /** An account's public key */\n  pubkey: PublicKey;\n  /** True if an instruction requires a transaction signature matching `pubkey` */\n  isSigner: boolean;\n  /** True if the `pubkey` can be loaded as a read-write account. */\n  isWritable: boolean;\n};\n\n/**\n * List of TransactionInstruction object fields that may be initialized at construction\n */\nexport type TransactionInstructionCtorFields = {\n  keys: Array<AccountMeta>;\n  programId: PublicKey;\n  data?: Buffer;\n};\n\n/**\n * Configuration object for Transaction.serialize()\n */\nexport type SerializeConfig = {\n  /** Require all transaction signatures be present (default: true) */\n  requireAllSignatures?: boolean;\n  /** Verify provided signatures (default: true) */\n  verifySignatures?: boolean;\n};\n\n/**\n * @internal\n */\nexport interface TransactionInstructionJSON {\n  keys: {\n    pubkey: string;\n    isSigner: boolean;\n    isWritable: boolean;\n  }[];\n  programId: string;\n  data: number[];\n}\n\n/**\n * Transaction Instruction class\n */\nexport class TransactionInstruction {\n  /**\n   * Public keys to include in this transaction\n   * Boolean represents whether this pubkey needs to sign the transaction\n   */\n  keys: Array<AccountMeta>;\n\n  /**\n   * Program Id to execute\n   */\n  programId: PublicKey;\n\n  /**\n   * Program input\n   */\n  data: Buffer = Buffer.alloc(0);\n\n  constructor(opts: TransactionInstructionCtorFields) {\n    this.programId = opts.programId;\n    this.keys = opts.keys;\n    if (opts.data) {\n      this.data = opts.data;\n    }\n  }\n\n  /**\n   * @internal\n   */\n  toJSON(): TransactionInstructionJSON {\n    return {\n      keys: this.keys.map(({pubkey, isSigner, isWritable}) => ({\n        pubkey: pubkey.toJSON(),\n        isSigner,\n        isWritable,\n      })),\n      programId: this.programId.toJSON(),\n      data: [...this.data],\n    };\n  }\n}\n\n/**\n * Pair of signature and corresponding public key\n */\nexport type SignaturePubkeyPair = {\n  signature: Buffer | null;\n  publicKey: PublicKey;\n};\n\n/**\n * List of Transaction object fields that may be initialized at construction\n */\nexport type TransactionCtorFields_DEPRECATED = {\n  /** Optional nonce information used for offline nonce'd transactions */\n  nonceInfo?: NonceInformation | null;\n  /** The transaction fee payer */\n  feePayer?: PublicKey | null;\n  /** One or more signatures */\n  signatures?: Array<SignaturePubkeyPair>;\n  /** A recent blockhash */\n  recentBlockhash?: Blockhash;\n};\n\n// For backward compatibility; an unfortunate consequence of being\n// forced to over-export types by the documentation generator.\n// See https://github.com/solana-labs/solana/pull/25820\nexport type TransactionCtorFields = TransactionCtorFields_DEPRECATED;\n\n/**\n * Blockhash-based transactions have a lifetime that are defined by\n * the blockhash they include. Any transaction whose blockhash is\n * too old will be rejected.\n */\nexport type TransactionBlockhashCtor = {\n  /** The transaction fee payer */\n  feePayer?: PublicKey | null;\n  /** One or more signatures */\n  signatures?: Array<SignaturePubkeyPair>;\n  /** A recent blockhash */\n  blockhash: Blockhash;\n  /** the last block chain can advance to before tx is declared expired */\n  lastValidBlockHeight: number;\n};\n\n/**\n * Use these options to construct a durable nonce transaction.\n */\nexport type TransactionNonceCtor = {\n  /** The transaction fee payer */\n  feePayer?: PublicKey | null;\n  minContextSlot: number;\n  nonceInfo: NonceInformation;\n  /** One or more signatures */\n  signatures?: Array<SignaturePubkeyPair>;\n};\n\n/**\n * Nonce information to be used to build an offline Transaction.\n */\nexport type NonceInformation = {\n  /** The current blockhash stored in the nonce */\n  nonce: Blockhash;\n  /** AdvanceNonceAccount Instruction */\n  nonceInstruction: TransactionInstruction;\n};\n\n/**\n * @internal\n */\nexport interface TransactionJSON {\n  recentBlockhash: string | null;\n  feePayer: string | null;\n  nonceInfo: {\n    nonce: string;\n    nonceInstruction: TransactionInstructionJSON;\n  } | null;\n  instructions: TransactionInstructionJSON[];\n  signers: string[];\n}\n\n/**\n * Transaction class\n */\nexport class Transaction {\n  /**\n   * Signatures for the transaction.  Typically created by invoking the\n   * `sign()` method\n   */\n  signatures: Array<SignaturePubkeyPair> = [];\n\n  /**\n   * The first (payer) Transaction signature\n   */\n  get signature(): Buffer | null {\n    if (this.signatures.length > 0) {\n      return this.signatures[0].signature;\n    }\n    return null;\n  }\n\n  /**\n   * The transaction fee payer\n   */\n  feePayer?: PublicKey;\n\n  /**\n   * The instructions to atomically execute\n   */\n  instructions: Array<TransactionInstruction> = [];\n\n  /**\n   * A recent transaction id. Must be populated by the caller\n   */\n  recentBlockhash?: Blockhash;\n\n  /**\n   * the last block chain can advance to before tx is declared expired\n   * */\n  lastValidBlockHeight?: number;\n\n  /**\n   * Optional Nonce information. If populated, transaction will use a durable\n   * Nonce hash instead of a recentBlockhash. Must be populated by the caller\n   */\n  nonceInfo?: NonceInformation;\n\n  /**\n   * If this is a nonce transaction this represents the minimum slot from which\n   * to evaluate if the nonce has advanced when attempting to confirm the\n   * transaction. This protects against a case where the transaction confirmation\n   * logic loads the nonce account from an old slot and assumes the mismatch in\n   * nonce value implies that the nonce has been advanced.\n   */\n  minNonceContextSlot?: number;\n\n  /**\n   * @internal\n   */\n  _message?: Message;\n\n  /**\n   * @internal\n   */\n  _json?: TransactionJSON;\n\n  // Construct a transaction with a blockhash and lastValidBlockHeight\n  constructor(opts?: TransactionBlockhashCtor);\n\n  // Construct a transaction using a durable nonce\n  constructor(opts?: TransactionNonceCtor);\n\n  /**\n   * @deprecated `TransactionCtorFields` has been deprecated and will be removed in a future version.\n   * Please supply a `TransactionBlockhashCtor` instead.\n   */\n  constructor(opts?: TransactionCtorFields_DEPRECATED);\n\n  /**\n   * Construct an empty Transaction\n   */\n  constructor(\n    opts?:\n      | TransactionBlockhashCtor\n      | TransactionNonceCtor\n      | TransactionCtorFields_DEPRECATED,\n  ) {\n    if (!opts) {\n      return;\n    }\n    if (opts.feePayer) {\n      this.feePayer = opts.feePayer;\n    }\n    if (opts.signatures) {\n      this.signatures = opts.signatures;\n    }\n    if (Object.prototype.hasOwnProperty.call(opts, 'nonceInfo')) {\n      const {minContextSlot, nonceInfo} = opts as TransactionNonceCtor;\n      this.minNonceContextSlot = minContextSlot;\n      this.nonceInfo = nonceInfo;\n    } else if (\n      Object.prototype.hasOwnProperty.call(opts, 'lastValidBlockHeight')\n    ) {\n      const {blockhash, lastValidBlockHeight} =\n        opts as TransactionBlockhashCtor;\n      this.recentBlockhash = blockhash;\n      this.lastValidBlockHeight = lastValidBlockHeight;\n    } else {\n      const {recentBlockhash, nonceInfo} =\n        opts as TransactionCtorFields_DEPRECATED;\n      if (nonceInfo) {\n        this.nonceInfo = nonceInfo;\n      }\n      this.recentBlockhash = recentBlockhash;\n    }\n  }\n\n  /**\n   * @internal\n   */\n  toJSON(): TransactionJSON {\n    return {\n      recentBlockhash: this.recentBlockhash || null,\n      feePayer: this.feePayer ? this.feePayer.toJSON() : null,\n      nonceInfo: this.nonceInfo\n        ? {\n            nonce: this.nonceInfo.nonce,\n            nonceInstruction: this.nonceInfo.nonceInstruction.toJSON(),\n          }\n        : null,\n      instructions: this.instructions.map(instruction => instruction.toJSON()),\n      signers: this.signatures.map(({publicKey}) => {\n        return publicKey.toJSON();\n      }),\n    };\n  }\n\n  /**\n   * Add one or more instructions to this Transaction\n   */\n  add(\n    ...items: Array<\n      Transaction | TransactionInstruction | TransactionInstructionCtorFields\n    >\n  ): Transaction {\n    if (items.length === 0) {\n      throw new Error('No instructions');\n    }\n\n    items.forEach((item: any) => {\n      if ('instructions' in item) {\n        this.instructions = this.instructions.concat(item.instructions);\n      } else if ('data' in item && 'programId' in item && 'keys' in item) {\n        this.instructions.push(item);\n      } else {\n        this.instructions.push(new TransactionInstruction(item));\n      }\n    });\n    return this;\n  }\n\n  /**\n   * Compile transaction data\n   */\n  compileMessage(): Message {\n    if (\n      this._message &&\n      JSON.stringify(this.toJSON()) === JSON.stringify(this._json)\n    ) {\n      return this._message;\n    }\n\n    let recentBlockhash;\n    let instructions: TransactionInstruction[];\n    if (this.nonceInfo) {\n      recentBlockhash = this.nonceInfo.nonce;\n      if (this.instructions[0] != this.nonceInfo.nonceInstruction) {\n        instructions = [this.nonceInfo.nonceInstruction, ...this.instructions];\n      } else {\n        instructions = this.instructions;\n      }\n    } else {\n      recentBlockhash = this.recentBlockhash;\n      instructions = this.instructions;\n    }\n    if (!recentBlockhash) {\n      throw new Error('Transaction recentBlockhash required');\n    }\n\n    if (instructions.length < 1) {\n      console.warn('No instructions provided');\n    }\n\n    let feePayer: PublicKey;\n    if (this.feePayer) {\n      feePayer = this.feePayer;\n    } else if (this.signatures.length > 0 && this.signatures[0].publicKey) {\n      // Use implicit fee payer\n      feePayer = this.signatures[0].publicKey;\n    } else {\n      throw new Error('Transaction fee payer required');\n    }\n\n    for (let i = 0; i < instructions.length; i++) {\n      if (instructions[i].programId === undefined) {\n        throw new Error(\n          `Transaction instruction index ${i} has undefined program id`,\n        );\n      }\n    }\n\n    const programIds: string[] = [];\n    const accountMetas: AccountMeta[] = [];\n    instructions.forEach(instruction => {\n      instruction.keys.forEach(accountMeta => {\n        accountMetas.push({...accountMeta});\n      });\n\n      const programId = instruction.programId.toString();\n      if (!programIds.includes(programId)) {\n        programIds.push(programId);\n      }\n    });\n\n    // Append programID account metas\n    programIds.forEach(programId => {\n      accountMetas.push({\n        pubkey: new PublicKey(programId),\n        isSigner: false,\n        isWritable: false,\n      });\n    });\n\n    // Cull duplicate account metas\n    const uniqueMetas: AccountMeta[] = [];\n    accountMetas.forEach(accountMeta => {\n      const pubkeyString = accountMeta.pubkey.toString();\n      const uniqueIndex = uniqueMetas.findIndex(x => {\n        return x.pubkey.toString() === pubkeyString;\n      });\n      if (uniqueIndex > -1) {\n        uniqueMetas[uniqueIndex].isWritable =\n          uniqueMetas[uniqueIndex].isWritable || accountMeta.isWritable;\n        uniqueMetas[uniqueIndex].isSigner =\n          uniqueMetas[uniqueIndex].isSigner || accountMeta.isSigner;\n      } else {\n        uniqueMetas.push(accountMeta);\n      }\n    });\n\n    // Sort. Prioritizing first by signer, then by writable\n    uniqueMetas.sort(function (x, y) {\n      if (x.isSigner !== y.isSigner) {\n        // Signers always come before non-signers\n        return x.isSigner ? -1 : 1;\n      }\n      if (x.isWritable !== y.isWritable) {\n        // Writable accounts always come before read-only accounts\n        return x.isWritable ? -1 : 1;\n      }\n      // Otherwise, sort by pubkey, stringwise.\n      const options = {\n        localeMatcher: 'best fit',\n        usage: 'sort',\n        sensitivity: 'variant',\n        ignorePunctuation: false,\n        numeric: false,\n        caseFirst: 'lower',\n      };\n      return x.pubkey\n        .toBase58()\n        .localeCompare(y.pubkey.toBase58(), 'en', options);\n    });\n\n    // Move fee payer to the front\n    const feePayerIndex = uniqueMetas.findIndex(x => {\n      return x.pubkey.equals(feePayer);\n    });\n    if (feePayerIndex > -1) {\n      const [payerMeta] = uniqueMetas.splice(feePayerIndex, 1);\n      payerMeta.isSigner = true;\n      payerMeta.isWritable = true;\n      uniqueMetas.unshift(payerMeta);\n    } else {\n      uniqueMetas.unshift({\n        pubkey: feePayer,\n        isSigner: true,\n        isWritable: true,\n      });\n    }\n\n    // Disallow unknown signers\n    for (const signature of this.signatures) {\n      const uniqueIndex = uniqueMetas.findIndex(x => {\n        return x.pubkey.equals(signature.publicKey);\n      });\n      if (uniqueIndex > -1) {\n        if (!uniqueMetas[uniqueIndex].isSigner) {\n          uniqueMetas[uniqueIndex].isSigner = true;\n          console.warn(\n            'Transaction references a signature that is unnecessary, ' +\n              'only the fee payer and instruction signer accounts should sign a transaction. ' +\n              'This behavior is deprecated and will throw an error in the next major version release.',\n          );\n        }\n      } else {\n        throw new Error(`unknown signer: ${signature.publicKey.toString()}`);\n      }\n    }\n\n    let numRequiredSignatures = 0;\n    let numReadonlySignedAccounts = 0;\n    let numReadonlyUnsignedAccounts = 0;\n\n    // Split out signing from non-signing keys and count header values\n    const signedKeys: string[] = [];\n    const unsignedKeys: string[] = [];\n    uniqueMetas.forEach(({pubkey, isSigner, isWritable}) => {\n      if (isSigner) {\n        signedKeys.push(pubkey.toString());\n        numRequiredSignatures += 1;\n        if (!isWritable) {\n          numReadonlySignedAccounts += 1;\n        }\n      } else {\n        unsignedKeys.push(pubkey.toString());\n        if (!isWritable) {\n          numReadonlyUnsignedAccounts += 1;\n        }\n      }\n    });\n\n    const accountKeys = signedKeys.concat(unsignedKeys);\n    const compiledInstructions: CompiledInstruction[] = instructions.map(\n      instruction => {\n        const {data, programId} = instruction;\n        return {\n          programIdIndex: accountKeys.indexOf(programId.toString()),\n          accounts: instruction.keys.map(meta =>\n            accountKeys.indexOf(meta.pubkey.toString()),\n          ),\n          data: bs58.encode(data),\n        };\n      },\n    );\n\n    compiledInstructions.forEach(instruction => {\n      invariant(instruction.programIdIndex >= 0);\n      instruction.accounts.forEach(keyIndex => invariant(keyIndex >= 0));\n    });\n\n    return new Message({\n      header: {\n        numRequiredSignatures,\n        numReadonlySignedAccounts,\n        numReadonlyUnsignedAccounts,\n      },\n      accountKeys,\n      recentBlockhash,\n      instructions: compiledInstructions,\n    });\n  }\n\n  /**\n   * @internal\n   */\n  _compile(): Message {\n    const message = this.compileMessage();\n    const signedKeys = message.accountKeys.slice(\n      0,\n      message.header.numRequiredSignatures,\n    );\n\n    if (this.signatures.length === signedKeys.length) {\n      const valid = this.signatures.every((pair, index) => {\n        return signedKeys[index].equals(pair.publicKey);\n      });\n\n      if (valid) return message;\n    }\n\n    this.signatures = signedKeys.map(publicKey => ({\n      signature: null,\n      publicKey,\n    }));\n\n    return message;\n  }\n\n  /**\n   * Get a buffer of the Transaction data that need to be covered by signatures\n   */\n  serializeMessage(): Buffer {\n    return this._compile().serialize();\n  }\n\n  /**\n   * Get the estimated fee associated with a transaction\n   */\n  async getEstimatedFee(connection: Connection): Promise<number | null> {\n    return (await connection.getFeeForMessage(this.compileMessage())).value;\n  }\n\n  /**\n   * Specify the public keys which will be used to sign the Transaction.\n   * The first signer will be used as the transaction fee payer account.\n   *\n   * Signatures can be added with either `partialSign` or `addSignature`\n   *\n   * @deprecated Deprecated since v0.84.0. Only the fee payer needs to be\n   * specified and it can be set in the Transaction constructor or with the\n   * `feePayer` property.\n   */\n  setSigners(...signers: Array<PublicKey>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    const seen = new Set();\n    this.signatures = signers\n      .filter(publicKey => {\n        const key = publicKey.toString();\n        if (seen.has(key)) {\n          return false;\n        } else {\n          seen.add(key);\n          return true;\n        }\n      })\n      .map(publicKey => ({signature: null, publicKey}));\n  }\n\n  /**\n   * Sign the Transaction with the specified signers. Multiple signatures may\n   * be applied to a Transaction. The first signature is considered \"primary\"\n   * and is used identify and confirm transactions.\n   *\n   * If the Transaction `feePayer` is not set, the first signer will be used\n   * as the transaction fee payer account.\n   *\n   * Transaction fields should not be modified after the first call to `sign`,\n   * as doing so may invalidate the signature and cause the Transaction to be\n   * rejected.\n   *\n   * The Transaction must be assigned a valid `recentBlockhash` before invoking this method\n   */\n  sign(...signers: Array<Signer>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    // Dedupe signers\n    const seen = new Set();\n    const uniqueSigners = [];\n    for (const signer of signers) {\n      const key = signer.publicKey.toString();\n      if (seen.has(key)) {\n        continue;\n      } else {\n        seen.add(key);\n        uniqueSigners.push(signer);\n      }\n    }\n\n    this.signatures = uniqueSigners.map(signer => ({\n      signature: null,\n      publicKey: signer.publicKey,\n    }));\n\n    const message = this._compile();\n    this._partialSign(message, ...uniqueSigners);\n  }\n\n  /**\n   * Partially sign a transaction with the specified accounts. All accounts must\n   * correspond to either the fee payer or a signer account in the transaction\n   * instructions.\n   *\n   * All the caveats from the `sign` method apply to `partialSign`\n   */\n  partialSign(...signers: Array<Signer>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    // Dedupe signers\n    const seen = new Set();\n    const uniqueSigners = [];\n    for (const signer of signers) {\n      const key = signer.publicKey.toString();\n      if (seen.has(key)) {\n        continue;\n      } else {\n        seen.add(key);\n        uniqueSigners.push(signer);\n      }\n    }\n\n    const message = this._compile();\n    this._partialSign(message, ...uniqueSigners);\n  }\n\n  /**\n   * @internal\n   */\n  _partialSign(message: Message, ...signers: Array<Signer>) {\n    const signData = message.serialize();\n    signers.forEach(signer => {\n      const signature = sign(signData, signer.secretKey);\n      this._addSignature(signer.publicKey, toBuffer(signature));\n    });\n  }\n\n  /**\n   * Add an externally created signature to a transaction. The public key\n   * must correspond to either the fee payer or a signer account in the transaction\n   * instructions.\n   */\n  addSignature(pubkey: PublicKey, signature: Buffer) {\n    this._compile(); // Ensure signatures array is populated\n    this._addSignature(pubkey, signature);\n  }\n\n  /**\n   * @internal\n   */\n  _addSignature(pubkey: PublicKey, signature: Buffer) {\n    invariant(signature.length === 64);\n\n    const index = this.signatures.findIndex(sigpair =>\n      pubkey.equals(sigpair.publicKey),\n    );\n    if (index < 0) {\n      throw new Error(`unknown signer: ${pubkey.toString()}`);\n    }\n\n    this.signatures[index].signature = Buffer.from(signature);\n  }\n\n  /**\n   * Verify signatures of a Transaction\n   * Optional parameter specifies if we're expecting a fully signed Transaction or a partially signed one.\n   * If no boolean is provided, we expect a fully signed Transaction by default.\n   */\n  verifySignatures(requireAllSignatures?: boolean): boolean {\n    return this._verifySignatures(\n      this.serializeMessage(),\n      requireAllSignatures === undefined ? true : requireAllSignatures,\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _verifySignatures(\n    signData: Uint8Array,\n    requireAllSignatures: boolean,\n  ): boolean {\n    for (const {signature, publicKey} of this.signatures) {\n      if (signature === null) {\n        if (requireAllSignatures) {\n          return false;\n        }\n      } else {\n        if (!verify(signature, signData, publicKey.toBytes())) {\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Serialize the Transaction in the wire format.\n   */\n  serialize(config?: SerializeConfig): Buffer {\n    const {requireAllSignatures, verifySignatures} = Object.assign(\n      {requireAllSignatures: true, verifySignatures: true},\n      config,\n    );\n\n    const signData = this.serializeMessage();\n    if (\n      verifySignatures &&\n      !this._verifySignatures(signData, requireAllSignatures)\n    ) {\n      throw new Error('Signature verification failed');\n    }\n\n    return this._serialize(signData);\n  }\n\n  /**\n   * @internal\n   */\n  _serialize(signData: Buffer): Buffer {\n    const {signatures} = this;\n    const signatureCount: number[] = [];\n    shortvec.encodeLength(signatureCount, signatures.length);\n    const transactionLength =\n      signatureCount.length + signatures.length * 64 + signData.length;\n    const wireTransaction = Buffer.alloc(transactionLength);\n    invariant(signatures.length < 256);\n    Buffer.from(signatureCount).copy(wireTransaction, 0);\n    signatures.forEach(({signature}, index) => {\n      if (signature !== null) {\n        invariant(signature.length === 64, `signature has invalid length`);\n        Buffer.from(signature).copy(\n          wireTransaction,\n          signatureCount.length + index * 64,\n        );\n      }\n    });\n    signData.copy(\n      wireTransaction,\n      signatureCount.length + signatures.length * 64,\n    );\n    invariant(\n      wireTransaction.length <= PACKET_DATA_SIZE,\n      `Transaction too large: ${wireTransaction.length} > ${PACKET_DATA_SIZE}`,\n    );\n    return wireTransaction;\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get keys(): Array<PublicKey> {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].keys.map(keyObj => keyObj.pubkey);\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get programId(): PublicKey {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].programId;\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get data(): Buffer {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].data;\n  }\n\n  /**\n   * Parse a wire transaction into a Transaction object.\n   */\n  static from(buffer: Buffer | Uint8Array | Array<number>): Transaction {\n    // Slice up wire data\n    let byteArray = [...buffer];\n\n    const signatureCount = shortvec.decodeLength(byteArray);\n    let signatures = [];\n    for (let i = 0; i < signatureCount; i++) {\n      const signature = byteArray.slice(0, SIGNATURE_LENGTH_IN_BYTES);\n      byteArray = byteArray.slice(SIGNATURE_LENGTH_IN_BYTES);\n      signatures.push(bs58.encode(Buffer.from(signature)));\n    }\n\n    return Transaction.populate(Message.from(byteArray), signatures);\n  }\n\n  /**\n   * Populate Transaction object from message and signatures\n   */\n  static populate(\n    message: Message,\n    signatures: Array<string> = [],\n  ): Transaction {\n    const transaction = new Transaction();\n    transaction.recentBlockhash = message.recentBlockhash;\n    if (message.header.numRequiredSignatures > 0) {\n      transaction.feePayer = message.accountKeys[0];\n    }\n    signatures.forEach((signature, index) => {\n      const sigPubkeyPair = {\n        signature:\n          signature == bs58.encode(DEFAULT_SIGNATURE)\n            ? null\n            : bs58.decode(signature),\n        publicKey: message.accountKeys[index],\n      };\n      transaction.signatures.push(sigPubkeyPair);\n    });\n\n    message.instructions.forEach(instruction => {\n      const keys = instruction.accounts.map(account => {\n        const pubkey = message.accountKeys[account];\n        return {\n          pubkey,\n          isSigner:\n            transaction.signatures.some(\n              keyObj => keyObj.publicKey.toString() === pubkey.toString(),\n            ) || message.isAccountSigner(account),\n          isWritable: message.isAccountWritable(account),\n        };\n      });\n\n      transaction.instructions.push(\n        new TransactionInstruction({\n          keys,\n          programId: message.accountKeys[instruction.programIdIndex],\n          data: bs58.decode(instruction.data),\n        }),\n      );\n    });\n\n    transaction._message = message;\n    transaction._json = transaction.toJSON();\n\n    return transaction;\n  }\n}\n","import {AccountKeysFromLookups} from '../message/account-keys';\nimport assert from '../utils/assert';\nimport {toBuffer} from '../utils/to-buffer';\nimport {Blockhash} from '../blockhash';\nimport {Message, MessageV0, VersionedMessage} from '../message';\nimport {PublicKey} from '../publickey';\nimport {AddressLookupTableAccount} from '../programs';\nimport {AccountMeta, TransactionInstruction} from './legacy';\n\nexport type TransactionMessageArgs = {\n  payerKey: PublicKey;\n  instructions: Array<TransactionInstruction>;\n  recentBlockhash: Blockhash;\n};\n\nexport type DecompileArgs =\n  | {\n      accountKeysFromLookups: AccountKeysFromLookups;\n    }\n  | {\n      addressLookupTableAccounts: AddressLookupTableAccount[];\n    };\n\nexport class TransactionMessage {\n  payerKey: PublicKey;\n  instructions: Array<TransactionInstruction>;\n  recentBlockhash: Blockhash;\n\n  constructor(args: TransactionMessageArgs) {\n    this.payerKey = args.payerKey;\n    this.instructions = args.instructions;\n    this.recentBlockhash = args.recentBlockhash;\n  }\n\n  static decompile(\n    message: VersionedMessage,\n    args?: DecompileArgs,\n  ): TransactionMessage {\n    const {header, compiledInstructions, recentBlockhash} = message;\n\n    const {\n      numRequiredSignatures,\n      numReadonlySignedAccounts,\n      numReadonlyUnsignedAccounts,\n    } = header;\n\n    const numWritableSignedAccounts =\n      numRequiredSignatures - numReadonlySignedAccounts;\n    assert(numWritableSignedAccounts > 0, 'Message header is invalid');\n\n    const numWritableUnsignedAccounts =\n      message.staticAccountKeys.length -\n      numRequiredSignatures -\n      numReadonlyUnsignedAccounts;\n    assert(numWritableUnsignedAccounts >= 0, 'Message header is invalid');\n\n    const accountKeys = message.getAccountKeys(args);\n    const payerKey = accountKeys.get(0);\n    if (payerKey === undefined) {\n      throw new Error(\n        'Failed to decompile message because no account keys were found',\n      );\n    }\n\n    const instructions: TransactionInstruction[] = [];\n    for (const compiledIx of compiledInstructions) {\n      const keys: AccountMeta[] = [];\n\n      for (const keyIndex of compiledIx.accountKeyIndexes) {\n        const pubkey = accountKeys.get(keyIndex);\n        if (pubkey === undefined) {\n          throw new Error(\n            `Failed to find key for account key index ${keyIndex}`,\n          );\n        }\n\n        const isSigner = keyIndex < numRequiredSignatures;\n\n        let isWritable;\n        if (isSigner) {\n          isWritable = keyIndex < numWritableSignedAccounts;\n        } else if (keyIndex < accountKeys.staticAccountKeys.length) {\n          isWritable =\n            keyIndex - numRequiredSignatures < numWritableUnsignedAccounts;\n        } else {\n          isWritable =\n            keyIndex - accountKeys.staticAccountKeys.length <\n            // accountKeysFromLookups cannot be undefined because we already found a pubkey for this index above\n            accountKeys.accountKeysFromLookups!.writable.length;\n        }\n\n        keys.push({\n          pubkey,\n          isSigner: keyIndex < header.numRequiredSignatures,\n          isWritable,\n        });\n      }\n\n      const programId = accountKeys.get(compiledIx.programIdIndex);\n      if (programId === undefined) {\n        throw new Error(\n          `Failed to find program id for program id index ${compiledIx.programIdIndex}`,\n        );\n      }\n\n      instructions.push(\n        new TransactionInstruction({\n          programId,\n          data: toBuffer(compiledIx.data),\n          keys,\n        }),\n      );\n    }\n\n    return new TransactionMessage({\n      payerKey,\n      instructions,\n      recentBlockhash,\n    });\n  }\n\n  compileToLegacyMessage(): Message {\n    return Message.compile({\n      payerKey: this.payerKey,\n      recentBlockhash: this.recentBlockhash,\n      instructions: this.instructions,\n    });\n  }\n\n  compileToV0Message(\n    addressLookupTableAccounts?: AddressLookupTableAccount[],\n  ): MessageV0 {\n    return MessageV0.compile({\n      payerKey: this.payerKey,\n      recentBlockhash: this.recentBlockhash,\n      instructions: this.instructions,\n      addressLookupTableAccounts,\n    });\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {Signer} from '../keypair';\nimport assert from '../utils/assert';\nimport {VersionedMessage} from '../message/versioned';\nimport {SIGNATURE_LENGTH_IN_BYTES} from './constants';\nimport * as shortvec from '../utils/shortvec-encoding';\nimport * as Layout from '../layout';\nimport {sign} from '../utils/ed25519';\nimport {PublicKey} from '../publickey';\n\nexport type TransactionVersion = 'legacy' | 0;\n\n/**\n * Versioned transaction class\n */\nexport class VersionedTransaction {\n  signatures: Array<Uint8Array>;\n  message: VersionedMessage;\n\n  get version(): TransactionVersion {\n    return this.message.version;\n  }\n\n  constructor(message: VersionedMessage, signatures?: Array<Uint8Array>) {\n    if (signatures !== undefined) {\n      assert(\n        signatures.length === message.header.numRequiredSignatures,\n        'Expected signatures length to be equal to the number of required signatures',\n      );\n      this.signatures = signatures;\n    } else {\n      const defaultSignatures = [];\n      for (let i = 0; i < message.header.numRequiredSignatures; i++) {\n        defaultSignatures.push(new Uint8Array(SIGNATURE_LENGTH_IN_BYTES));\n      }\n      this.signatures = defaultSignatures;\n    }\n    this.message = message;\n  }\n\n  serialize(): Uint8Array {\n    const serializedMessage = this.message.serialize();\n\n    const encodedSignaturesLength = Array<number>();\n    shortvec.encodeLength(encodedSignaturesLength, this.signatures.length);\n\n    const transactionLayout = BufferLayout.struct<{\n      encodedSignaturesLength: Uint8Array;\n      signatures: Array<Uint8Array>;\n      serializedMessage: Uint8Array;\n    }>([\n      BufferLayout.blob(\n        encodedSignaturesLength.length,\n        'encodedSignaturesLength',\n      ),\n      BufferLayout.seq(\n        Layout.signature(),\n        this.signatures.length,\n        'signatures',\n      ),\n      BufferLayout.blob(serializedMessage.length, 'serializedMessage'),\n    ]);\n\n    const serializedTransaction = new Uint8Array(2048);\n    const serializedTransactionLength = transactionLayout.encode(\n      {\n        encodedSignaturesLength: new Uint8Array(encodedSignaturesLength),\n        signatures: this.signatures,\n        serializedMessage,\n      },\n      serializedTransaction,\n    );\n\n    return serializedTransaction.slice(0, serializedTransactionLength);\n  }\n\n  static deserialize(serializedTransaction: Uint8Array): VersionedTransaction {\n    let byteArray = [...serializedTransaction];\n\n    const signatures = [];\n    const signaturesLength = shortvec.decodeLength(byteArray);\n    for (let i = 0; i < signaturesLength; i++) {\n      signatures.push(\n        new Uint8Array(byteArray.splice(0, SIGNATURE_LENGTH_IN_BYTES)),\n      );\n    }\n\n    const message = VersionedMessage.deserialize(new Uint8Array(byteArray));\n    return new VersionedTransaction(message, signatures);\n  }\n\n  sign(signers: Array<Signer>) {\n    const messageData = this.message.serialize();\n    const signerPubkeys = this.message.staticAccountKeys.slice(\n      0,\n      this.message.header.numRequiredSignatures,\n    );\n    for (const signer of signers) {\n      const signerIndex = signerPubkeys.findIndex(pubkey =>\n        pubkey.equals(signer.publicKey),\n      );\n      assert(\n        signerIndex >= 0,\n        `Cannot sign with non signer key ${signer.publicKey.toBase58()}`,\n      );\n      this.signatures[signerIndex] = sign(messageData, signer.secretKey);\n    }\n  }\n\n  addSignature(publicKey: PublicKey, signature: Uint8Array) {\n    assert(signature.byteLength === 64, 'Signature must be 64 bytes long');\n    const signerPubkeys = this.message.staticAccountKeys.slice(\n      0,\n      this.message.header.numRequiredSignatures,\n    );\n    const signerIndex = signerPubkeys.findIndex(pubkey =>\n      pubkey.equals(publicKey),\n    );\n    assert(\n      signerIndex >= 0,\n      `Can not add signature; \\`${publicKey.toBase58()}\\` is not required to sign this transaction`,\n    );\n    this.signatures[signerIndex] = signature;\n  }\n}\n","// TODO: These constants should be removed in favor of reading them out of a\n// Syscall account\n\n/**\n * @internal\n */\nexport const NUM_TICKS_PER_SECOND = 160;\n\n/**\n * @internal\n */\nexport const DEFAULT_TICKS_PER_SLOT = 64;\n\n/**\n * @internal\n */\nexport const NUM_SLOTS_PER_SECOND =\n  NUM_TICKS_PER_SECOND / DEFAULT_TICKS_PER_SLOT;\n\n/**\n * @internal\n */\nexport const MS_PER_SLOT = 1000 / NUM_SLOTS_PER_SECOND;\n","import {PublicKey} from './publickey';\n\nexport const SYSVAR_CLOCK_PUBKEY = new PublicKey(\n  'SysvarC1ock11111111111111111111111111111111',\n);\n\nexport const SYSVAR_EPOCH_SCHEDULE_PUBKEY = new PublicKey(\n  'SysvarEpochSchedu1e111111111111111111111111',\n);\n\nexport const SYSVAR_INSTRUCTIONS_PUBKEY = new PublicKey(\n  'Sysvar1nstructions1111111111111111111111111',\n);\n\nexport const SYSVAR_RECENT_BLOCKHASHES_PUBKEY = new PublicKey(\n  'SysvarRecentB1ockHashes11111111111111111111',\n);\n\nexport const SYSVAR_RENT_PUBKEY = new PublicKey(\n  'SysvarRent111111111111111111111111111111111',\n);\n\nexport const SYSVAR_REWARDS_PUBKEY = new PublicKey(\n  'SysvarRewards111111111111111111111111111111',\n);\n\nexport const SYSVAR_SLOT_HASHES_PUBKEY = new PublicKey(\n  'SysvarS1otHashes111111111111111111111111111',\n);\n\nexport const SYSVAR_SLOT_HISTORY_PUBKEY = new PublicKey(\n  'SysvarS1otHistory11111111111111111111111111',\n);\n\nexport const SYSVAR_STAKE_HISTORY_PUBKEY = new PublicKey(\n  'SysvarStakeHistory1111111111111111111111111',\n);\n","import {Connection, SignatureResult} from '../connection';\nimport {Transaction} from '../transaction';\nimport type {ConfirmOptions} from '../connection';\nimport type {Signer} from '../keypair';\nimport type {TransactionSignature} from '../transaction';\n\n/**\n * Sign, send and confirm a transaction.\n *\n * If `commitment` option is not specified, defaults to 'max' commitment.\n *\n * @param {Connection} connection\n * @param {Transaction} transaction\n * @param {Array<Signer>} signers\n * @param {ConfirmOptions} [options]\n * @returns {Promise<TransactionSignature>}\n */\nexport async function sendAndConfirmTransaction(\n  connection: Connection,\n  transaction: Transaction,\n  signers: Array<Signer>,\n  options?: ConfirmOptions &\n    Readonly<{\n      // A signal that, when aborted, cancels any outstanding transaction confirmation operations\n      abortSignal?: AbortSignal;\n    }>,\n): Promise<TransactionSignature> {\n  const sendOptions = options && {\n    skipPreflight: options.skipPreflight,\n    preflightCommitment: options.preflightCommitment || options.commitment,\n    maxRetries: options.maxRetries,\n    minContextSlot: options.minContextSlot,\n  };\n\n  const signature = await connection.sendTransaction(\n    transaction,\n    signers,\n    sendOptions,\n  );\n\n  let status: SignatureResult;\n  if (\n    transaction.recentBlockhash != null &&\n    transaction.lastValidBlockHeight != null\n  ) {\n    status = (\n      await connection.confirmTransaction(\n        {\n          abortSignal: options?.abortSignal,\n          signature: signature,\n          blockhash: transaction.recentBlockhash,\n          lastValidBlockHeight: transaction.lastValidBlockHeight,\n        },\n        options && options.commitment,\n      )\n    ).value;\n  } else if (\n    transaction.minNonceContextSlot != null &&\n    transaction.nonceInfo != null\n  ) {\n    const {nonceInstruction} = transaction.nonceInfo;\n    const nonceAccountPubkey = nonceInstruction.keys[0].pubkey;\n    status = (\n      await connection.confirmTransaction(\n        {\n          abortSignal: options?.abortSignal,\n          minContextSlot: transaction.minNonceContextSlot,\n          nonceAccountPubkey,\n          nonceValue: transaction.nonceInfo.nonce,\n          signature,\n        },\n        options && options.commitment,\n      )\n    ).value;\n  } else {\n    if (options?.abortSignal != null) {\n      console.warn(\n        'sendAndConfirmTransaction(): A transaction with a deprecated confirmation strategy was ' +\n          'supplied along with an `abortSignal`. Only transactions having `lastValidBlockHeight` ' +\n          'or a combination of `nonceInfo` and `minNonceContextSlot` are abortable.',\n      );\n    }\n    status = (\n      await connection.confirmTransaction(\n        signature,\n        options && options.commitment,\n      )\n    ).value;\n  }\n\n  if (status.err) {\n    throw new Error(\n      `Transaction ${signature} failed (${JSON.stringify(status)})`,\n    );\n  }\n\n  return signature;\n}\n","// zzz\nexport function sleep(ms: number): Promise<void> {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport * as Layout from './layout';\n\nexport interface IInstructionInputData {\n  readonly instruction: number;\n}\n\n/**\n * @internal\n */\nexport type InstructionType<TInputData extends IInstructionInputData> = {\n  /** The Instruction index (from solana upstream program) */\n  index: number;\n  /** The BufferLayout to use to build data */\n  layout: BufferLayout.Layout<TInputData>;\n};\n\n/**\n * Populate a buffer of instruction data using an InstructionType\n * @internal\n */\nexport function encodeData<TInputData extends IInstructionInputData>(\n  type: InstructionType<TInputData>,\n  fields?: any,\n): Buffer {\n  const allocLength =\n    type.layout.span >= 0 ? type.layout.span : Layout.getAlloc(type, fields);\n  const data = Buffer.alloc(allocLength);\n  const layoutFields = Object.assign({instruction: type.index}, fields);\n  type.layout.encode(layoutFields, data);\n  return data;\n}\n\n/**\n * Decode instruction data buffer using an InstructionType\n * @internal\n */\nexport function decodeData<TInputData extends IInstructionInputData>(\n  type: InstructionType<TInputData>,\n  buffer: Buffer,\n): TInputData {\n  let data: TInputData;\n  try {\n    data = type.layout.decode(buffer);\n  } catch (err) {\n    throw new Error('invalid instruction; ' + err);\n  }\n\n  if (data.instruction !== type.index) {\n    throw new Error(\n      `invalid instruction; instruction index mismatch ${data.instruction} != ${type.index}`,\n    );\n  }\n\n  return data;\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\n/**\n * https://github.com/solana-labs/solana/blob/90bedd7e067b5b8f3ddbb45da00a4e9cabb22c62/sdk/src/fee_calculator.rs#L7-L11\n *\n * @internal\n */\nexport const FeeCalculatorLayout = BufferLayout.nu64('lamportsPerSignature');\n\n/**\n * Calculator for transaction fees.\n *\n * @deprecated Deprecated since Solana v1.8.0.\n */\nexport interface FeeCalculator {\n  /** Cost in lamports to validate a signature. */\n  lamportsPerSignature: number;\n}\n","import * as BufferLayout from '@solana/buffer-layout';\nimport {Buffer} from 'buffer';\n\nimport * as Layout from './layout';\nimport {PublicKey} from './publickey';\nimport type {FeeCalculator} from './fee-calculator';\nimport {FeeCalculatorLayout} from './fee-calculator';\nimport {toBuffer} from './utils/to-buffer';\n\n/**\n * See https://github.com/solana-labs/solana/blob/0ea2843ec9cdc517572b8e62c959f41b55cf4453/sdk/src/nonce_state.rs#L29-L32\n *\n * @internal\n */\nconst NonceAccountLayout = BufferLayout.struct<\n  Readonly<{\n    authorizedPubkey: Uint8Array;\n    feeCalculator: Readonly<{\n      lamportsPerSignature: number;\n    }>;\n    nonce: Uint8Array;\n    state: number;\n    version: number;\n  }>\n>([\n  BufferLayout.u32('version'),\n  BufferLayout.u32('state'),\n  Layout.publicKey('authorizedPubkey'),\n  Layout.publicKey('nonce'),\n  BufferLayout.struct<Readonly<{lamportsPerSignature: number}>>(\n    [FeeCalculatorLayout],\n    'feeCalculator',\n  ),\n]);\n\nexport const NONCE_ACCOUNT_LENGTH = NonceAccountLayout.span;\n\n/**\n * A durable nonce is a 32 byte value encoded as a base58 string.\n */\nexport type DurableNonce = string;\n\ntype NonceAccountArgs = {\n  authorizedPubkey: PublicKey;\n  nonce: DurableNonce;\n  feeCalculator: FeeCalculator;\n};\n\n/**\n * NonceAccount class\n */\nexport class NonceAccount {\n  authorizedPubkey: PublicKey;\n  nonce: DurableNonce;\n  feeCalculator: FeeCalculator;\n\n  /**\n   * @internal\n   */\n  constructor(args: NonceAccountArgs) {\n    this.authorizedPubkey = args.authorizedPubkey;\n    this.nonce = args.nonce;\n    this.feeCalculator = args.feeCalculator;\n  }\n\n  /**\n   * Deserialize NonceAccount from the account data.\n   *\n   * @param buffer account data\n   * @return NonceAccount\n   */\n  static fromAccountData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): NonceAccount {\n    const nonceAccount = NonceAccountLayout.decode(toBuffer(buffer), 0);\n    return new NonceAccount({\n      authorizedPubkey: new PublicKey(nonceAccount.authorizedPubkey),\n      nonce: new PublicKey(nonceAccount.nonce).toString(),\n      feeCalculator: nonceAccount.feeCalculator,\n    });\n  }\n}\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nlet converter;\n/**\n * Convert a little-endian buffer into a BigInt.\n * @param buf The little-endian buffer to convert\n * @returns A BigInt with the little-endian representation of buf.\n */\nfunction toBigIntLE(buf) {\n    {\n        const reversed = Buffer.from(buf);\n        reversed.reverse();\n        const hex = reversed.toString('hex');\n        if (hex.length === 0) {\n            return BigInt(0);\n        }\n        return BigInt(`0x${hex}`);\n    }\n    return converter.toBigInt(buf, false);\n}\nexports.toBigIntLE = toBigIntLE;\n/**\n * Convert a big-endian buffer into a BigInt\n * @param buf The big-endian buffer to convert.\n * @returns A BigInt with the big-endian representation of buf.\n */\nfunction toBigIntBE(buf) {\n    {\n        const hex = buf.toString('hex');\n        if (hex.length === 0) {\n            return BigInt(0);\n        }\n        return BigInt(`0x${hex}`);\n    }\n    return converter.toBigInt(buf, true);\n}\nexports.toBigIntBE = toBigIntBE;\n/**\n * Convert a BigInt to a little-endian buffer.\n * @param num   The BigInt to convert.\n * @param width The number of bytes that the resulting buffer should be.\n * @returns A little-endian buffer representation of num.\n */\nfunction toBufferLE(num, width) {\n    {\n        const hex = num.toString(16);\n        const buffer = Buffer.from(hex.padStart(width * 2, '0').slice(0, width * 2), 'hex');\n        buffer.reverse();\n        return buffer;\n    }\n    // Allocation is done here, since it is slower using napi in C\n    return converter.fromBigInt(num, Buffer.allocUnsafe(width), false);\n}\nexports.toBufferLE = toBufferLE;\n/**\n * Convert a BigInt to a big-endian buffer.\n * @param num   The BigInt to convert.\n * @param width The number of bytes that the resulting buffer should be.\n * @returns A big-endian buffer representation of num.\n */\nfunction toBufferBE(num, width) {\n    {\n        const hex = num.toString(16);\n        return Buffer.from(hex.padStart(width * 2, '0').slice(0, width * 2), 'hex');\n    }\n    return converter.fromBigInt(num, Buffer.allocUnsafe(width), true);\n}\nexports.toBufferBE = toBufferBE;\n","import {Buffer} from 'buffer';\nimport {blob, Layout} from '@solana/buffer-layout';\nimport {toBigIntLE, toBufferLE} from 'bigint-buffer';\n\ninterface EncodeDecode<T> {\n  decode(buffer: Buffer, offset?: number): T;\n  encode(src: T, buffer: Buffer, offset?: number): number;\n}\n\nconst encodeDecode = <T>(layout: Layout<T>): EncodeDecode<T> => {\n  const decode = layout.decode.bind(layout);\n  const encode = layout.encode.bind(layout);\n  return {decode, encode};\n};\n\nconst bigInt =\n  (length: number) =>\n  (property?: string): Layout<bigint> => {\n    const layout = blob(length, property);\n    const {encode, decode} = encodeDecode(layout);\n\n    const bigIntLayout = layout as Layout<unknown> as Layout<bigint>;\n\n    bigIntLayout.decode = (buffer: Buffer, offset: number) => {\n      const src = decode(buffer, offset);\n      return toBigIntLE(Buffer.from(src));\n    };\n\n    bigIntLayout.encode = (bigInt: bigint, buffer: Buffer, offset: number) => {\n      const src = toBufferLE(bigInt, length);\n      return encode(src, buffer, offset);\n    };\n\n    return bigIntLayout;\n  };\n\nexport const u64 = bigInt(8);\n\nexport const u128 = bigInt(16);\n\nexport const u192 = bigInt(24);\n\nexport const u256 = bigInt(32);\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from '../instruction';\nimport * as Layout from '../layout';\nimport {NONCE_ACCOUNT_LENGTH} from '../nonce-account';\nimport {PublicKey} from '../publickey';\nimport {SYSVAR_RECENT_BLOCKHASHES_PUBKEY, SYSVAR_RENT_PUBKEY} from '../sysvar';\nimport {Transaction, TransactionInstruction} from '../transaction';\nimport {toBuffer} from '../utils/to-buffer';\nimport {u64} from '../utils/bigint';\n\n/**\n * Create account system transaction params\n */\nexport type CreateAccountParams = {\n  /** The account that will transfer lamports to the created account */\n  fromPubkey: PublicKey;\n  /** Public key of the created account */\n  newAccountPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created account */\n  lamports: number;\n  /** Amount of space in bytes to allocate to the created account */\n  space: number;\n  /** Public key of the program to assign as the owner of the created account */\n  programId: PublicKey;\n};\n\n/**\n * Transfer system transaction params\n */\nexport type TransferParams = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: number | bigint;\n};\n\n/**\n * Assign system transaction params\n */\nexport type AssignParams = {\n  /** Public key of the account which will be assigned a new owner */\n  accountPubkey: PublicKey;\n  /** Public key of the program to assign as the owner */\n  programId: PublicKey;\n};\n\n/**\n * Create account with seed system transaction params\n */\nexport type CreateAccountWithSeedParams = {\n  /** The account that will transfer lamports to the created account */\n  fromPubkey: PublicKey;\n  /** Public key of the created account. Must be pre-calculated with PublicKey.createWithSeed() */\n  newAccountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the created account. Must be the same as the base key used to create `newAccountPubkey` */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the created account. Must be the same as the seed used to create `newAccountPubkey` */\n  seed: string;\n  /** Amount of lamports to transfer to the created account */\n  lamports: number;\n  /** Amount of space in bytes to allocate to the created account */\n  space: number;\n  /** Public key of the program to assign as the owner of the created account */\n  programId: PublicKey;\n};\n\n/**\n * Create nonce account system transaction params\n */\nexport type CreateNonceAccountParams = {\n  /** The account that will transfer lamports to the created nonce account */\n  fromPubkey: PublicKey;\n  /** Public key of the created nonce account */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the created nonce account */\n  authorizedPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created nonce account */\n  lamports: number;\n};\n\n/**\n * Create nonce account with seed system transaction params\n */\nexport type CreateNonceAccountWithSeedParams = {\n  /** The account that will transfer lamports to the created nonce account */\n  fromPubkey: PublicKey;\n  /** Public key of the created nonce account */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the created nonce account */\n  authorizedPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created nonce account */\n  lamports: number;\n  /** Base public key to use to derive the address of the nonce account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the nonce account */\n  seed: string;\n};\n\n/**\n * Initialize nonce account system instruction params\n */\nexport type InitializeNonceParams = {\n  /** Nonce account which will be initialized */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the initialized nonce account */\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Advance nonce account system instruction params\n */\nexport type AdvanceNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the nonce authority */\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Withdraw nonce account system transaction params\n */\nexport type WithdrawNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the nonce authority */\n  authorizedPubkey: PublicKey;\n  /** Public key of the account which will receive the withdrawn nonce account balance */\n  toPubkey: PublicKey;\n  /** Amount of lamports to withdraw from the nonce account */\n  lamports: number;\n};\n\n/**\n * Authorize nonce account system transaction params\n */\nexport type AuthorizeNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the current nonce authority */\n  authorizedPubkey: PublicKey;\n  /** Public key to set as the new nonce authority */\n  newAuthorizedPubkey: PublicKey;\n};\n\n/**\n * Allocate account system transaction params\n */\nexport type AllocateParams = {\n  /** Account to allocate */\n  accountPubkey: PublicKey;\n  /** Amount of space in bytes to allocate */\n  space: number;\n};\n\n/**\n * Allocate account with seed system transaction params\n */\nexport type AllocateWithSeedParams = {\n  /** Account to allocate */\n  accountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the allocated account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the allocated account */\n  seed: string;\n  /** Amount of space in bytes to allocate */\n  space: number;\n  /** Public key of the program to assign as the owner of the allocated account */\n  programId: PublicKey;\n};\n\n/**\n * Assign account with seed system transaction params\n */\nexport type AssignWithSeedParams = {\n  /** Public key of the account which will be assigned a new owner */\n  accountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the assigned account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the assigned account */\n  seed: string;\n  /** Public key of the program to assign as the owner */\n  programId: PublicKey;\n};\n\n/**\n * Transfer with seed system transaction params\n */\nexport type TransferWithSeedParams = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Base public key to use to derive the funding account address */\n  basePubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: number | bigint;\n  /** Seed to use to derive the funding account address */\n  seed: string;\n  /** Program id to use to derive the funding account address */\n  programId: PublicKey;\n};\n\n/** Decoded transfer system transaction instruction */\nexport type DecodedTransferInstruction = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: bigint;\n};\n\n/** Decoded transferWithSeed system transaction instruction */\nexport type DecodedTransferWithSeedInstruction = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Base public key to use to derive the funding account address */\n  basePubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: bigint;\n  /** Seed to use to derive the funding account address */\n  seed: string;\n  /** Program id to use to derive the funding account address */\n  programId: PublicKey;\n};\n\n/**\n * System Instruction class\n */\nexport class SystemInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a system instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): SystemInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: SystemInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(SYSTEM_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType as SystemInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a SystemInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode a create account system instruction and retrieve the instruction params.\n   */\n  static decodeCreateAccount(\n    instruction: TransactionInstruction,\n  ): CreateAccountParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {lamports, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Create,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      newAccountPubkey: instruction.keys[1].pubkey,\n      lamports,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a transfer system instruction and retrieve the instruction params.\n   */\n  static decodeTransfer(\n    instruction: TransactionInstruction,\n  ): DecodedTransferInstruction {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {lamports} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Transfer,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a transfer with seed system instruction and retrieve the instruction params.\n   */\n  static decodeTransferWithSeed(\n    instruction: TransactionInstruction,\n  ): DecodedTransferWithSeedInstruction {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {lamports, seed, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.TransferWithSeed,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      basePubkey: instruction.keys[1].pubkey,\n      toPubkey: instruction.keys[2].pubkey,\n      lamports,\n      seed,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an allocate system instruction and retrieve the instruction params.\n   */\n  static decodeAllocate(instruction: TransactionInstruction): AllocateParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {space} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Allocate,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      space,\n    };\n  }\n\n  /**\n   * Decode an allocate with seed system instruction and retrieve the instruction params.\n   */\n  static decodeAllocateWithSeed(\n    instruction: TransactionInstruction,\n  ): AllocateWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {base, seed, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AllocateWithSeed,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an assign system instruction and retrieve the instruction params.\n   */\n  static decodeAssign(instruction: TransactionInstruction): AssignParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Assign,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an assign with seed system instruction and retrieve the instruction params.\n   */\n  static decodeAssignWithSeed(\n    instruction: TransactionInstruction,\n  ): AssignWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {base, seed, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AssignWithSeed,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a create account with seed system instruction and retrieve the instruction params.\n   */\n  static decodeCreateWithSeed(\n    instruction: TransactionInstruction,\n  ): CreateAccountWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {base, seed, lamports, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.CreateWithSeed,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      newAccountPubkey: instruction.keys[1].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      lamports,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a nonce initialize system instruction and retrieve the instruction params.\n   */\n  static decodeNonceInitialize(\n    instruction: TransactionInstruction,\n  ): InitializeNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {authorized} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.InitializeNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: new PublicKey(authorized),\n    };\n  }\n\n  /**\n   * Decode a nonce advance system instruction and retrieve the instruction params.\n   */\n  static decodeNonceAdvance(\n    instruction: TransactionInstruction,\n  ): AdvanceNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AdvanceNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n    };\n  }\n\n  /**\n   * Decode a nonce withdraw system instruction and retrieve the instruction params.\n   */\n  static decodeNonceWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 5);\n\n    const {lamports} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.WithdrawNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a nonce authorize system instruction and retrieve the instruction params.\n   */\n  static decodeNonceAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {authorized} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AuthorizeNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[1].pubkey,\n      newAuthorizedPubkey: new PublicKey(authorized),\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(SystemProgram.programId)) {\n      throw new Error('invalid instruction; programId is not SystemProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid SystemInstructionType's\n */\nexport type SystemInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof SystemInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  | 'AdvanceNonceAccount'\n  | 'Allocate'\n  | 'AllocateWithSeed'\n  | 'Assign'\n  | 'AssignWithSeed'\n  | 'AuthorizeNonceAccount'\n  | 'Create'\n  | 'CreateWithSeed'\n  | 'InitializeNonceAccount'\n  | 'Transfer'\n  | 'TransferWithSeed'\n  | 'WithdrawNonceAccount'\n  | 'UpgradeNonceAccount';\n\ntype SystemInstructionInputData = {\n  AdvanceNonceAccount: IInstructionInputData;\n  Allocate: IInstructionInputData & {\n    space: number;\n  };\n  AllocateWithSeed: IInstructionInputData & {\n    base: Uint8Array;\n    programId: Uint8Array;\n    seed: string;\n    space: number;\n  };\n  Assign: IInstructionInputData & {\n    programId: Uint8Array;\n  };\n  AssignWithSeed: IInstructionInputData & {\n    base: Uint8Array;\n    seed: string;\n    programId: Uint8Array;\n  };\n  AuthorizeNonceAccount: IInstructionInputData & {\n    authorized: Uint8Array;\n  };\n  Create: IInstructionInputData & {\n    lamports: number;\n    programId: Uint8Array;\n    space: number;\n  };\n  CreateWithSeed: IInstructionInputData & {\n    base: Uint8Array;\n    lamports: number;\n    programId: Uint8Array;\n    seed: string;\n    space: number;\n  };\n  InitializeNonceAccount: IInstructionInputData & {\n    authorized: Uint8Array;\n  };\n  Transfer: IInstructionInputData & {\n    lamports: bigint;\n  };\n  TransferWithSeed: IInstructionInputData & {\n    lamports: bigint;\n    programId: Uint8Array;\n    seed: string;\n  };\n  WithdrawNonceAccount: IInstructionInputData & {\n    lamports: number;\n  };\n  UpgradeNonceAccount: IInstructionInputData;\n};\n\n/**\n * An enumeration of valid system InstructionType's\n * @internal\n */\nexport const SYSTEM_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in SystemInstructionType]: InstructionType<\n    SystemInstructionInputData[Instruction]\n  >;\n}>({\n  Create: {\n    index: 0,\n    layout: BufferLayout.struct<SystemInstructionInputData['Create']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n      BufferLayout.ns64('space'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  Assign: {\n    index: 1,\n    layout: BufferLayout.struct<SystemInstructionInputData['Assign']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  Transfer: {\n    index: 2,\n    layout: BufferLayout.struct<SystemInstructionInputData['Transfer']>([\n      BufferLayout.u32('instruction'),\n      u64('lamports'),\n    ]),\n  },\n  CreateWithSeed: {\n    index: 3,\n    layout: BufferLayout.struct<SystemInstructionInputData['CreateWithSeed']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('base'),\n      Layout.rustString('seed'),\n      BufferLayout.ns64('lamports'),\n      BufferLayout.ns64('space'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  AdvanceNonceAccount: {\n    index: 4,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['AdvanceNonceAccount']\n    >([BufferLayout.u32('instruction')]),\n  },\n  WithdrawNonceAccount: {\n    index: 5,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['WithdrawNonceAccount']\n    >([BufferLayout.u32('instruction'), BufferLayout.ns64('lamports')]),\n  },\n  InitializeNonceAccount: {\n    index: 6,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['InitializeNonceAccount']\n    >([BufferLayout.u32('instruction'), Layout.publicKey('authorized')]),\n  },\n  AuthorizeNonceAccount: {\n    index: 7,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['AuthorizeNonceAccount']\n    >([BufferLayout.u32('instruction'), Layout.publicKey('authorized')]),\n  },\n  Allocate: {\n    index: 8,\n    layout: BufferLayout.struct<SystemInstructionInputData['Allocate']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('space'),\n    ]),\n  },\n  AllocateWithSeed: {\n    index: 9,\n    layout: BufferLayout.struct<SystemInstructionInputData['AllocateWithSeed']>(\n      [\n        BufferLayout.u32('instruction'),\n        Layout.publicKey('base'),\n        Layout.rustString('seed'),\n        BufferLayout.ns64('space'),\n        Layout.publicKey('programId'),\n      ],\n    ),\n  },\n  AssignWithSeed: {\n    index: 10,\n    layout: BufferLayout.struct<SystemInstructionInputData['AssignWithSeed']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('base'),\n      Layout.rustString('seed'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  TransferWithSeed: {\n    index: 11,\n    layout: BufferLayout.struct<SystemInstructionInputData['TransferWithSeed']>(\n      [\n        BufferLayout.u32('instruction'),\n        u64('lamports'),\n        Layout.rustString('seed'),\n        Layout.publicKey('programId'),\n      ],\n    ),\n  },\n  UpgradeNonceAccount: {\n    index: 12,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['UpgradeNonceAccount']\n    >([BufferLayout.u32('instruction')]),\n  },\n});\n\n/**\n * Factory class for transactions to interact with the System program\n */\nexport class SystemProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the System program\n   */\n  static programId: PublicKey = new PublicKey(\n    '11111111111111111111111111111111',\n  );\n\n  /**\n   * Generate a transaction instruction that creates a new account\n   */\n  static createAccount(params: CreateAccountParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.Create;\n    const data = encodeData(type, {\n      lamports: params.lamports,\n      space: params.space,\n      programId: toBuffer(params.programId.toBuffer()),\n    });\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n        {pubkey: params.newAccountPubkey, isSigner: true, isWritable: true},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that transfers lamports from one account to another\n   */\n  static transfer(\n    params: TransferParams | TransferWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.TransferWithSeed;\n      data = encodeData(type, {\n        lamports: BigInt(params.lamports),\n        seed: params.seed,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.fromPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Transfer;\n      data = encodeData(type, {lamports: BigInt(params.lamports)});\n      keys = [\n        {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n      ];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that assigns an account to a program\n   */\n  static assign(\n    params: AssignParams | AssignWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.AssignWithSeed;\n      data = encodeData(type, {\n        base: toBuffer(params.basePubkey.toBuffer()),\n        seed: params.seed,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.accountPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Assign;\n      data = encodeData(type, {\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [{pubkey: params.accountPubkey, isSigner: true, isWritable: true}];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that creates a new account at\n   *   an address generated with `from`, a seed, and programId\n   */\n  static createAccountWithSeed(\n    params: CreateAccountWithSeedParams,\n  ): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.CreateWithSeed;\n    const data = encodeData(type, {\n      base: toBuffer(params.basePubkey.toBuffer()),\n      seed: params.seed,\n      lamports: params.lamports,\n      space: params.space,\n      programId: toBuffer(params.programId.toBuffer()),\n    });\n    let keys = [\n      {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n      {pubkey: params.newAccountPubkey, isSigner: false, isWritable: true},\n    ];\n    if (params.basePubkey != params.fromPubkey) {\n      keys.push({\n        pubkey: params.basePubkey,\n        isSigner: true,\n        isWritable: false,\n      });\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction that creates a new Nonce account\n   */\n  static createNonceAccount(\n    params: CreateNonceAccountParams | CreateNonceAccountWithSeedParams,\n  ): Transaction {\n    const transaction = new Transaction();\n    if ('basePubkey' in params && 'seed' in params) {\n      transaction.add(\n        SystemProgram.createAccountWithSeed({\n          fromPubkey: params.fromPubkey,\n          newAccountPubkey: params.noncePubkey,\n          basePubkey: params.basePubkey,\n          seed: params.seed,\n          lamports: params.lamports,\n          space: NONCE_ACCOUNT_LENGTH,\n          programId: this.programId,\n        }),\n      );\n    } else {\n      transaction.add(\n        SystemProgram.createAccount({\n          fromPubkey: params.fromPubkey,\n          newAccountPubkey: params.noncePubkey,\n          lamports: params.lamports,\n          space: NONCE_ACCOUNT_LENGTH,\n          programId: this.programId,\n        }),\n      );\n    }\n\n    const initParams = {\n      noncePubkey: params.noncePubkey,\n      authorizedPubkey: params.authorizedPubkey,\n    };\n\n    transaction.add(this.nonceInitialize(initParams));\n    return transaction;\n  }\n\n  /**\n   * Generate an instruction to initialize a Nonce account\n   */\n  static nonceInitialize(\n    params: InitializeNonceParams,\n  ): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.InitializeNonceAccount;\n    const data = encodeData(type, {\n      authorized: toBuffer(params.authorizedPubkey.toBuffer()),\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate an instruction to advance the nonce in a Nonce account\n   */\n  static nonceAdvance(params: AdvanceNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.AdvanceNonceAccount;\n    const data = encodeData(type);\n    const instructionData = {\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a transaction instruction that withdraws lamports from a Nonce account\n   */\n  static nonceWithdraw(params: WithdrawNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.WithdrawNonceAccount;\n    const data = encodeData(type, {lamports: params.lamports});\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {\n          pubkey: SYSVAR_RENT_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that authorizes a new PublicKey as the authority\n   * on a Nonce account.\n   */\n  static nonceAuthorize(params: AuthorizeNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.AuthorizeNonceAccount;\n    const data = encodeData(type, {\n      authorized: toBuffer(params.newAuthorizedPubkey.toBuffer()),\n    });\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that allocates space in an account without funding\n   */\n  static allocate(\n    params: AllocateParams | AllocateWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.AllocateWithSeed;\n      data = encodeData(type, {\n        base: toBuffer(params.basePubkey.toBuffer()),\n        seed: params.seed,\n        space: params.space,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.accountPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Allocate;\n      data = encodeData(type, {\n        space: params.space,\n      });\n      keys = [{pubkey: params.accountPubkey, isSigner: true, isWritable: true}];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {PublicKey} from './publickey';\nimport {Transaction, PACKET_DATA_SIZE} from './transaction';\nimport {MS_PER_SLOT} from './timing';\nimport {SYSVAR_RENT_PUBKEY} from './sysvar';\nimport {sendAndConfirmTransaction} from './utils/send-and-confirm-transaction';\nimport {sleep} from './utils/sleep';\nimport type {Connection} from './connection';\nimport type {Signer} from './keypair';\nimport {SystemProgram} from './programs/system';\nimport {IInstructionInputData} from './instruction';\n\n// Keep program chunks under PACKET_DATA_SIZE, leaving enough room for the\n// rest of the Transaction fields\n//\n// TODO: replace 300 with a proper constant for the size of the other\n// Transaction fields\nconst CHUNK_SIZE = PACKET_DATA_SIZE - 300;\n\n/**\n * Program loader interface\n */\nexport class Loader {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Amount of program data placed in each load Transaction\n   */\n  static chunkSize: number = CHUNK_SIZE;\n\n  /**\n   * Minimum number of signatures required to load a program not including\n   * retries\n   *\n   * Can be used to calculate transaction fees\n   */\n  static getMinNumSignatures(dataLength: number): number {\n    return (\n      2 * // Every transaction requires two signatures (payer + program)\n      (Math.ceil(dataLength / Loader.chunkSize) +\n        1 + // Add one for Create transaction\n        1) // Add one for Finalize transaction\n    );\n  }\n\n  /**\n   * Loads a generic program\n   *\n   * @param connection The connection to use\n   * @param payer System account that pays to load the program\n   * @param program Account to load the program into\n   * @param programId Public key that identifies the loader\n   * @param data Program octets\n   * @return true if program was loaded successfully, false if program was already loaded\n   */\n  static async load(\n    connection: Connection,\n    payer: Signer,\n    program: Signer,\n    programId: PublicKey,\n    data: Buffer | Uint8Array | Array<number>,\n  ): Promise<boolean> {\n    {\n      const balanceNeeded = await connection.getMinimumBalanceForRentExemption(\n        data.length,\n      );\n\n      // Fetch program account info to check if it has already been created\n      const programInfo = await connection.getAccountInfo(\n        program.publicKey,\n        'confirmed',\n      );\n\n      let transaction: Transaction | null = null;\n      if (programInfo !== null) {\n        if (programInfo.executable) {\n          console.error('Program load failed, account is already executable');\n          return false;\n        }\n\n        if (programInfo.data.length !== data.length) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.allocate({\n              accountPubkey: program.publicKey,\n              space: data.length,\n            }),\n          );\n        }\n\n        if (!programInfo.owner.equals(programId)) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.assign({\n              accountPubkey: program.publicKey,\n              programId,\n            }),\n          );\n        }\n\n        if (programInfo.lamports < balanceNeeded) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.transfer({\n              fromPubkey: payer.publicKey,\n              toPubkey: program.publicKey,\n              lamports: balanceNeeded - programInfo.lamports,\n            }),\n          );\n        }\n      } else {\n        transaction = new Transaction().add(\n          SystemProgram.createAccount({\n            fromPubkey: payer.publicKey,\n            newAccountPubkey: program.publicKey,\n            lamports: balanceNeeded > 0 ? balanceNeeded : 1,\n            space: data.length,\n            programId,\n          }),\n        );\n      }\n\n      // If the account is already created correctly, skip this step\n      // and proceed directly to loading instructions\n      if (transaction !== null) {\n        await sendAndConfirmTransaction(\n          connection,\n          transaction,\n          [payer, program],\n          {\n            commitment: 'confirmed',\n          },\n        );\n      }\n    }\n\n    const dataLayout = BufferLayout.struct<\n      Readonly<{\n        bytes: number[];\n        bytesLength: number;\n        bytesLengthPadding: number;\n        instruction: number;\n        offset: number;\n      }>\n    >([\n      BufferLayout.u32('instruction'),\n      BufferLayout.u32('offset'),\n      BufferLayout.u32('bytesLength'),\n      BufferLayout.u32('bytesLengthPadding'),\n      BufferLayout.seq(\n        BufferLayout.u8('byte'),\n        BufferLayout.offset(BufferLayout.u32(), -8),\n        'bytes',\n      ),\n    ]);\n\n    const chunkSize = Loader.chunkSize;\n    let offset = 0;\n    let array = data;\n    let transactions = [];\n    while (array.length > 0) {\n      const bytes = array.slice(0, chunkSize);\n      const data = Buffer.alloc(chunkSize + 16);\n      dataLayout.encode(\n        {\n          instruction: 0, // Load instruction\n          offset,\n          bytes: bytes as number[],\n          bytesLength: 0,\n          bytesLengthPadding: 0,\n        },\n        data,\n      );\n\n      const transaction = new Transaction().add({\n        keys: [{pubkey: program.publicKey, isSigner: true, isWritable: true}],\n        programId,\n        data,\n      });\n      transactions.push(\n        sendAndConfirmTransaction(connection, transaction, [payer, program], {\n          commitment: 'confirmed',\n        }),\n      );\n\n      // Delay between sends in an attempt to reduce rate limit errors\n      if (connection._rpcEndpoint.includes('solana.com')) {\n        const REQUESTS_PER_SECOND = 4;\n        await sleep(1000 / REQUESTS_PER_SECOND);\n      }\n\n      offset += chunkSize;\n      array = array.slice(chunkSize);\n    }\n    await Promise.all(transactions);\n\n    // Finalize the account loaded with program data for execution\n    {\n      const dataLayout = BufferLayout.struct<IInstructionInputData>([\n        BufferLayout.u32('instruction'),\n      ]);\n\n      const data = Buffer.alloc(dataLayout.span);\n      dataLayout.encode(\n        {\n          instruction: 1, // Finalize instruction\n        },\n        data,\n      );\n\n      const transaction = new Transaction().add({\n        keys: [\n          {pubkey: program.publicKey, isSigner: true, isWritable: true},\n          {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n        ],\n        programId,\n        data,\n      });\n      const deployCommitment = 'processed';\n      const finalizeSignature = await connection.sendTransaction(\n        transaction,\n        [payer, program],\n        {preflightCommitment: deployCommitment},\n      );\n      const {context, value} = await connection.confirmTransaction(\n        {\n          signature: finalizeSignature,\n          lastValidBlockHeight: transaction.lastValidBlockHeight!,\n          blockhash: transaction.recentBlockhash!,\n        },\n        deployCommitment,\n      );\n      if (value.err) {\n        throw new Error(\n          `Transaction ${finalizeSignature} failed (${JSON.stringify(value)})`,\n        );\n      }\n      // We prevent programs from being usable until the slot after their deployment.\n      // See https://github.com/solana-labs/solana/pull/29654\n      while (\n        true // eslint-disable-line no-constant-condition\n      ) {\n        try {\n          const currentSlot = await connection.getSlot({\n            commitment: deployCommitment,\n          });\n          if (currentSlot > context.slot) {\n            break;\n          }\n        } catch {\n          /* empty */\n        }\n        await new Promise(resolve =>\n          setTimeout(resolve, Math.round(MS_PER_SLOT / 2)),\n        );\n      }\n    }\n\n    // success\n    return true;\n  }\n}\n","import type {Buffer} from 'buffer';\n\nimport {PublicKey} from './publickey';\nimport {Loader} from './loader';\nimport type {Connection} from './connection';\nimport type {Signer} from './keypair';\n\nexport const BPF_LOADER_PROGRAM_ID = new PublicKey(\n  'BPFLoader2111111111111111111111111111111111',\n);\n\n/**\n * Factory class for transactions to interact with a program loader\n */\nexport class BpfLoader {\n  /**\n   * Minimum number of signatures required to load a program not including\n   * retries\n   *\n   * Can be used to calculate transaction fees\n   */\n  static getMinNumSignatures(dataLength: number): number {\n    return Loader.getMinNumSignatures(dataLength);\n  }\n\n  /**\n   * Load a SBF program\n   *\n   * @param connection The connection to use\n   * @param payer Account that will pay program loading fees\n   * @param program Account to load the program into\n   * @param elf The entire ELF containing the SBF program\n   * @param loaderProgramId The program id of the BPF loader to use\n   * @return true if program was loaded successfully, false if program was already loaded\n   */\n  static load(\n    connection: Connection,\n    payer: Signer,\n    program: Signer,\n    elf: Buffer | Uint8Array | Array<number>,\n    loaderProgramId: PublicKey,\n  ): Promise<boolean> {\n    return Loader.load(connection, payer, program, loaderProgramId, elf);\n  }\n}\n","var objToString = Object.prototype.toString;\nvar objKeys = Object.keys || function(obj) {\n\t\tvar keys = [];\n\t\tfor (var name in obj) {\n\t\t\tkeys.push(name);\n\t\t}\n\t\treturn keys;\n\t};\n\nfunction stringify(val, isArrayProp) {\n\tvar i, max, str, keys, key, propVal, toStr;\n\tif (val === true) {\n\t\treturn \"true\";\n\t}\n\tif (val === false) {\n\t\treturn \"false\";\n\t}\n\tswitch (typeof val) {\n\t\tcase \"object\":\n\t\t\tif (val === null) {\n\t\t\t\treturn null;\n\t\t\t} else if (val.toJSON && typeof val.toJSON === \"function\") {\n\t\t\t\treturn stringify(val.toJSON(), isArrayProp);\n\t\t\t} else {\n\t\t\t\ttoStr = objToString.call(val);\n\t\t\t\tif (toStr === \"[object Array]\") {\n\t\t\t\t\tstr = '[';\n\t\t\t\t\tmax = val.length - 1;\n\t\t\t\t\tfor(i = 0; i < max; i++) {\n\t\t\t\t\t\tstr += stringify(val[i], true) + ',';\n\t\t\t\t\t}\n\t\t\t\t\tif (max > -1) {\n\t\t\t\t\t\tstr += stringify(val[i], true);\n\t\t\t\t\t}\n\t\t\t\t\treturn str + ']';\n\t\t\t\t} else if (toStr === \"[object Object]\") {\n\t\t\t\t\t// only object is left\n\t\t\t\t\tkeys = objKeys(val).sort();\n\t\t\t\t\tmax = keys.length;\n\t\t\t\t\tstr = \"\";\n\t\t\t\t\ti = 0;\n\t\t\t\t\twhile (i < max) {\n\t\t\t\t\t\tkey = keys[i];\n\t\t\t\t\t\tpropVal = stringify(val[key], false);\n\t\t\t\t\t\tif (propVal !== undefined) {\n\t\t\t\t\t\t\tif (str) {\n\t\t\t\t\t\t\t\tstr += ',';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tstr += JSON.stringify(key) + ':' + propVal;\n\t\t\t\t\t\t}\n\t\t\t\t\t\ti++;\n\t\t\t\t\t}\n\t\t\t\t\treturn '{' + str + '}';\n\t\t\t\t} else {\n\t\t\t\t\treturn JSON.stringify(val);\n\t\t\t\t}\n\t\t\t}\n\t\tcase \"function\":\n\t\tcase \"undefined\":\n\t\t\treturn isArrayProp ? null : undefined;\n\t\tcase \"string\":\n\t\t\treturn JSON.stringify(val);\n\t\tdefault:\n\t\t\treturn isFinite(val) ? val : null;\n\t}\n}\n\nmodule.exports = function(val) {\n\tvar returnVal = stringify(val, false);\n\tif (returnVal !== undefined) {\n\t\treturn ''+ returnVal;\n\t}\n};\n","/**\n * A `StructFailure` represents a single specific failure in validation.\n */\n\n/**\n * `StructError` objects are thrown (or returned) when validation fails.\n *\n * Validation logic is design to exit early for maximum performance. The error\n * represents the first error encountered during validation. For more detail,\n * the `error.failures` property is a generator function that can be run to\n * continue validation and receive all the failures in the data.\n */\nclass StructError extends TypeError {\n  constructor(failure, failures) {\n    let cached;\n    const {\n      message,\n      ...rest\n    } = failure;\n    const {\n      path\n    } = failure;\n    const msg = path.length === 0 ? message : \"At path: \" + path.join('.') + \" -- \" + message;\n    super(msg);\n    Object.assign(this, rest);\n    this.name = this.constructor.name;\n\n    this.failures = () => {\n      var _cached;\n\n      return (_cached = cached) != null ? _cached : cached = [failure, ...failures()];\n    };\n  }\n\n}\n\n/**\n * Check if a value is an iterator.\n */\nfunction isIterable(x) {\n  return isObject(x) && typeof x[Symbol.iterator] === 'function';\n}\n/**\n * Check if a value is a plain object.\n */\n\n\nfunction isObject(x) {\n  return typeof x === 'object' && x != null;\n}\n/**\n * Check if a value is a plain object.\n */\n\nfunction isPlainObject(x) {\n  if (Object.prototype.toString.call(x) !== '[object Object]') {\n    return false;\n  }\n\n  const prototype = Object.getPrototypeOf(x);\n  return prototype === null || prototype === Object.prototype;\n}\n/**\n * Return a value as a printable string.\n */\n\nfunction print(value) {\n  return typeof value === 'string' ? JSON.stringify(value) : \"\" + value;\n}\n/**\n * Shifts (removes and returns) the first value from the `input` iterator.\n * Like `Array.prototype.shift()` but for an `Iterator`.\n */\n\nfunction shiftIterator(input) {\n  const {\n    done,\n    value\n  } = input.next();\n  return done ? undefined : value;\n}\n/**\n * Convert a single validation result to a failure.\n */\n\nfunction toFailure(result, context, struct, value) {\n  if (result === true) {\n    return;\n  } else if (result === false) {\n    result = {};\n  } else if (typeof result === 'string') {\n    result = {\n      message: result\n    };\n  }\n\n  const {\n    path,\n    branch\n  } = context;\n  const {\n    type\n  } = struct;\n  const {\n    refinement,\n    message = \"Expected a value of type `\" + type + \"`\" + (refinement ? \" with refinement `\" + refinement + \"`\" : '') + \", but received: `\" + print(value) + \"`\"\n  } = result;\n  return {\n    value,\n    type,\n    refinement,\n    key: path[path.length - 1],\n    path,\n    branch,\n    ...result,\n    message\n  };\n}\n/**\n * Convert a validation result to an iterable of failures.\n */\n\nfunction* toFailures(result, context, struct, value) {\n  if (!isIterable(result)) {\n    result = [result];\n  }\n\n  for (const r of result) {\n    const failure = toFailure(r, context, struct, value);\n\n    if (failure) {\n      yield failure;\n    }\n  }\n}\n/**\n * Check a value against a struct, traversing deeply into nested values, and\n * returning an iterator of failures or success.\n */\n\nfunction* run(value, struct, options = {}) {\n  const {\n    path = [],\n    branch = [value],\n    coerce = false,\n    mask = false\n  } = options;\n  const ctx = {\n    path,\n    branch\n  };\n\n  if (coerce) {\n    value = struct.coercer(value, ctx);\n\n    if (mask && struct.type !== 'type' && isObject(struct.schema) && isObject(value) && !Array.isArray(value)) {\n      for (const key in value) {\n        if (struct.schema[key] === undefined) {\n          delete value[key];\n        }\n      }\n    }\n  }\n\n  let valid = true;\n\n  for (const failure of struct.validator(value, ctx)) {\n    valid = false;\n    yield [failure, undefined];\n  }\n\n  for (let [k, v, s] of struct.entries(value, ctx)) {\n    const ts = run(v, s, {\n      path: k === undefined ? path : [...path, k],\n      branch: k === undefined ? branch : [...branch, v],\n      coerce,\n      mask\n    });\n\n    for (const t of ts) {\n      if (t[0]) {\n        valid = false;\n        yield [t[0], undefined];\n      } else if (coerce) {\n        v = t[1];\n\n        if (k === undefined) {\n          value = v;\n        } else if (value instanceof Map) {\n          value.set(k, v);\n        } else if (value instanceof Set) {\n          value.add(v);\n        } else if (isObject(value)) {\n          value[k] = v;\n        }\n      }\n    }\n  }\n\n  if (valid) {\n    for (const failure of struct.refiner(value, ctx)) {\n      valid = false;\n      yield [failure, undefined];\n    }\n  }\n\n  if (valid) {\n    yield [undefined, value];\n  }\n}\n\n/**\n * `Struct` objects encapsulate the validation logic for a specific type of\n * values. Once constructed, you use the `assert`, `is` or `validate` helpers to\n * validate unknown input data against the struct.\n */\n\nclass Struct {\n  constructor(props) {\n    const {\n      type,\n      schema,\n      validator,\n      refiner,\n      coercer = value => value,\n      entries = function* () {}\n    } = props;\n    this.type = type;\n    this.schema = schema;\n    this.entries = entries;\n    this.coercer = coercer;\n\n    if (validator) {\n      this.validator = (value, context) => {\n        const result = validator(value, context);\n        return toFailures(result, context, this, value);\n      };\n    } else {\n      this.validator = () => [];\n    }\n\n    if (refiner) {\n      this.refiner = (value, context) => {\n        const result = refiner(value, context);\n        return toFailures(result, context, this, value);\n      };\n    } else {\n      this.refiner = () => [];\n    }\n  }\n  /**\n   * Assert that a value passes the struct's validation, throwing if it doesn't.\n   */\n\n\n  assert(value) {\n    return assert(value, this);\n  }\n  /**\n   * Create a value with the struct's coercion logic, then validate it.\n   */\n\n\n  create(value) {\n    return create(value, this);\n  }\n  /**\n   * Check if a value passes the struct's validation.\n   */\n\n\n  is(value) {\n    return is(value, this);\n  }\n  /**\n   * Mask a value, coercing and validating it, but returning only the subset of\n   * properties defined by the struct's schema.\n   */\n\n\n  mask(value) {\n    return mask(value, this);\n  }\n  /**\n   * Validate a value with the struct's validation logic, returning a tuple\n   * representing the result.\n   *\n   * You may optionally pass `true` for the `withCoercion` argument to coerce\n   * the value before attempting to validate it. If you do, the result will\n   * contain the coerced result when successful.\n   */\n\n\n  validate(value, options = {}) {\n    return validate(value, this, options);\n  }\n\n}\n/**\n * Assert that a value passes a struct, throwing if it doesn't.\n */\n\nfunction assert(value, struct) {\n  const result = validate(value, struct);\n\n  if (result[0]) {\n    throw result[0];\n  }\n}\n/**\n * Create a value with the coercion logic of struct and validate it.\n */\n\nfunction create(value, struct) {\n  const result = validate(value, struct, {\n    coerce: true\n  });\n\n  if (result[0]) {\n    throw result[0];\n  } else {\n    return result[1];\n  }\n}\n/**\n * Mask a value, returning only the subset of properties defined by a struct.\n */\n\nfunction mask(value, struct) {\n  const result = validate(value, struct, {\n    coerce: true,\n    mask: true\n  });\n\n  if (result[0]) {\n    throw result[0];\n  } else {\n    return result[1];\n  }\n}\n/**\n * Check if a value passes a struct.\n */\n\nfunction is(value, struct) {\n  const result = validate(value, struct);\n  return !result[0];\n}\n/**\n * Validate a value against a struct, returning an error if invalid, or the\n * value (with potential coercion) if valid.\n */\n\nfunction validate(value, struct, options = {}) {\n  const tuples = run(value, struct, options);\n  const tuple = shiftIterator(tuples);\n\n  if (tuple[0]) {\n    const error = new StructError(tuple[0], function* () {\n      for (const t of tuples) {\n        if (t[0]) {\n          yield t[0];\n        }\n      }\n    });\n    return [error, undefined];\n  } else {\n    const v = tuple[1];\n    return [undefined, v];\n  }\n}\n\nfunction assign(...Structs) {\n  const schemas = Structs.map(s => s.schema);\n  const schema = Object.assign({}, ...schemas);\n  return object(schema);\n}\n/**\n * Define a new struct type with a custom validation function.\n */\n\nfunction define(name, validator) {\n  return new Struct({\n    type: name,\n    schema: null,\n    validator\n  });\n}\n/**\n * Create a new struct based on an existing struct, but the value is allowed to\n * be `undefined`. `log` will be called if the value is not `undefined`.\n */\n\nfunction deprecated(struct, log) {\n  return new Struct({ ...struct,\n    refiner: (value, ctx) => value === undefined || struct.refiner(value, ctx),\n\n    validator(value, ctx) {\n      if (value === undefined) {\n        return true;\n      } else {\n        log(value, ctx);\n        return struct.validator(value, ctx);\n      }\n    }\n\n  });\n}\n/**\n * Create a struct with dynamic validation logic.\n *\n * The callback will receive the value currently being validated, and must\n * return a struct object to validate it with. This can be useful to model\n * validation logic that changes based on its input.\n */\n\nfunction dynamic(fn) {\n  return new Struct({\n    type: 'dynamic',\n    schema: null,\n\n    *entries(value, ctx) {\n      const struct = fn(value, ctx);\n      yield* struct.entries(value, ctx);\n    },\n\n    validator(value, ctx) {\n      const struct = fn(value, ctx);\n      return struct.validator(value, ctx);\n    },\n\n    coercer(value, ctx) {\n      const struct = fn(value, ctx);\n      return struct.coercer(value, ctx);\n    }\n\n  });\n}\n/**\n * Create a struct with lazily evaluated validation logic.\n *\n * The first time validation is run with the struct, the callback will be called\n * and must return a struct object to use. This is useful for cases where you\n * want to have self-referential structs for nested data structures to avoid a\n * circular definition problem.\n */\n\nfunction lazy(fn) {\n  let struct;\n  return new Struct({\n    type: 'lazy',\n    schema: null,\n\n    *entries(value, ctx) {\n      var _struct;\n\n      (_struct = struct) != null ? _struct : struct = fn();\n      yield* struct.entries(value, ctx);\n    },\n\n    validator(value, ctx) {\n      var _struct2;\n\n      (_struct2 = struct) != null ? _struct2 : struct = fn();\n      return struct.validator(value, ctx);\n    },\n\n    coercer(value, ctx) {\n      var _struct3;\n\n      (_struct3 = struct) != null ? _struct3 : struct = fn();\n      return struct.coercer(value, ctx);\n    }\n\n  });\n}\n/**\n * Create a new struct based on an existing object struct, but excluding\n * specific properties.\n *\n * Like TypeScript's `Omit` utility.\n */\n\nfunction omit(struct, keys) {\n  const {\n    schema\n  } = struct;\n  const subschema = { ...schema\n  };\n\n  for (const key of keys) {\n    delete subschema[key];\n  }\n\n  return object(subschema);\n}\n/**\n * Create a new struct based on an existing object struct, but with all of its\n * properties allowed to be `undefined`.\n *\n * Like TypeScript's `Partial` utility.\n */\n\nfunction partial(struct) {\n  const schema = struct instanceof Struct ? { ...struct.schema\n  } : { ...struct\n  };\n\n  for (const key in schema) {\n    schema[key] = optional(schema[key]);\n  }\n\n  return object(schema);\n}\n/**\n * Create a new struct based on an existing object struct, but only including\n * specific properties.\n *\n * Like TypeScript's `Pick` utility.\n */\n\nfunction pick(struct, keys) {\n  const {\n    schema\n  } = struct;\n  const subschema = {};\n\n  for (const key of keys) {\n    subschema[key] = schema[key];\n  }\n\n  return object(subschema);\n}\n/**\n * Define a new struct type with a custom validation function.\n *\n * @deprecated This function has been renamed to `define`.\n */\n\nfunction struct(name, validator) {\n  console.warn('superstruct@0.11 - The `struct` helper has been renamed to `define`.');\n  return define(name, validator);\n}\n\n/**\n * Ensure that any value passes validation.\n */\n\nfunction any() {\n  return define('any', () => true);\n}\nfunction array(Element) {\n  return new Struct({\n    type: 'array',\n    schema: Element,\n\n    *entries(value) {\n      if (Element && Array.isArray(value)) {\n        for (const [i, v] of value.entries()) {\n          yield [i, v, Element];\n        }\n      }\n    },\n\n    coercer(value) {\n      return Array.isArray(value) ? value.slice() : value;\n    },\n\n    validator(value) {\n      return Array.isArray(value) || \"Expected an array value, but received: \" + print(value);\n    }\n\n  });\n}\n/**\n * Ensure that a value is a boolean.\n */\n\nfunction boolean() {\n  return define('boolean', value => {\n    return typeof value === 'boolean';\n  });\n}\n/**\n * Ensure that a value is a valid `Date`.\n *\n * Note: this also ensures that the value is *not* an invalid `Date` object,\n * which can occur when parsing a date fails but still returns a `Date`.\n */\n\nfunction date() {\n  return define('date', value => {\n    return value instanceof Date && !isNaN(value.getTime()) || \"Expected a valid `Date` object, but received: \" + print(value);\n  });\n}\nfunction enums(values) {\n  const schema = {};\n  const description = values.map(v => print(v)).join();\n\n  for (const key of values) {\n    schema[key] = key;\n  }\n\n  return new Struct({\n    type: 'enums',\n    schema,\n\n    validator(value) {\n      return values.includes(value) || \"Expected one of `\" + description + \"`, but received: \" + print(value);\n    }\n\n  });\n}\n/**\n * Ensure that a value is a function.\n */\n\nfunction func() {\n  return define('func', value => {\n    return typeof value === 'function' || \"Expected a function, but received: \" + print(value);\n  });\n}\n/**\n * Ensure that a value is an instance of a specific class.\n */\n\nfunction instance(Class) {\n  return define('instance', value => {\n    return value instanceof Class || \"Expected a `\" + Class.name + \"` instance, but received: \" + print(value);\n  });\n}\n/**\n * Ensure that a value is an integer.\n */\n\nfunction integer() {\n  return define('integer', value => {\n    return typeof value === 'number' && !isNaN(value) && Number.isInteger(value) || \"Expected an integer, but received: \" + print(value);\n  });\n}\nfunction intersection(Structs) {\n  return new Struct({\n    type: 'intersection',\n    schema: null,\n\n    *entries(value, ctx) {\n      for (const S of Structs) {\n        yield* S.entries(value, ctx);\n      }\n    },\n\n    *validator(value, ctx) {\n      for (const S of Structs) {\n        yield* S.validator(value, ctx);\n      }\n    },\n\n    *refiner(value, ctx) {\n      for (const S of Structs) {\n        yield* S.refiner(value, ctx);\n      }\n    }\n\n  });\n}\nfunction literal(constant) {\n  const description = print(constant);\n  const t = typeof constant;\n  return new Struct({\n    type: 'literal',\n    schema: t === 'string' || t === 'number' || t === 'boolean' ? constant : null,\n\n    validator(value) {\n      return value === constant || \"Expected the literal `\" + description + \"`, but received: \" + print(value);\n    }\n\n  });\n}\nfunction map(Key, Value) {\n  return new Struct({\n    type: 'map',\n    schema: null,\n\n    *entries(value) {\n      if (Key && Value && value instanceof Map) {\n        for (const [k, v] of value.entries()) {\n          yield [k, k, Key];\n          yield [k, v, Value];\n        }\n      }\n    },\n\n    coercer(value) {\n      return value instanceof Map ? new Map(value) : value;\n    },\n\n    validator(value) {\n      return value instanceof Map || \"Expected a `Map` object, but received: \" + print(value);\n    }\n\n  });\n}\n/**\n * Ensure that no value ever passes validation.\n */\n\nfunction never() {\n  return define('never', () => false);\n}\n/**\n * Augment an existing struct to allow `null` values.\n */\n\nfunction nullable(struct) {\n  return new Struct({ ...struct,\n    validator: (value, ctx) => value === null || struct.validator(value, ctx),\n    refiner: (value, ctx) => value === null || struct.refiner(value, ctx)\n  });\n}\n/**\n * Ensure that a value is a number.\n */\n\nfunction number() {\n  return define('number', value => {\n    return typeof value === 'number' && !isNaN(value) || \"Expected a number, but received: \" + print(value);\n  });\n}\nfunction object(schema) {\n  const knowns = schema ? Object.keys(schema) : [];\n  const Never = never();\n  return new Struct({\n    type: 'object',\n    schema: schema ? schema : null,\n\n    *entries(value) {\n      if (schema && isObject(value)) {\n        const unknowns = new Set(Object.keys(value));\n\n        for (const key of knowns) {\n          unknowns.delete(key);\n          yield [key, value[key], schema[key]];\n        }\n\n        for (const key of unknowns) {\n          yield [key, value[key], Never];\n        }\n      }\n    },\n\n    validator(value) {\n      return isObject(value) || \"Expected an object, but received: \" + print(value);\n    },\n\n    coercer(value) {\n      return isObject(value) ? { ...value\n      } : value;\n    }\n\n  });\n}\n/**\n * Augment a struct to allow `undefined` values.\n */\n\nfunction optional(struct) {\n  return new Struct({ ...struct,\n    validator: (value, ctx) => value === undefined || struct.validator(value, ctx),\n    refiner: (value, ctx) => value === undefined || struct.refiner(value, ctx)\n  });\n}\n/**\n * Ensure that a value is an object with keys and values of specific types, but\n * without ensuring any specific shape of properties.\n *\n * Like TypeScript's `Record` utility.\n */\n\nfunction record(Key, Value) {\n  return new Struct({\n    type: 'record',\n    schema: null,\n\n    *entries(value) {\n      if (isObject(value)) {\n        for (const k in value) {\n          const v = value[k];\n          yield [k, k, Key];\n          yield [k, v, Value];\n        }\n      }\n    },\n\n    validator(value) {\n      return isObject(value) || \"Expected an object, but received: \" + print(value);\n    }\n\n  });\n}\n/**\n * Ensure that a value is a `RegExp`.\n *\n * Note: this does not test the value against the regular expression! For that\n * you need to use the `pattern()` refinement.\n */\n\nfunction regexp() {\n  return define('regexp', value => {\n    return value instanceof RegExp;\n  });\n}\nfunction set(Element) {\n  return new Struct({\n    type: 'set',\n    schema: null,\n\n    *entries(value) {\n      if (Element && value instanceof Set) {\n        for (const v of value) {\n          yield [v, v, Element];\n        }\n      }\n    },\n\n    coercer(value) {\n      return value instanceof Set ? new Set(value) : value;\n    },\n\n    validator(value) {\n      return value instanceof Set || \"Expected a `Set` object, but received: \" + print(value);\n    }\n\n  });\n}\n/**\n * Ensure that a value is a string.\n */\n\nfunction string() {\n  return define('string', value => {\n    return typeof value === 'string' || \"Expected a string, but received: \" + print(value);\n  });\n}\nfunction tuple(Elements) {\n  const Never = never();\n  return new Struct({\n    type: 'tuple',\n    schema: null,\n\n    *entries(value) {\n      if (Array.isArray(value)) {\n        const length = Math.max(Elements.length, value.length);\n\n        for (let i = 0; i < length; i++) {\n          yield [i, value[i], Elements[i] || Never];\n        }\n      }\n    },\n\n    validator(value) {\n      return Array.isArray(value) || \"Expected an array, but received: \" + print(value);\n    }\n\n  });\n}\n/**\n * Ensure that a value has a set of known properties of specific types.\n *\n * Note: Unrecognized properties are allowed and untouched. This is similar to\n * how TypeScript's structural typing works.\n */\n\nfunction type(schema) {\n  const keys = Object.keys(schema);\n  return new Struct({\n    type: 'type',\n    schema,\n\n    *entries(value) {\n      if (isObject(value)) {\n        for (const k of keys) {\n          yield [k, value[k], schema[k]];\n        }\n      }\n    },\n\n    validator(value) {\n      return isObject(value) || \"Expected an object, but received: \" + print(value);\n    }\n\n  });\n}\nfunction union(Structs) {\n  const description = Structs.map(s => s.type).join(' | ');\n  return new Struct({\n    type: 'union',\n    schema: null,\n\n    validator(value, ctx) {\n      const failures = [];\n\n      for (const S of Structs) {\n        const [...tuples] = run(value, S, ctx);\n        const [first] = tuples;\n\n        if (!first[0]) {\n          return [];\n        } else {\n          for (const [failure] of tuples) {\n            if (failure) {\n              failures.push(failure);\n            }\n          }\n        }\n      }\n\n      return [\"Expected the value to satisfy a union of `\" + description + \"`, but received: \" + print(value), ...failures];\n    }\n\n  });\n}\n/**\n * Ensure that any value passes validation, without widening its type to `any`.\n */\n\nfunction unknown() {\n  return define('unknown', () => true);\n}\n\n/**\n * Augment a `Struct` to add an additional coercion step to its input.\n *\n * This allows you to transform input data before validating it, to increase the\n * likelihood that it passes validation—for example for default values, parsing\n * different formats, etc.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\n\nfunction coerce(struct, condition, coercer) {\n  return new Struct({ ...struct,\n    coercer: (value, ctx) => {\n      return is(value, condition) ? struct.coercer(coercer(value, ctx), ctx) : struct.coercer(value, ctx);\n    }\n  });\n}\n/**\n * Augment a struct to replace `undefined` values with a default.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\n\nfunction defaulted(struct, fallback, options = {}) {\n  return coerce(struct, unknown(), x => {\n    const f = typeof fallback === 'function' ? fallback() : fallback;\n\n    if (x === undefined) {\n      return f;\n    }\n\n    if (!options.strict && isPlainObject(x) && isPlainObject(f)) {\n      const ret = { ...x\n      };\n      let changed = false;\n\n      for (const key in f) {\n        if (ret[key] === undefined) {\n          ret[key] = f[key];\n          changed = true;\n        }\n      }\n\n      if (changed) {\n        return ret;\n      }\n    }\n\n    return x;\n  });\n}\n/**\n * Augment a struct to trim string inputs.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\n\nfunction trimmed(struct) {\n  return coerce(struct, string(), x => x.trim());\n}\n\n/**\n * Ensure that a string, array, map, or set is empty.\n */\n\nfunction empty(struct) {\n  const expected = \"Expected an empty \" + struct.type;\n  return refine(struct, 'empty', value => {\n    if (value instanceof Map || value instanceof Set) {\n      const {\n        size\n      } = value;\n      return size === 0 || expected + \" but received one with a size of `\" + size + \"`\";\n    } else {\n      const {\n        length\n      } = value;\n      return length === 0 || expected + \" but received one with a length of `\" + length + \"`\";\n    }\n  });\n}\n/**\n * Ensure that a number or date is below a threshold.\n */\n\nfunction max(struct, threshold, options = {}) {\n  const {\n    exclusive\n  } = options;\n  return refine(struct, 'max', value => {\n    return exclusive ? value < threshold : value <= threshold || \"Expected a \" + struct.type + \" greater than \" + (exclusive ? '' : 'or equal to ') + threshold + \" but received `\" + value + \"`\";\n  });\n}\n/**\n * Ensure that a number or date is above a threshold.\n */\n\nfunction min(struct, threshold, options = {}) {\n  const {\n    exclusive\n  } = options;\n  return refine(struct, 'min', value => {\n    return exclusive ? value > threshold : value >= threshold || \"Expected a \" + struct.type + \" greater than \" + (exclusive ? '' : 'or equal to ') + threshold + \" but received `\" + value + \"`\";\n  });\n}\n/**\n * Ensure that a string matches a regular expression.\n */\n\nfunction pattern(struct, regexp) {\n  return refine(struct, 'pattern', value => {\n    return regexp.test(value) || \"Expected a \" + struct.type + \" matching `/\" + regexp.source + \"/` but received \\\"\" + value + \"\\\"\";\n  });\n}\n/**\n * Ensure that a string, array, number, date, map, or set has a size (or length, or time) between `min` and `max`.\n */\n\nfunction size(struct, min, max = min) {\n  const expected = \"Expected a \" + struct.type;\n  const of = min === max ? \"of `\" + min + \"`\" : \"between `\" + min + \"` and `\" + max + \"`\";\n  return refine(struct, 'size', value => {\n    if (typeof value === 'number' || value instanceof Date) {\n      return min <= value && value <= max || expected + \" \" + of + \" but received `\" + value + \"`\";\n    } else if (value instanceof Map || value instanceof Set) {\n      const {\n        size\n      } = value;\n      return min <= size && size <= max || expected + \" with a size \" + of + \" but received one with a size of `\" + size + \"`\";\n    } else {\n      const {\n        length\n      } = value;\n      return min <= length && length <= max || expected + \" with a length \" + of + \" but received one with a length of `\" + length + \"`\";\n    }\n  });\n}\n/**\n * Augment a `Struct` to add an additional refinement to the validation.\n *\n * The refiner function is guaranteed to receive a value of the struct's type,\n * because the struct's existing validation will already have passed. This\n * allows you to layer additional validation on top of existing structs.\n */\n\nfunction refine(struct, name, refiner) {\n  return new Struct({ ...struct,\n\n    *refiner(value, ctx) {\n      yield* struct.refiner(value, ctx);\n      const result = refiner(value, ctx);\n      const failures = toFailures(result, ctx, struct, value);\n\n      for (const failure of failures) {\n        yield { ...failure,\n          refinement: name\n        };\n      }\n    }\n\n  });\n}\n\nexport { Struct, StructError, any, array, assert, assign, boolean, coerce, create, date, defaulted, define, deprecated, dynamic, empty, enums, func, instance, integer, intersection, is, lazy, literal, map, mask, max, min, never, nullable, number, object, omit, optional, partial, pattern, pick, record, refine, regexp, set, size, string, struct, trimmed, tuple, type, union, unknown, validate };\n//# sourceMappingURL=index.es.js.map\n","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import rng from './rng.js';\nimport stringify from './stringify.js'; // **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nvar _nodeId;\n\nvar _clockseq; // Previous uuid creation time\n\n\nvar _lastMSecs = 0;\nvar _lastNSecs = 0; // See https://github.com/uuidjs/uuid for API details\n\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || new Array(16);\n  options = options || {};\n  var node = options.node || _nodeId;\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq; // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n\n  if (node == null || clockseq == null) {\n    var seedBytes = options.random || (options.rng || rng)();\n\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [seedBytes[0] | 0x01, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];\n    }\n\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  } // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n\n\n  var msecs = options.msecs !== undefined ? options.msecs : Date.now(); // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1; // Time since last uuid creation (in msecs)\n\n  var dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000; // Per 4.2.1.2, Bump clockseq on clock regression\n\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  } // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n\n\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  } // Per 4.2.1.2 Throw error if too many uuids are requested\n\n\n  if (nsecs >= 10000) {\n    throw new Error(\"uuid.v1(): Can't create more than 10M uuids/sec\");\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq; // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n\n  msecs += 12219292800000; // `time_low`\n\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff; // `time_mid`\n\n  var tmh = msecs / 0x100000000 * 10000 & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff; // `time_high_and_version`\n\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n\n  b[i++] = tmh >>> 16 & 0xff; // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n\n  b[i++] = clockseq >>> 8 | 0x80; // `clock_seq_low`\n\n  b[i++] = clockseq & 0xff; // `node`\n\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf || stringify(b);\n}\n\nexport default v1;","import validate from './validate.js';\n\nfunction parse(uuid) {\n  if (!validate(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  var v;\n  var arr = new Uint8Array(16); // Parse ########-....-....-....-............\n\n  arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;\n  arr[1] = v >>> 16 & 0xff;\n  arr[2] = v >>> 8 & 0xff;\n  arr[3] = v & 0xff; // Parse ........-####-....-....-............\n\n  arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;\n  arr[5] = v & 0xff; // Parse ........-....-####-....-............\n\n  arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;\n  arr[7] = v & 0xff; // Parse ........-....-....-####-............\n\n  arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;\n  arr[9] = v & 0xff; // Parse ........-....-....-....-############\n  // (Use \"/\" to avoid 32-bit truncation when bit-shifting high-order bytes)\n\n  arr[10] = (v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000 & 0xff;\n  arr[11] = v / 0x100000000 & 0xff;\n  arr[12] = v >>> 24 & 0xff;\n  arr[13] = v >>> 16 & 0xff;\n  arr[14] = v >>> 8 & 0xff;\n  arr[15] = v & 0xff;\n  return arr;\n}\n\nexport default parse;","import stringify from './stringify.js';\nimport parse from './parse.js';\n\nfunction stringToBytes(str) {\n  str = unescape(encodeURIComponent(str)); // UTF8 escape\n\n  var bytes = [];\n\n  for (var i = 0; i < str.length; ++i) {\n    bytes.push(str.charCodeAt(i));\n  }\n\n  return bytes;\n}\n\nexport var DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\nexport var URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\nexport default function (name, version, hashfunc) {\n  function generateUUID(value, namespace, buf, offset) {\n    if (typeof value === 'string') {\n      value = stringToBytes(value);\n    }\n\n    if (typeof namespace === 'string') {\n      namespace = parse(namespace);\n    }\n\n    if (namespace.length !== 16) {\n      throw TypeError('Namespace must be array-like (16 iterable integer values, 0-255)');\n    } // Compute hash of namespace and value, Per 4.3\n    // Future: Use spread syntax when supported on all platforms, e.g. `bytes =\n    // hashfunc([...namespace, ... value])`\n\n\n    var bytes = new Uint8Array(16 + value.length);\n    bytes.set(namespace);\n    bytes.set(value, namespace.length);\n    bytes = hashfunc(bytes);\n    bytes[6] = bytes[6] & 0x0f | version;\n    bytes[8] = bytes[8] & 0x3f | 0x80;\n\n    if (buf) {\n      offset = offset || 0;\n\n      for (var i = 0; i < 16; ++i) {\n        buf[offset + i] = bytes[i];\n      }\n\n      return buf;\n    }\n\n    return stringify(bytes);\n  } // Function#name is not settable on some platforms (#270)\n\n\n  try {\n    generateUUID.name = name; // eslint-disable-next-line no-empty\n  } catch (err) {} // For CommonJS default export support\n\n\n  generateUUID.DNS = DNS;\n  generateUUID.URL = URL;\n  return generateUUID;\n}","/*\n * Browser-compatible JavaScript MD5\n *\n * Modification of JavaScript MD5\n * https://github.com/blueimp/JavaScript-MD5\n *\n * Copyright 2011, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n *\n * Based on\n * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\n * Digest Algorithm, as defined in RFC 1321.\n * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for more info.\n */\nfunction md5(bytes) {\n  if (typeof bytes === 'string') {\n    var msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = new Uint8Array(msg.length);\n\n    for (var i = 0; i < msg.length; ++i) {\n      bytes[i] = msg.charCodeAt(i);\n    }\n  }\n\n  return md5ToHexEncodedArray(wordsToMd5(bytesToWords(bytes), bytes.length * 8));\n}\n/*\n * Convert an array of little-endian words to an array of bytes\n */\n\n\nfunction md5ToHexEncodedArray(input) {\n  var output = [];\n  var length32 = input.length * 32;\n  var hexTab = '0123456789abcdef';\n\n  for (var i = 0; i < length32; i += 8) {\n    var x = input[i >> 5] >>> i % 32 & 0xff;\n    var hex = parseInt(hexTab.charAt(x >>> 4 & 0x0f) + hexTab.charAt(x & 0x0f), 16);\n    output.push(hex);\n  }\n\n  return output;\n}\n/**\n * Calculate output length with padding and bit length\n */\n\n\nfunction getOutputLength(inputLength8) {\n  return (inputLength8 + 64 >>> 9 << 4) + 14 + 1;\n}\n/*\n * Calculate the MD5 of an array of little-endian words, and a bit length.\n */\n\n\nfunction wordsToMd5(x, len) {\n  /* append padding */\n  x[len >> 5] |= 0x80 << len % 32;\n  x[getOutputLength(len) - 1] = len;\n  var a = 1732584193;\n  var b = -271733879;\n  var c = -1732584194;\n  var d = 271733878;\n\n  for (var i = 0; i < x.length; i += 16) {\n    var olda = a;\n    var oldb = b;\n    var oldc = c;\n    var oldd = d;\n    a = md5ff(a, b, c, d, x[i], 7, -680876936);\n    d = md5ff(d, a, b, c, x[i + 1], 12, -389564586);\n    c = md5ff(c, d, a, b, x[i + 2], 17, 606105819);\n    b = md5ff(b, c, d, a, x[i + 3], 22, -1044525330);\n    a = md5ff(a, b, c, d, x[i + 4], 7, -176418897);\n    d = md5ff(d, a, b, c, x[i + 5], 12, 1200080426);\n    c = md5ff(c, d, a, b, x[i + 6], 17, -1473231341);\n    b = md5ff(b, c, d, a, x[i + 7], 22, -45705983);\n    a = md5ff(a, b, c, d, x[i + 8], 7, 1770035416);\n    d = md5ff(d, a, b, c, x[i + 9], 12, -1958414417);\n    c = md5ff(c, d, a, b, x[i + 10], 17, -42063);\n    b = md5ff(b, c, d, a, x[i + 11], 22, -1990404162);\n    a = md5ff(a, b, c, d, x[i + 12], 7, 1804603682);\n    d = md5ff(d, a, b, c, x[i + 13], 12, -40341101);\n    c = md5ff(c, d, a, b, x[i + 14], 17, -1502002290);\n    b = md5ff(b, c, d, a, x[i + 15], 22, 1236535329);\n    a = md5gg(a, b, c, d, x[i + 1], 5, -165796510);\n    d = md5gg(d, a, b, c, x[i + 6], 9, -1069501632);\n    c = md5gg(c, d, a, b, x[i + 11], 14, 643717713);\n    b = md5gg(b, c, d, a, x[i], 20, -373897302);\n    a = md5gg(a, b, c, d, x[i + 5], 5, -701558691);\n    d = md5gg(d, a, b, c, x[i + 10], 9, 38016083);\n    c = md5gg(c, d, a, b, x[i + 15], 14, -660478335);\n    b = md5gg(b, c, d, a, x[i + 4], 20, -405537848);\n    a = md5gg(a, b, c, d, x[i + 9], 5, 568446438);\n    d = md5gg(d, a, b, c, x[i + 14], 9, -1019803690);\n    c = md5gg(c, d, a, b, x[i + 3], 14, -187363961);\n    b = md5gg(b, c, d, a, x[i + 8], 20, 1163531501);\n    a = md5gg(a, b, c, d, x[i + 13], 5, -1444681467);\n    d = md5gg(d, a, b, c, x[i + 2], 9, -51403784);\n    c = md5gg(c, d, a, b, x[i + 7], 14, 1735328473);\n    b = md5gg(b, c, d, a, x[i + 12], 20, -1926607734);\n    a = md5hh(a, b, c, d, x[i + 5], 4, -378558);\n    d = md5hh(d, a, b, c, x[i + 8], 11, -2022574463);\n    c = md5hh(c, d, a, b, x[i + 11], 16, 1839030562);\n    b = md5hh(b, c, d, a, x[i + 14], 23, -35309556);\n    a = md5hh(a, b, c, d, x[i + 1], 4, -1530992060);\n    d = md5hh(d, a, b, c, x[i + 4], 11, 1272893353);\n    c = md5hh(c, d, a, b, x[i + 7], 16, -155497632);\n    b = md5hh(b, c, d, a, x[i + 10], 23, -1094730640);\n    a = md5hh(a, b, c, d, x[i + 13], 4, 681279174);\n    d = md5hh(d, a, b, c, x[i], 11, -358537222);\n    c = md5hh(c, d, a, b, x[i + 3], 16, -722521979);\n    b = md5hh(b, c, d, a, x[i + 6], 23, 76029189);\n    a = md5hh(a, b, c, d, x[i + 9], 4, -640364487);\n    d = md5hh(d, a, b, c, x[i + 12], 11, -421815835);\n    c = md5hh(c, d, a, b, x[i + 15], 16, 530742520);\n    b = md5hh(b, c, d, a, x[i + 2], 23, -995338651);\n    a = md5ii(a, b, c, d, x[i], 6, -198630844);\n    d = md5ii(d, a, b, c, x[i + 7], 10, 1126891415);\n    c = md5ii(c, d, a, b, x[i + 14], 15, -1416354905);\n    b = md5ii(b, c, d, a, x[i + 5], 21, -57434055);\n    a = md5ii(a, b, c, d, x[i + 12], 6, 1700485571);\n    d = md5ii(d, a, b, c, x[i + 3], 10, -1894986606);\n    c = md5ii(c, d, a, b, x[i + 10], 15, -1051523);\n    b = md5ii(b, c, d, a, x[i + 1], 21, -2054922799);\n    a = md5ii(a, b, c, d, x[i + 8], 6, 1873313359);\n    d = md5ii(d, a, b, c, x[i + 15], 10, -30611744);\n    c = md5ii(c, d, a, b, x[i + 6], 15, -1560198380);\n    b = md5ii(b, c, d, a, x[i + 13], 21, 1309151649);\n    a = md5ii(a, b, c, d, x[i + 4], 6, -145523070);\n    d = md5ii(d, a, b, c, x[i + 11], 10, -1120210379);\n    c = md5ii(c, d, a, b, x[i + 2], 15, 718787259);\n    b = md5ii(b, c, d, a, x[i + 9], 21, -343485551);\n    a = safeAdd(a, olda);\n    b = safeAdd(b, oldb);\n    c = safeAdd(c, oldc);\n    d = safeAdd(d, oldd);\n  }\n\n  return [a, b, c, d];\n}\n/*\n * Convert an array bytes to an array of little-endian words\n * Characters >255 have their high-byte silently ignored.\n */\n\n\nfunction bytesToWords(input) {\n  if (input.length === 0) {\n    return [];\n  }\n\n  var length8 = input.length * 8;\n  var output = new Uint32Array(getOutputLength(length8));\n\n  for (var i = 0; i < length8; i += 8) {\n    output[i >> 5] |= (input[i / 8] & 0xff) << i % 32;\n  }\n\n  return output;\n}\n/*\n * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n * to work around bugs in some JS interpreters.\n */\n\n\nfunction safeAdd(x, y) {\n  var lsw = (x & 0xffff) + (y & 0xffff);\n  var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n  return msw << 16 | lsw & 0xffff;\n}\n/*\n * Bitwise rotate a 32-bit number to the left.\n */\n\n\nfunction bitRotateLeft(num, cnt) {\n  return num << cnt | num >>> 32 - cnt;\n}\n/*\n * These functions implement the four basic operations the algorithm uses.\n */\n\n\nfunction md5cmn(q, a, b, x, s, t) {\n  return safeAdd(bitRotateLeft(safeAdd(safeAdd(a, q), safeAdd(x, t)), s), b);\n}\n\nfunction md5ff(a, b, c, d, x, s, t) {\n  return md5cmn(b & c | ~b & d, a, b, x, s, t);\n}\n\nfunction md5gg(a, b, c, d, x, s, t) {\n  return md5cmn(b & d | c & ~d, a, b, x, s, t);\n}\n\nfunction md5hh(a, b, c, d, x, s, t) {\n  return md5cmn(b ^ c ^ d, a, b, x, s, t);\n}\n\nfunction md5ii(a, b, c, d, x, s, t) {\n  return md5cmn(c ^ (b | ~d), a, b, x, s, t);\n}\n\nexport default md5;","import v35 from './v35.js';\nimport md5 from './md5.js';\nvar v3 = v35('v3', 0x30, md5);\nexport default v3;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","// Adapted from Chris Veness' SHA1 code at\n// http://www.movable-type.co.uk/scripts/sha1.html\nfunction f(s, x, y, z) {\n  switch (s) {\n    case 0:\n      return x & y ^ ~x & z;\n\n    case 1:\n      return x ^ y ^ z;\n\n    case 2:\n      return x & y ^ x & z ^ y & z;\n\n    case 3:\n      return x ^ y ^ z;\n  }\n}\n\nfunction ROTL(x, n) {\n  return x << n | x >>> 32 - n;\n}\n\nfunction sha1(bytes) {\n  var K = [0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xca62c1d6];\n  var H = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];\n\n  if (typeof bytes === 'string') {\n    var msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = [];\n\n    for (var i = 0; i < msg.length; ++i) {\n      bytes.push(msg.charCodeAt(i));\n    }\n  } else if (!Array.isArray(bytes)) {\n    // Convert Array-like to Array\n    bytes = Array.prototype.slice.call(bytes);\n  }\n\n  bytes.push(0x80);\n  var l = bytes.length / 4 + 2;\n  var N = Math.ceil(l / 16);\n  var M = new Array(N);\n\n  for (var _i = 0; _i < N; ++_i) {\n    var arr = new Uint32Array(16);\n\n    for (var j = 0; j < 16; ++j) {\n      arr[j] = bytes[_i * 64 + j * 4] << 24 | bytes[_i * 64 + j * 4 + 1] << 16 | bytes[_i * 64 + j * 4 + 2] << 8 | bytes[_i * 64 + j * 4 + 3];\n    }\n\n    M[_i] = arr;\n  }\n\n  M[N - 1][14] = (bytes.length - 1) * 8 / Math.pow(2, 32);\n  M[N - 1][14] = Math.floor(M[N - 1][14]);\n  M[N - 1][15] = (bytes.length - 1) * 8 & 0xffffffff;\n\n  for (var _i2 = 0; _i2 < N; ++_i2) {\n    var W = new Uint32Array(80);\n\n    for (var t = 0; t < 16; ++t) {\n      W[t] = M[_i2][t];\n    }\n\n    for (var _t = 16; _t < 80; ++_t) {\n      W[_t] = ROTL(W[_t - 3] ^ W[_t - 8] ^ W[_t - 14] ^ W[_t - 16], 1);\n    }\n\n    var a = H[0];\n    var b = H[1];\n    var c = H[2];\n    var d = H[3];\n    var e = H[4];\n\n    for (var _t2 = 0; _t2 < 80; ++_t2) {\n      var s = Math.floor(_t2 / 20);\n      var T = ROTL(a, 5) + f(s, b, c, d) + e + K[s] + W[_t2] >>> 0;\n      e = d;\n      d = c;\n      c = ROTL(b, 30) >>> 0;\n      b = a;\n      a = T;\n    }\n\n    H[0] = H[0] + a >>> 0;\n    H[1] = H[1] + b >>> 0;\n    H[2] = H[2] + c >>> 0;\n    H[3] = H[3] + d >>> 0;\n    H[4] = H[4] + e >>> 0;\n  }\n\n  return [H[0] >> 24 & 0xff, H[0] >> 16 & 0xff, H[0] >> 8 & 0xff, H[0] & 0xff, H[1] >> 24 & 0xff, H[1] >> 16 & 0xff, H[1] >> 8 & 0xff, H[1] & 0xff, H[2] >> 24 & 0xff, H[2] >> 16 & 0xff, H[2] >> 8 & 0xff, H[2] & 0xff, H[3] >> 24 & 0xff, H[3] >> 16 & 0xff, H[3] >> 8 & 0xff, H[3] & 0xff, H[4] >> 24 & 0xff, H[4] >> 16 & 0xff, H[4] >> 8 & 0xff, H[4] & 0xff];\n}\n\nexport default sha1;","import v35 from './v35.js';\nimport sha1 from './sha1.js';\nvar v5 = v35('v5', 0x50, sha1);\nexport default v5;","export default '00000000-0000-0000-0000-000000000000';","import validate from './validate.js';\n\nfunction version(uuid) {\n  if (!validate(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  return parseInt(uuid.substr(14, 1), 16);\n}\n\nexport default version;","'use strict';\n\nconst uuid = require('uuid').v4;\n\n/**\n *  Generates a JSON-RPC 1.0 or 2.0 request\n *  @param {String} method Name of method to call\n *  @param {Array|Object} params Array of parameters passed to the method as specified, or an object of parameter names and corresponding value\n *  @param {String|Number|null} [id] Request ID can be a string, number, null for explicit notification or left out for automatic generation\n *  @param {Object} [options]\n *  @param {Number} [options.version=2] JSON-RPC version to use (1 or 2)\n *  @param {Boolean} [options.notificationIdNull=false] When true, version 2 requests will set id to null instead of omitting it\n *  @param {Function} [options.generator] Passed the request, and the options object and is expected to return a request ID\n *  @throws {TypeError} If any of the parameters are invalid\n *  @return {Object} A JSON-RPC 1.0 or 2.0 request\n *  @memberOf Utils\n */\nconst generateRequest = function(method, params, id, options) {\n  if(typeof method !== 'string') {\n    throw new TypeError(method + ' must be a string');\n  }\n\n  options = options || {};\n\n  // check valid version provided\n  const version = typeof options.version === 'number' ? options.version : 2;\n  if (version !== 1 && version !== 2) {\n    throw new TypeError(version + ' must be 1 or 2');\n  }\n\n  const request = {\n    method: method\n  };\n\n  if(version === 2) {\n    request.jsonrpc = '2.0';\n  }\n\n  if(params) {\n    // params given, but invalid?\n    if(typeof params !== 'object' && !Array.isArray(params)) {\n      throw new TypeError(params + ' must be an object, array or omitted');\n    }\n    request.params = params;\n  }\n\n  // if id was left out, generate one (null means explicit notification)\n  if(typeof(id) === 'undefined') {\n    const generator = typeof options.generator === 'function' ? options.generator : function() { return uuid(); };\n    request.id = generator(request, options);\n  } else if (version === 2 && id === null) {\n    // we have a version 2 notification\n    if (options.notificationIdNull) {\n      request.id = null; // id will not be set at all unless option provided\n    }\n  } else {\n    request.id = id;\n  }\n\n  return request;\n};\n\nmodule.exports = generateRequest;\n","'use strict';\n\nconst uuid = require('uuid').v4;\nconst generateRequest = require('../../generateRequest');\n\n/**\n * Constructor for a Jayson Browser Client that does not depend any node.js core libraries\n * @class ClientBrowser\n * @param {Function} callServer Method that calls the server, receives the stringified request and a regular node-style callback\n * @param {Object} [options]\n * @param {Function} [options.reviver] Reviver function for JSON\n * @param {Function} [options.replacer] Replacer function for JSON\n * @param {Number} [options.version=2] JSON-RPC version to use (1|2)\n * @param {Function} [options.generator] Function to use for generating request IDs\n *  @param {Boolean} [options.notificationIdNull=false] When true, version 2 requests will set id to null instead of omitting it\n * @return {ClientBrowser}\n */\nconst ClientBrowser = function(callServer, options) {\n  if(!(this instanceof ClientBrowser)) {\n    return new ClientBrowser(callServer, options);\n  }\n\n  if (!options) {\n    options = {};\n  }\n\n  this.options = {\n    reviver: typeof options.reviver !== 'undefined' ? options.reviver : null,\n    replacer: typeof options.replacer !== 'undefined' ? options.replacer : null,\n    generator: typeof options.generator !== 'undefined' ? options.generator : function() { return uuid(); },\n    version: typeof options.version !== 'undefined' ? options.version : 2,\n    notificationIdNull: typeof options.notificationIdNull === 'boolean' ? options.notificationIdNull : false,\n  };\n\n  this.callServer = callServer;\n};\n\nmodule.exports = ClientBrowser;\n\n/**\n *  Creates a request and dispatches it if given a callback.\n *  @param {String|Array} method A batch request if passed an Array, or a method name if passed a String\n *  @param {Array|Object} [params] Parameters for the method\n *  @param {String|Number} [id] Optional id. If undefined an id will be generated. If null it creates a notification request\n *  @param {Function} [callback] Request callback. If specified, executes the request rather than only returning it.\n *  @throws {TypeError} Invalid parameters\n *  @return {Object} JSON-RPC 1.0 or 2.0 compatible request\n */\nClientBrowser.prototype.request = function(method, params, id, callback) {\n  const self = this;\n  let request = null;\n\n  // is this a batch request?\n  const isBatch = Array.isArray(method) && typeof params === 'function';\n\n  if (this.options.version === 1 && isBatch) {\n    throw new TypeError('JSON-RPC 1.0 does not support batching');\n  }\n\n  // is this a raw request?\n  const isRaw = !isBatch && method && typeof method === 'object' && typeof params === 'function';\n\n  if(isBatch || isRaw) {\n    callback = params;\n    request = method;\n  } else {\n    if(typeof id === 'function') {\n      callback = id;\n      // specifically undefined because \"null\" is a notification request\n      id = undefined;\n    }\n\n    const hasCallback = typeof callback === 'function';\n\n    try {\n      request = generateRequest(method, params, id, {\n        generator: this.options.generator,\n        version: this.options.version,\n        notificationIdNull: this.options.notificationIdNull,\n      });\n    } catch(err) {\n      if(hasCallback) {\n        return callback(err);\n      }\n      throw err;\n    }\n\n    // no callback means we should just return a raw request\n    if(!hasCallback) {\n      return request;\n    }\n\n  }\n\n  let message;\n  try {\n    message = JSON.stringify(request, this.options.replacer);\n  } catch(err) {\n    return callback(err);\n  }\n\n  this.callServer(message, function(err, response) {\n    self._parseResponse(err, response, callback);\n  });\n\n  // always return the raw request\n  return request;\n};\n\n/**\n * Parses a response from a server\n * @param {Object} err Error to pass on that is unrelated to the actual response\n * @param {String} responseText JSON-RPC 1.0 or 2.0 response\n * @param {Function} callback Callback that will receive different arguments depending on the amount of parameters\n * @private\n */\nClientBrowser.prototype._parseResponse = function(err, responseText, callback) {\n  if(err) {\n    callback(err);\n    return;\n  }\n\n  if(!responseText) {\n    // empty response text, assume that is correct because it could be a\n    // notification which jayson does not give any body for\n    return callback();\n  }\n\n  let response;\n  try {\n    response = JSON.parse(responseText, this.options.reviver);\n  } catch(err) {\n    return callback(err);\n  }\n\n  if(callback.length === 3) {\n    // if callback length is 3, we split callback arguments on error and response\n\n    // is batch response?\n    if(Array.isArray(response)) {\n\n      // neccesary to split strictly on validity according to spec here\n      const isError = function(res) {\n        return typeof res.error !== 'undefined';\n      };\n\n      const isNotError = function (res) {\n        return !isError(res);\n      };\n\n      return callback(null, response.filter(isError), response.filter(isNotError));\n    \n    } else {\n\n      // split regardless of validity\n      return callback(null, response.error, response.result);\n    \n    }\n  \n  }\n\n  callback(null, response);\n};\n","const MINIMUM_SLOT_PER_EPOCH = 32;\n\n// Returns the number of trailing zeros in the binary representation of self.\nfunction trailingZeros(n: number) {\n  let trailingZeros = 0;\n  while (n > 1) {\n    n /= 2;\n    trailingZeros++;\n  }\n  return trailingZeros;\n}\n\n// Returns the smallest power of two greater than or equal to n\nfunction nextPowerOfTwo(n: number) {\n  if (n === 0) return 1;\n  n--;\n  n |= n >> 1;\n  n |= n >> 2;\n  n |= n >> 4;\n  n |= n >> 8;\n  n |= n >> 16;\n  n |= n >> 32;\n  return n + 1;\n}\n\n/**\n * Epoch schedule\n * (see https://docs.solana.com/terminology#epoch)\n * Can be retrieved with the {@link Connection.getEpochSchedule} method\n */\nexport class EpochSchedule {\n  /** The maximum number of slots in each epoch */\n  public slotsPerEpoch: number;\n  /** The number of slots before beginning of an epoch to calculate a leader schedule for that epoch */\n  public leaderScheduleSlotOffset: number;\n  /** Indicates whether epochs start short and grow */\n  public warmup: boolean;\n  /** The first epoch with `slotsPerEpoch` slots */\n  public firstNormalEpoch: number;\n  /** The first slot of `firstNormalEpoch` */\n  public firstNormalSlot: number;\n\n  constructor(\n    slotsPerEpoch: number,\n    leaderScheduleSlotOffset: number,\n    warmup: boolean,\n    firstNormalEpoch: number,\n    firstNormalSlot: number,\n  ) {\n    this.slotsPerEpoch = slotsPerEpoch;\n    this.leaderScheduleSlotOffset = leaderScheduleSlotOffset;\n    this.warmup = warmup;\n    this.firstNormalEpoch = firstNormalEpoch;\n    this.firstNormalSlot = firstNormalSlot;\n  }\n\n  getEpoch(slot: number): number {\n    return this.getEpochAndSlotIndex(slot)[0];\n  }\n\n  getEpochAndSlotIndex(slot: number): [number, number] {\n    if (slot < this.firstNormalSlot) {\n      const epoch =\n        trailingZeros(nextPowerOfTwo(slot + MINIMUM_SLOT_PER_EPOCH + 1)) -\n        trailingZeros(MINIMUM_SLOT_PER_EPOCH) -\n        1;\n\n      const epochLen = this.getSlotsInEpoch(epoch);\n      const slotIndex = slot - (epochLen - MINIMUM_SLOT_PER_EPOCH);\n      return [epoch, slotIndex];\n    } else {\n      const normalSlotIndex = slot - this.firstNormalSlot;\n      const normalEpochIndex = Math.floor(normalSlotIndex / this.slotsPerEpoch);\n      const epoch = this.firstNormalEpoch + normalEpochIndex;\n      const slotIndex = normalSlotIndex % this.slotsPerEpoch;\n      return [epoch, slotIndex];\n    }\n  }\n\n  getFirstSlotInEpoch(epoch: number): number {\n    if (epoch <= this.firstNormalEpoch) {\n      return (Math.pow(2, epoch) - 1) * MINIMUM_SLOT_PER_EPOCH;\n    } else {\n      return (\n        (epoch - this.firstNormalEpoch) * this.slotsPerEpoch +\n        this.firstNormalSlot\n      );\n    }\n  }\n\n  getLastSlotInEpoch(epoch: number): number {\n    return this.getFirstSlotInEpoch(epoch) + this.getSlotsInEpoch(epoch) - 1;\n  }\n\n  getSlotsInEpoch(epoch: number) {\n    if (epoch < this.firstNormalEpoch) {\n      return Math.pow(2, epoch + trailingZeros(MINIMUM_SLOT_PER_EPOCH));\n    } else {\n      return this.slotsPerEpoch;\n    }\n  }\n}\n","export class SendTransactionError extends Error {\n  logs: string[] | undefined;\n\n  constructor(message: string, logs?: string[]) {\n    super(message);\n\n    this.logs = logs;\n  }\n}\n\n// Keep in sync with client/src/rpc_custom_errors.rs\n// Typescript `enums` thwart tree-shaking. See https://bargsten.org/jsts/enums/\nexport const SolanaJSONRPCErrorCode = {\n  JSON_RPC_SERVER_ERROR_BLOCK_CLEANED_UP: -32001,\n  JSON_RPC_SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE: -32002,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_VERIFICATION_FAILURE: -32003,\n  JSON_RPC_SERVER_ERROR_BLOCK_NOT_AVAILABLE: -32004,\n  JSON_RPC_SERVER_ERROR_NODE_UNHEALTHY: -32005,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_PRECOMPILE_VERIFICATION_FAILURE: -32006,\n  JSON_RPC_SERVER_ERROR_SLOT_SKIPPED: -32007,\n  JSON_RPC_SERVER_ERROR_NO_SNAPSHOT: -32008,\n  JSON_RPC_SERVER_ERROR_LONG_TERM_STORAGE_SLOT_SKIPPED: -32009,\n  JSON_RPC_SERVER_ERROR_KEY_EXCLUDED_FROM_SECONDARY_INDEX: -32010,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_HISTORY_NOT_AVAILABLE: -32011,\n  JSON_RPC_SCAN_ERROR: -32012,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_LEN_MISMATCH: -32013,\n  JSON_RPC_SERVER_ERROR_BLOCK_STATUS_NOT_AVAILABLE_YET: -32014,\n  JSON_RPC_SERVER_ERROR_UNSUPPORTED_TRANSACTION_VERSION: -32015,\n  JSON_RPC_SERVER_ERROR_MIN_CONTEXT_SLOT_NOT_REACHED: -32016,\n} as const;\nexport type SolanaJSONRPCErrorCodeEnum =\n  (typeof SolanaJSONRPCErrorCode)[keyof typeof SolanaJSONRPCErrorCode];\n\nexport class SolanaJSONRPCError extends Error {\n  code: SolanaJSONRPCErrorCodeEnum | unknown;\n  data?: any;\n  constructor(\n    {\n      code,\n      message,\n      data,\n    }: Readonly<{code: unknown; message: string; data?: any}>,\n    customMessage?: string,\n  ) {\n    super(customMessage != null ? `${customMessage}: ${message}` : message);\n    this.code = code;\n    this.data = data;\n    this.name = 'SolanaJSONRPCError';\n  }\n}\n","export const Headers = globalThis.Headers;\nexport const Request = globalThis.Request;\nexport const Response = globalThis.Response;\nexport default globalThis.fetch;\n","function _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\nmodule.exports = _interopRequireDefault, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return (module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports), _typeof(obj);\n}\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nfunction _regeneratorRuntime() {\n  \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */\n  module.exports = _regeneratorRuntime = function _regeneratorRuntime() {\n    return exports;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  var exports = {},\n    Op = Object.prototype,\n    hasOwn = Op.hasOwnProperty,\n    defineProperty = Object.defineProperty || function (obj, key, desc) {\n      obj[key] = desc.value;\n    },\n    $Symbol = \"function\" == typeof Symbol ? Symbol : {},\n    iteratorSymbol = $Symbol.iterator || \"@@iterator\",\n    asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\",\n    toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n  function define(obj, key, value) {\n    return Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }), obj[key];\n  }\n  try {\n    define({}, \"\");\n  } catch (err) {\n    define = function define(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator,\n      generator = Object.create(protoGenerator.prototype),\n      context = new Context(tryLocsList || []);\n    return defineProperty(generator, \"_invoke\", {\n      value: makeInvokeMethod(innerFn, self, context)\n    }), generator;\n  }\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n  exports.wrap = wrap;\n  var ContinueSentinel = {};\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n  var getProto = Object.getPrototypeOf,\n    NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype);\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function (method) {\n      define(prototype, method, function (arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (\"throw\" !== record.type) {\n        var result = record.arg,\n          value = result.value;\n        return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) {\n          invoke(\"next\", value, resolve, reject);\n        }, function (err) {\n          invoke(\"throw\", err, resolve, reject);\n        }) : PromiseImpl.resolve(value).then(function (unwrapped) {\n          result.value = unwrapped, resolve(result);\n        }, function (error) {\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n      reject(record.arg);\n    }\n    var previousPromise;\n    defineProperty(this, \"_invoke\", {\n      value: function value(method, arg) {\n        function callInvokeWithMethodAndArg() {\n          return new PromiseImpl(function (resolve, reject) {\n            invoke(method, arg, resolve, reject);\n          });\n        }\n        return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n      }\n    });\n  }\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = \"suspendedStart\";\n    return function (method, arg) {\n      if (\"executing\" === state) throw new Error(\"Generator is already running\");\n      if (\"completed\" === state) {\n        if (\"throw\" === method) throw arg;\n        return doneResult();\n      }\n      for (context.method = method, context.arg = arg;;) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n        if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) {\n          if (\"suspendedStart\" === state) throw state = \"completed\", context.arg;\n          context.dispatchException(context.arg);\n        } else \"return\" === context.method && context.abrupt(\"return\", context.arg);\n        state = \"executing\";\n        var record = tryCatch(innerFn, self, context);\n        if (\"normal\" === record.type) {\n          if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue;\n          return {\n            value: record.arg,\n            done: context.done\n          };\n        }\n        \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg);\n      }\n    };\n  }\n  function maybeInvokeDelegate(delegate, context) {\n    var methodName = context.method,\n      method = delegate.iterator[methodName];\n    if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel;\n    var record = tryCatch(method, delegate.iterator, context.arg);\n    if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel;\n    var info = record.arg;\n    return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel);\n  }\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n    1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry);\n  }\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\", delete record.arg, entry.completion = record;\n  }\n  function Context(tryLocsList) {\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0);\n  }\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) return iteratorMethod.call(iterable);\n      if (\"function\" == typeof iterable.next) return iterable;\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n          next = function next() {\n            for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next;\n            return next.value = undefined, next.done = !0, next;\n          };\n        return next.next = next;\n      }\n    }\n    return {\n      next: doneResult\n    };\n  }\n  function doneResult() {\n    return {\n      value: undefined,\n      done: !0\n    };\n  }\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", {\n    value: GeneratorFunctionPrototype,\n    configurable: !0\n  }), defineProperty(GeneratorFunctionPrototype, \"constructor\", {\n    value: GeneratorFunction,\n    configurable: !0\n  }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) {\n    var ctor = \"function\" == typeof genFun && genFun.constructor;\n    return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name));\n  }, exports.mark = function (genFun) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun;\n  }, exports.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    void 0 === PromiseImpl && (PromiseImpl = Promise);\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);\n    return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () {\n    return this;\n  }), define(Gp, \"toString\", function () {\n    return \"[object Generator]\";\n  }), exports.keys = function (val) {\n    var object = Object(val),\n      keys = [];\n    for (var key in object) keys.push(key);\n    return keys.reverse(), function next() {\n      for (; keys.length;) {\n        var key = keys.pop();\n        if (key in object) return next.value = key, next.done = !1, next;\n      }\n      return next.done = !0, next;\n    };\n  }, exports.values = values, Context.prototype = {\n    constructor: Context,\n    reset: function reset(skipTempReset) {\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined);\n    },\n    stop: function stop() {\n      this.done = !0;\n      var rootRecord = this.tryEntries[0].completion;\n      if (\"throw\" === rootRecord.type) throw rootRecord.arg;\n      return this.rval;\n    },\n    dispatchException: function dispatchException(exception) {\n      if (this.done) throw exception;\n      var context = this;\n      function handle(loc, caught) {\n        return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught;\n      }\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i],\n          record = entry.completion;\n        if (\"root\" === entry.tryLoc) return handle(\"end\");\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\"),\n            hasFinally = hasOwn.call(entry, \"finallyLoc\");\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n          } else {\n            if (!hasFinally) throw new Error(\"try statement without catch or finally\");\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n      finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null);\n      var record = finallyEntry ? finallyEntry.completion : {};\n      return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record);\n    },\n    complete: function complete(record, afterLoc) {\n      if (\"throw\" === record.type) throw record.arg;\n      return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel;\n    },\n    finish: function finish(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel;\n      }\n    },\n    \"catch\": function _catch(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (\"throw\" === record.type) {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n      return this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel;\n    }\n  }, exports;\n}\nmodule.exports = _regeneratorRuntime, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","// TODO(Babel 8): Remove this file.\n\nvar runtime = require(\"../helpers/regeneratorRuntime\")();\nmodule.exports = runtime;\n\n// Copied from https://github.com/facebook/regenerator/blob/main/packages/runtime/runtime.js#L736=\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}\nmodule.exports = _asyncToGenerator, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nmodule.exports = _classCallCheck, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nfunction _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nmodule.exports = _toPrimitive, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nvar toPrimitive = require(\"./toPrimitive.js\");\nfunction _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}\nmodule.exports = _toPropertyKey, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var toPropertyKey = require(\"./toPropertyKey.js\");\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, toPropertyKey(descriptor.key), descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\nmodule.exports = _createClass, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _setPrototypeOf(o, p);\n}\nmodule.exports = _setPrototypeOf, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var setPrototypeOf = require(\"./setPrototypeOf.js\");\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\nmodule.exports = _inherits, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nmodule.exports = _assertThisInitialized, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nvar assertThisInitialized = require(\"./assertThisInitialized.js\");\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return assertThisInitialized(self);\n}\nmodule.exports = _possibleConstructorReturn, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _getPrototypeOf(o);\n}\nmodule.exports = _getPrototypeOf, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n","/**\n * \"Client\" wraps \"ws\" or a browser-implemented \"WebSocket\" library\n * according to the environment providing JSON RPC 2.0 support on top.\n * @module Client\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _eventemitter = require(\"eventemitter3\");\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2[\"default\"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2[\"default\"])(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar __rest = void 0 && (void 0).__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n}; // @ts-ignore\n\n\nvar CommonClient = /*#__PURE__*/function (_EventEmitter) {\n  (0, _inherits2[\"default\"])(CommonClient, _EventEmitter);\n\n  var _super = _createSuper(CommonClient);\n\n  /**\n   * Instantiate a Client class.\n   * @constructor\n   * @param {webSocketFactory} webSocketFactory - factory method for WebSocket\n   * @param {String} address - url to a websocket server\n   * @param {Object} options - ws options object with reconnect parameters\n   * @param {Function} generate_request_id - custom generation request Id\n   * @return {CommonClient}\n   */\n  function CommonClient(webSocketFactory) {\n    var _this;\n\n    var address = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"ws://localhost:8080\";\n\n    var _a = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    var generate_request_id = arguments.length > 3 ? arguments[3] : undefined;\n    (0, _classCallCheck2[\"default\"])(this, CommonClient);\n\n    var _a$autoconnect = _a.autoconnect,\n        autoconnect = _a$autoconnect === void 0 ? true : _a$autoconnect,\n        _a$reconnect = _a.reconnect,\n        reconnect = _a$reconnect === void 0 ? true : _a$reconnect,\n        _a$reconnect_interval = _a.reconnect_interval,\n        reconnect_interval = _a$reconnect_interval === void 0 ? 1000 : _a$reconnect_interval,\n        _a$max_reconnects = _a.max_reconnects,\n        max_reconnects = _a$max_reconnects === void 0 ? 5 : _a$max_reconnects,\n        rest_options = __rest(_a, [\"autoconnect\", \"reconnect\", \"reconnect_interval\", \"max_reconnects\"]);\n\n    _this = _super.call(this);\n    _this.webSocketFactory = webSocketFactory;\n    _this.queue = {};\n    _this.rpc_id = 0;\n    _this.address = address;\n    _this.autoconnect = autoconnect;\n    _this.ready = false;\n    _this.reconnect = reconnect;\n    _this.reconnect_timer_id = undefined;\n    _this.reconnect_interval = reconnect_interval;\n    _this.max_reconnects = max_reconnects;\n    _this.rest_options = rest_options;\n    _this.current_reconnects = 0;\n\n    _this.generate_request_id = generate_request_id || function () {\n      return ++_this.rpc_id;\n    };\n\n    if (_this.autoconnect) _this._connect(_this.address, Object.assign({\n      autoconnect: _this.autoconnect,\n      reconnect: _this.reconnect,\n      reconnect_interval: _this.reconnect_interval,\n      max_reconnects: _this.max_reconnects\n    }, _this.rest_options));\n    return _this;\n  }\n  /**\n   * Connects to a defined server if not connected already.\n   * @method\n   * @return {Undefined}\n   */\n\n\n  (0, _createClass2[\"default\"])(CommonClient, [{\n    key: \"connect\",\n    value: function connect() {\n      if (this.socket) return;\n\n      this._connect(this.address, Object.assign({\n        autoconnect: this.autoconnect,\n        reconnect: this.reconnect,\n        reconnect_interval: this.reconnect_interval,\n        max_reconnects: this.max_reconnects\n      }, this.rest_options));\n    }\n    /**\n     * Calls a registered RPC method on server.\n     * @method\n     * @param {String} method - RPC method name\n     * @param {Object|Array} params - optional method parameters\n     * @param {Number} timeout - RPC reply timeout value\n     * @param {Object} ws_opts - options passed to ws\n     * @return {Promise}\n     */\n\n  }, {\n    key: \"call\",\n    value: function call(method, params, timeout, ws_opts) {\n      var _this2 = this;\n\n      if (!ws_opts && \"object\" === (0, _typeof2[\"default\"])(timeout)) {\n        ws_opts = timeout;\n        timeout = null;\n      }\n\n      return new Promise(function (resolve, reject) {\n        if (!_this2.ready) return reject(new Error(\"socket not ready\"));\n\n        var rpc_id = _this2.generate_request_id(method, params);\n\n        var message = {\n          jsonrpc: \"2.0\",\n          method: method,\n          params: params || null,\n          id: rpc_id\n        };\n\n        _this2.socket.send(JSON.stringify(message), ws_opts, function (error) {\n          if (error) return reject(error);\n          _this2.queue[rpc_id] = {\n            promise: [resolve, reject]\n          };\n\n          if (timeout) {\n            _this2.queue[rpc_id].timeout = setTimeout(function () {\n              delete _this2.queue[rpc_id];\n              reject(new Error(\"reply timeout\"));\n            }, timeout);\n          }\n        });\n      });\n    }\n    /**\n     * Logins with the other side of the connection.\n     * @method\n     * @param {Object} params - Login credentials object\n     * @return {Promise}\n     */\n\n  }, {\n    key: \"login\",\n    value: function () {\n      var _login = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(params) {\n        var resp;\n        return _regenerator[\"default\"].wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.call(\"rpc.login\", params);\n\n              case 2:\n                resp = _context.sent;\n\n                if (resp) {\n                  _context.next = 5;\n                  break;\n                }\n\n                throw new Error(\"authentication failed\");\n\n              case 5:\n                return _context.abrupt(\"return\", resp);\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function login(_x) {\n        return _login.apply(this, arguments);\n      }\n\n      return login;\n    }()\n    /**\n     * Fetches a list of client's methods registered on server.\n     * @method\n     * @return {Array}\n     */\n\n  }, {\n    key: \"listMethods\",\n    value: function () {\n      var _listMethods = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2() {\n        return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.call(\"__listMethods\");\n\n              case 2:\n                return _context2.abrupt(\"return\", _context2.sent);\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function listMethods() {\n        return _listMethods.apply(this, arguments);\n      }\n\n      return listMethods;\n    }()\n    /**\n     * Sends a JSON-RPC 2.0 notification to server.\n     * @method\n     * @param {String} method - RPC method name\n     * @param {Object} params - optional method parameters\n     * @return {Promise}\n     */\n\n  }, {\n    key: \"notify\",\n    value: function notify(method, params) {\n      var _this3 = this;\n\n      return new Promise(function (resolve, reject) {\n        if (!_this3.ready) return reject(new Error(\"socket not ready\"));\n        var message = {\n          jsonrpc: \"2.0\",\n          method: method,\n          params: params || null\n        };\n\n        _this3.socket.send(JSON.stringify(message), function (error) {\n          if (error) return reject(error);\n          resolve();\n        });\n      });\n    }\n    /**\n     * Subscribes for a defined event.\n     * @method\n     * @param {String|Array} event - event name\n     * @return {Undefined}\n     * @throws {Error}\n     */\n\n  }, {\n    key: \"subscribe\",\n    value: function () {\n      var _subscribe = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee3(event) {\n        var result;\n        return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (typeof event === \"string\") event = [event];\n                _context3.next = 3;\n                return this.call(\"rpc.on\", event);\n\n              case 3:\n                result = _context3.sent;\n\n                if (!(typeof event === \"string\" && result[event] !== \"ok\")) {\n                  _context3.next = 6;\n                  break;\n                }\n\n                throw new Error(\"Failed subscribing to an event '\" + event + \"' with: \" + result[event]);\n\n              case 6:\n                return _context3.abrupt(\"return\", result);\n\n              case 7:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function subscribe(_x2) {\n        return _subscribe.apply(this, arguments);\n      }\n\n      return subscribe;\n    }()\n    /**\n     * Unsubscribes from a defined event.\n     * @method\n     * @param {String|Array} event - event name\n     * @return {Undefined}\n     * @throws {Error}\n     */\n\n  }, {\n    key: \"unsubscribe\",\n    value: function () {\n      var _unsubscribe = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee4(event) {\n        var result;\n        return _regenerator[\"default\"].wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (typeof event === \"string\") event = [event];\n                _context4.next = 3;\n                return this.call(\"rpc.off\", event);\n\n              case 3:\n                result = _context4.sent;\n\n                if (!(typeof event === \"string\" && result[event] !== \"ok\")) {\n                  _context4.next = 6;\n                  break;\n                }\n\n                throw new Error(\"Failed unsubscribing from an event with: \" + result);\n\n              case 6:\n                return _context4.abrupt(\"return\", result);\n\n              case 7:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function unsubscribe(_x3) {\n        return _unsubscribe.apply(this, arguments);\n      }\n\n      return unsubscribe;\n    }()\n    /**\n     * Closes a WebSocket connection gracefully.\n     * @method\n     * @param {Number} code - socket close code\n     * @param {String} data - optional data to be sent before closing\n     * @return {Undefined}\n     */\n\n  }, {\n    key: \"close\",\n    value: function close(code, data) {\n      this.socket.close(code || 1000, data);\n    }\n    /**\n     * Connection/Message handler.\n     * @method\n     * @private\n     * @param {String} address - WebSocket API address\n     * @param {Object} options - ws options object\n     * @return {Undefined}\n     */\n\n  }, {\n    key: \"_connect\",\n    value: function _connect(address, options) {\n      var _this4 = this;\n\n      clearTimeout(this.reconnect_timer_id);\n      this.socket = this.webSocketFactory(address, options);\n      this.socket.addEventListener(\"open\", function () {\n        _this4.ready = true;\n\n        _this4.emit(\"open\");\n\n        _this4.current_reconnects = 0;\n      });\n      this.socket.addEventListener(\"message\", function (_ref) {\n        var message = _ref.data;\n        if (message instanceof ArrayBuffer) message = Buffer.from(message).toString();\n\n        try {\n          message = JSON.parse(message);\n        } catch (error) {\n          return;\n        } // check if any listeners are attached and forward event\n\n\n        if (message.notification && _this4.listeners(message.notification).length) {\n          if (!Object.keys(message.params).length) return _this4.emit(message.notification);\n          var args = [message.notification];\n          if (message.params.constructor === Object) args.push(message.params);else // using for-loop instead of unshift/spread because performance is better\n            for (var i = 0; i < message.params.length; i++) {\n              args.push(message.params[i]);\n            } // run as microtask so that pending queue messages are resolved first\n          // eslint-disable-next-line prefer-spread\n\n          return Promise.resolve().then(function () {\n            _this4.emit.apply(_this4, args);\n          });\n        }\n\n        if (!_this4.queue[message.id]) {\n          // general JSON RPC 2.0 events\n          if (message.method && message.params) {\n            // run as microtask so that pending queue messages are resolved first\n            return Promise.resolve().then(function () {\n              _this4.emit(message.method, message.params);\n            });\n          }\n\n          return;\n        } // reject early since server's response is invalid\n\n\n        if (\"error\" in message === \"result\" in message) _this4.queue[message.id].promise[1](new Error(\"Server response malformed. Response must include either \\\"result\\\"\" + \" or \\\"error\\\", but not both.\"));\n        if (_this4.queue[message.id].timeout) clearTimeout(_this4.queue[message.id].timeout);\n        if (message.error) _this4.queue[message.id].promise[1](message.error);else _this4.queue[message.id].promise[0](message.result);\n        delete _this4.queue[message.id];\n      });\n      this.socket.addEventListener(\"error\", function (error) {\n        return _this4.emit(\"error\", error);\n      });\n      this.socket.addEventListener(\"close\", function (_ref2) {\n        var code = _ref2.code,\n            reason = _ref2.reason;\n        if (_this4.ready) // Delay close event until internal state is updated\n          setTimeout(function () {\n            return _this4.emit(\"close\", code, reason);\n          }, 0);\n        _this4.ready = false;\n        _this4.socket = undefined;\n        if (code === 1000) return;\n        _this4.current_reconnects++;\n        if (_this4.reconnect && (_this4.max_reconnects > _this4.current_reconnects || _this4.max_reconnects === 0)) _this4.reconnect_timer_id = setTimeout(function () {\n          return _this4._connect(address, options);\n        }, _this4.reconnect_interval);\n      });\n    }\n  }]);\n  return CommonClient;\n}(_eventemitter.EventEmitter);\n\nexports[\"default\"] = CommonClient;","/**\n * WebSocket implements a browser-side WebSocket specification.\n * @module Client\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = _default;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _eventemitter = require(\"eventemitter3\");\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2[\"default\"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2[\"default\"])(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar WebSocketBrowserImpl = /*#__PURE__*/function (_EventEmitter) {\n  (0, _inherits2[\"default\"])(WebSocketBrowserImpl, _EventEmitter);\n\n  var _super = _createSuper(WebSocketBrowserImpl);\n\n  /** Instantiate a WebSocket class\n   * @constructor\n   * @param {String} address - url to a websocket server\n   * @param {(Object)} options - websocket options\n   * @param {(String|Array)} protocols - a list of protocols\n   * @return {WebSocketBrowserImpl} - returns a WebSocket instance\n   */\n  function WebSocketBrowserImpl(address, options, protocols) {\n    var _this;\n\n    (0, _classCallCheck2[\"default\"])(this, WebSocketBrowserImpl);\n    _this = _super.call(this);\n    _this.socket = new window.WebSocket(address, protocols);\n\n    _this.socket.onopen = function () {\n      return _this.emit(\"open\");\n    };\n\n    _this.socket.onmessage = function (event) {\n      return _this.emit(\"message\", event.data);\n    };\n\n    _this.socket.onerror = function (error) {\n      return _this.emit(\"error\", error);\n    };\n\n    _this.socket.onclose = function (event) {\n      _this.emit(\"close\", event.code, event.reason);\n    };\n\n    return _this;\n  }\n  /**\n   * Sends data through a websocket connection\n   * @method\n   * @param {(String|Object)} data - data to be sent via websocket\n   * @param {Object} optionsOrCallback - ws options\n   * @param {Function} callback - a callback called once the data is sent\n   * @return {Undefined}\n   */\n\n\n  (0, _createClass2[\"default\"])(WebSocketBrowserImpl, [{\n    key: \"send\",\n    value: function send(data, optionsOrCallback, callback) {\n      var cb = callback || optionsOrCallback;\n\n      try {\n        this.socket.send(data);\n        cb();\n      } catch (error) {\n        cb(error);\n      }\n    }\n    /**\n     * Closes an underlying socket\n     * @method\n     * @param {Number} code - status code explaining why the connection is being closed\n     * @param {String} reason - a description why the connection is closing\n     * @return {Undefined}\n     * @throws {Error}\n     */\n\n  }, {\n    key: \"close\",\n    value: function close(code, reason) {\n      this.socket.close(code, reason);\n    }\n  }, {\n    key: \"addEventListener\",\n    value: function addEventListener(type, listener, options) {\n      this.socket.addEventListener(type, listener, options);\n    }\n  }]);\n  return WebSocketBrowserImpl;\n}(_eventemitter.EventEmitter);\n/**\n * factory method for common WebSocket instance\n * @method\n * @param {String} address - url to a websocket server\n * @param {(Object)} options - websocket options\n * @return {Undefined}\n */\n\n\nfunction _default(address, options) {\n  return new WebSocketBrowserImpl(address, options);\n}","import RpcWebSocketCommonClient from 'rpc-websockets/dist/lib/client';\nimport RpcWebSocketBrowserFactory from 'rpc-websockets/dist/lib/client/websocket.browser';\nimport {\n  ICommonWebSocket,\n  IWSClientAdditionalOptions,\n  NodeWebSocketType,\n  NodeWebSocketTypeOptions,\n} from 'rpc-websockets/dist/lib/client/client.types';\n\nimport createRpc from './rpc-websocket-factory';\n\ninterface IHasReadyState {\n  readyState: WebSocket['readyState'];\n}\n\nexport default class RpcWebSocketClient extends RpcWebSocketCommonClient {\n  private underlyingSocket: IHasReadyState | undefined;\n  constructor(\n    address?: string,\n    options?: IWSClientAdditionalOptions & NodeWebSocketTypeOptions,\n    generate_request_id?: (\n      method: string,\n      params: object | Array<any>,\n    ) => number,\n  ) {\n    const webSocketFactory = (url: string) => {\n      const rpc = createRpc(url, {\n        autoconnect: true,\n        max_reconnects: 5,\n        reconnect: true,\n        reconnect_interval: 1000,\n        ...options,\n      });\n      if ('socket' in rpc) {\n        this.underlyingSocket = (\n          rpc as ReturnType<typeof RpcWebSocketBrowserFactory>\n        ).socket;\n      } else {\n        this.underlyingSocket = rpc as NodeWebSocketType;\n      }\n      return rpc as ICommonWebSocket;\n    };\n    super(webSocketFactory, address, options, generate_request_id);\n  }\n  call(\n    ...args: Parameters<RpcWebSocketCommonClient['call']>\n  ): ReturnType<RpcWebSocketCommonClient['call']> {\n    const readyState = this.underlyingSocket?.readyState;\n    if (readyState === 1 /* WebSocket.OPEN */) {\n      return super.call(...args);\n    }\n    return Promise.reject(\n      new Error(\n        'Tried to call a JSON-RPC method `' +\n          args[0] +\n          '` but the socket was not `CONNECTING` or `OPEN` (`readyState` was ' +\n          readyState +\n          ')',\n      ),\n    );\n  }\n  notify(\n    ...args: Parameters<RpcWebSocketCommonClient['notify']>\n  ): ReturnType<RpcWebSocketCommonClient['notify']> {\n    const readyState = this.underlyingSocket?.readyState;\n    if (readyState === 1 /* WebSocket.OPEN */) {\n      return super.notify(...args);\n    }\n    return Promise.reject(\n      new Error(\n        'Tried to send a JSON-RPC notification `' +\n          args[0] +\n          '` but the socket was not `CONNECTING` or `OPEN` (`readyState` was ' +\n          readyState +\n          ')',\n      ),\n    );\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nexport interface IAccountStateData {\n  readonly typeIndex: number;\n}\n\n/**\n * @internal\n */\nexport type AccountType<TInputData extends IAccountStateData> = {\n  /** The account type index (from solana upstream program) */\n  index: number;\n  /** The BufferLayout to use to build data */\n  layout: BufferLayout.Layout<TInputData>;\n};\n\n/**\n * Decode account data buffer using an AccountType\n * @internal\n */\nexport function decodeData<TAccountStateData extends IAccountStateData>(\n  type: AccountType<TAccountStateData>,\n  data: Uint8Array,\n): TAccountStateData {\n  let decoded: TAccountStateData;\n  try {\n    decoded = type.layout.decode(data);\n  } catch (err) {\n    throw new Error('invalid instruction; ' + err);\n  }\n\n  if (decoded.typeIndex !== type.index) {\n    throw new Error(\n      `invalid account data; account type mismatch ${decoded.typeIndex} != ${type.index}`,\n    );\n  }\n\n  return decoded;\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport assert from '../../utils/assert';\nimport * as Layout from '../../layout';\nimport {PublicKey} from '../../publickey';\nimport {u64} from '../../utils/bigint';\nimport {decodeData} from '../../account-data';\n\nexport type AddressLookupTableState = {\n  deactivationSlot: bigint;\n  lastExtendedSlot: number;\n  lastExtendedSlotStartIndex: number;\n  authority?: PublicKey;\n  addresses: Array<PublicKey>;\n};\n\nexport type AddressLookupTableAccountArgs = {\n  key: PublicKey;\n  state: AddressLookupTableState;\n};\n\n/// The serialized size of lookup table metadata\nconst LOOKUP_TABLE_META_SIZE = 56;\n\nexport class AddressLookupTableAccount {\n  key: PublicKey;\n  state: AddressLookupTableState;\n\n  constructor(args: AddressLookupTableAccountArgs) {\n    this.key = args.key;\n    this.state = args.state;\n  }\n\n  isActive(): boolean {\n    const U64_MAX = BigInt('0xffffffffffffffff');\n    return this.state.deactivationSlot === U64_MAX;\n  }\n\n  static deserialize(accountData: Uint8Array): AddressLookupTableState {\n    const meta = decodeData(LookupTableMetaLayout, accountData);\n\n    const serializedAddressesLen = accountData.length - LOOKUP_TABLE_META_SIZE;\n    assert(serializedAddressesLen >= 0, 'lookup table is invalid');\n    assert(serializedAddressesLen % 32 === 0, 'lookup table is invalid');\n\n    const numSerializedAddresses = serializedAddressesLen / 32;\n    const {addresses} = BufferLayout.struct<{addresses: Array<Uint8Array>}>([\n      BufferLayout.seq(Layout.publicKey(), numSerializedAddresses, 'addresses'),\n    ]).decode(accountData.slice(LOOKUP_TABLE_META_SIZE));\n\n    return {\n      deactivationSlot: meta.deactivationSlot,\n      lastExtendedSlot: meta.lastExtendedSlot,\n      lastExtendedSlotStartIndex: meta.lastExtendedStartIndex,\n      authority:\n        meta.authority.length !== 0\n          ? new PublicKey(meta.authority[0])\n          : undefined,\n      addresses: addresses.map(address => new PublicKey(address)),\n    };\n  }\n}\n\nconst LookupTableMetaLayout = {\n  index: 1,\n  layout: BufferLayout.struct<{\n    typeIndex: number;\n    deactivationSlot: bigint;\n    lastExtendedSlot: number;\n    lastExtendedStartIndex: number;\n    authority: Array<Uint8Array>;\n  }>([\n    BufferLayout.u32('typeIndex'),\n    u64('deactivationSlot'),\n    BufferLayout.nu64('lastExtendedSlot'),\n    BufferLayout.u8('lastExtendedStartIndex'),\n    BufferLayout.u8(), // option\n    BufferLayout.seq(\n      Layout.publicKey(),\n      BufferLayout.offset(BufferLayout.u8(), -1),\n      'authority',\n    ),\n  ]),\n};\n","const URL_RE = /^[^:]+:\\/\\/([^:[]+|\\[[^\\]]+\\])(:\\d+)?(.*)/i;\n\nexport function makeWebsocketUrl(endpoint: string) {\n  const matches = endpoint.match(URL_RE);\n  if (matches == null) {\n    throw TypeError(`Failed to validate endpoint URL \\`${endpoint}\\``);\n  }\n  const [\n    _, // eslint-disable-line @typescript-eslint/no-unused-vars\n    hostish,\n    portWithColon,\n    rest,\n  ] = matches;\n  const protocol = endpoint.startsWith('https:') ? 'wss:' : 'ws:';\n  const startPort =\n    portWithColon == null ? null : parseInt(portWithColon.slice(1), 10);\n  const websocketPort =\n    // Only shift the port by +1 as a convention for ws(s) only if given endpoint\n    // is explictly specifying the endpoint port (HTTP-based RPC), assuming\n    // we're directly trying to connect to solana-validator's ws listening port.\n    // When the endpoint omits the port, we're connecting to the protocol\n    // default ports: http(80) or https(443) and it's assumed we're behind a reverse\n    // proxy which manages WebSocket upgrade and backend port redirection.\n    startPort == null ? '' : `:${startPort + 1}`;\n  return `${protocol}//${hostish}${websocketPort}${rest}`;\n}\n","import HttpKeepAliveAgent, {\n  HttpsAgent as HttpsKeepAliveAgent,\n} from 'agentkeepalive';\nimport bs58 from 'bs58';\nimport {Buffer} from 'buffer';\n// @ts-ignore\nimport fastStableStringify from 'fast-stable-stringify';\nimport type {Agent as NodeHttpAgent} from 'http';\nimport {Agent as NodeHttpsAgent} from 'https';\nimport {\n  type as pick,\n  number,\n  string,\n  array,\n  boolean,\n  literal,\n  record,\n  union,\n  optional,\n  nullable,\n  coerce,\n  instance,\n  create,\n  tuple,\n  unknown,\n  any,\n} from 'superstruct';\nimport type {Struct} from 'superstruct';\nimport RpcClient from 'jayson/lib/client/browser';\nimport {JSONRPCError} from 'jayson';\n\nimport {EpochSchedule} from './epoch-schedule';\nimport {SendTransactionError, SolanaJSONRPCError} from './errors';\nimport fetchImpl, {Response} from './fetch-impl';\nimport {DurableNonce, NonceAccount} from './nonce-account';\nimport {PublicKey} from './publickey';\nimport {Signer} from './keypair';\nimport RpcWebSocketClient from './rpc-websocket';\nimport {MS_PER_SLOT} from './timing';\nimport {\n  Transaction,\n  TransactionStatus,\n  TransactionVersion,\n  VersionedTransaction,\n} from './transaction';\nimport {Message, MessageHeader, MessageV0, VersionedMessage} from './message';\nimport {AddressLookupTableAccount} from './programs/address-lookup-table/state';\nimport assert from './utils/assert';\nimport {sleep} from './utils/sleep';\nimport {toBuffer} from './utils/to-buffer';\nimport {\n  TransactionExpiredBlockheightExceededError,\n  TransactionExpiredNonceInvalidError,\n  TransactionExpiredTimeoutError,\n} from './transaction/expiry-custom-errors';\nimport {makeWebsocketUrl} from './utils/makeWebsocketUrl';\nimport type {Blockhash} from './blockhash';\nimport type {FeeCalculator} from './fee-calculator';\nimport type {TransactionSignature} from './transaction';\nimport type {CompiledInstruction} from './message';\n\nconst PublicKeyFromString = coerce(\n  instance(PublicKey),\n  string(),\n  value => new PublicKey(value),\n);\n\nconst RawAccountDataResult = tuple([string(), literal('base64')]);\n\nconst BufferFromRawAccountData = coerce(\n  instance(Buffer),\n  RawAccountDataResult,\n  value => Buffer.from(value[0], 'base64'),\n);\n\n/**\n * Attempt to use a recent blockhash for up to 30 seconds\n * @internal\n */\nexport const BLOCKHASH_CACHE_TIMEOUT_MS = 30 * 1000;\n\n/**\n * HACK.\n * Copied from rpc-websockets/dist/lib/client.\n * Otherwise, `yarn build` fails with:\n * https://gist.github.com/steveluscher/c057eca81d479ef705cdb53162f9971d\n */\ninterface IWSRequestParams {\n  [x: string]: any;\n  [x: number]: any;\n}\n\ntype ClientSubscriptionId = number;\n/** @internal */ type ServerSubscriptionId = number;\n/** @internal */ type SubscriptionConfigHash = string;\n/** @internal */ type SubscriptionDisposeFn = () => Promise<void>;\n/** @internal */ type SubscriptionStateChangeCallback = (\n  nextState: StatefulSubscription['state'],\n) => void;\n/** @internal */ type SubscriptionStateChangeDisposeFn = () => void;\n/**\n * @internal\n * Every subscription contains the args used to open the subscription with\n * the server, and a list of callers interested in notifications.\n */\ntype BaseSubscription<TMethod = SubscriptionConfig['method']> = Readonly<{\n  args: IWSRequestParams;\n  callbacks: Set<Extract<SubscriptionConfig, {method: TMethod}>['callback']>;\n}>;\n/**\n * @internal\n * A subscription may be in various states of connectedness. Only when it is\n * fully connected will it have a server subscription id associated with it.\n * This id can be returned to the server to unsubscribe the client entirely.\n */\ntype StatefulSubscription = Readonly<\n  // New subscriptions that have not yet been\n  // sent to the server start in this state.\n  | {\n      state: 'pending';\n    }\n  // These subscriptions have been sent to the server\n  // and are waiting for the server to acknowledge them.\n  | {\n      state: 'subscribing';\n    }\n  // These subscriptions have been acknowledged by the\n  // server and have been assigned server subscription ids.\n  | {\n      serverSubscriptionId: ServerSubscriptionId;\n      state: 'subscribed';\n    }\n  // These subscriptions are intended to be torn down and\n  // are waiting on an acknowledgement from the server.\n  | {\n      serverSubscriptionId: ServerSubscriptionId;\n      state: 'unsubscribing';\n    }\n  // The request to tear down these subscriptions has been\n  // acknowledged by the server. The `serverSubscriptionId`\n  // is the id of the now-dead subscription.\n  | {\n      serverSubscriptionId: ServerSubscriptionId;\n      state: 'unsubscribed';\n    }\n>;\n/**\n * A type that encapsulates a subscription's RPC method\n * names and notification (callback) signature.\n */\ntype SubscriptionConfig = Readonly<\n  | {\n      callback: AccountChangeCallback;\n      method: 'accountSubscribe';\n      unsubscribeMethod: 'accountUnsubscribe';\n    }\n  | {\n      callback: LogsCallback;\n      method: 'logsSubscribe';\n      unsubscribeMethod: 'logsUnsubscribe';\n    }\n  | {\n      callback: ProgramAccountChangeCallback;\n      method: 'programSubscribe';\n      unsubscribeMethod: 'programUnsubscribe';\n    }\n  | {\n      callback: RootChangeCallback;\n      method: 'rootSubscribe';\n      unsubscribeMethod: 'rootUnsubscribe';\n    }\n  | {\n      callback: SignatureSubscriptionCallback;\n      method: 'signatureSubscribe';\n      unsubscribeMethod: 'signatureUnsubscribe';\n    }\n  | {\n      callback: SlotChangeCallback;\n      method: 'slotSubscribe';\n      unsubscribeMethod: 'slotUnsubscribe';\n    }\n  | {\n      callback: SlotUpdateCallback;\n      method: 'slotsUpdatesSubscribe';\n      unsubscribeMethod: 'slotsUpdatesUnsubscribe';\n    }\n>;\n/**\n * @internal\n * Utility type that keeps tagged unions intact while omitting properties.\n */\ntype DistributiveOmit<T, K extends PropertyKey> = T extends unknown\n  ? Omit<T, K>\n  : never;\n/**\n * @internal\n * This type represents a single subscribable 'topic.' It's made up of:\n *\n * - The args used to open the subscription with the server,\n * - The state of the subscription, in terms of its connectedness, and\n * - The set of callbacks to call when the server publishes notifications\n *\n * This record gets indexed by `SubscriptionConfigHash` and is used to\n * set up subscriptions, fan out notifications, and track subscription state.\n */\ntype Subscription = BaseSubscription &\n  StatefulSubscription &\n  DistributiveOmit<SubscriptionConfig, 'callback'>;\n\ntype RpcRequest = (methodName: string, args: Array<any>) => Promise<any>;\n\ntype RpcBatchRequest = (requests: RpcParams[]) => Promise<any[]>;\n\n/**\n * @internal\n */\nexport type RpcParams = {\n  methodName: string;\n  args: Array<any>;\n};\n\nexport type TokenAccountsFilter =\n  | {\n      mint: PublicKey;\n    }\n  | {\n      programId: PublicKey;\n    };\n\n/**\n * Extra contextual information for RPC responses\n */\nexport type Context = {\n  slot: number;\n};\n\n/**\n * Options for sending transactions\n */\nexport type SendOptions = {\n  /** disable transaction verification step */\n  skipPreflight?: boolean;\n  /** preflight commitment level */\n  preflightCommitment?: Commitment;\n  /** Maximum number of times for the RPC node to retry sending the transaction to the leader. */\n  maxRetries?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Options for confirming transactions\n */\nexport type ConfirmOptions = {\n  /** disable transaction verification step */\n  skipPreflight?: boolean;\n  /** desired commitment level */\n  commitment?: Commitment;\n  /** preflight commitment level */\n  preflightCommitment?: Commitment;\n  /** Maximum number of times for the RPC node to retry sending the transaction to the leader. */\n  maxRetries?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Options for getConfirmedSignaturesForAddress2\n */\nexport type ConfirmedSignaturesForAddress2Options = {\n  /**\n   * Start searching backwards from this transaction signature.\n   * @remark If not provided the search starts from the highest max confirmed block.\n   */\n  before?: TransactionSignature;\n  /** Search until this transaction signature is reached, if found before `limit`. */\n  until?: TransactionSignature;\n  /** Maximum transaction signatures to return (between 1 and 1,000, default: 1,000). */\n  limit?: number;\n};\n\n/**\n * Options for getSignaturesForAddress\n */\nexport type SignaturesForAddressOptions = {\n  /**\n   * Start searching backwards from this transaction signature.\n   * @remark If not provided the search starts from the highest max confirmed block.\n   */\n  before?: TransactionSignature;\n  /** Search until this transaction signature is reached, if found before `limit`. */\n  until?: TransactionSignature;\n  /** Maximum transaction signatures to return (between 1 and 1,000, default: 1,000). */\n  limit?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * RPC Response with extra contextual information\n */\nexport type RpcResponseAndContext<T> = {\n  /** response context */\n  context: Context;\n  /** response value */\n  value: T;\n};\n\nexport type BlockhashWithExpiryBlockHeight = Readonly<{\n  blockhash: Blockhash;\n  lastValidBlockHeight: number;\n}>;\n\n/**\n * A strategy for confirming transactions that uses the last valid\n * block height for a given blockhash to check for transaction expiration.\n */\nexport type BlockheightBasedTransactionConfirmationStrategy =\n  BaseTransactionConfirmationStrategy & BlockhashWithExpiryBlockHeight;\n\n/**\n * A strategy for confirming durable nonce transactions.\n */\nexport type DurableNonceTransactionConfirmationStrategy =\n  BaseTransactionConfirmationStrategy & {\n    /**\n     * The lowest slot at which to fetch the nonce value from the\n     * nonce account. This should be no lower than the slot at\n     * which the last-known value of the nonce was fetched.\n     */\n    minContextSlot: number;\n    /**\n     * The account where the current value of the nonce is stored.\n     */\n    nonceAccountPubkey: PublicKey;\n    /**\n     * The nonce value that was used to sign the transaction\n     * for which confirmation is being sought.\n     */\n    nonceValue: DurableNonce;\n  };\n\n/**\n * Properties shared by all transaction confirmation strategies\n */\nexport type BaseTransactionConfirmationStrategy = Readonly<{\n  /** A signal that, when aborted, cancels any outstanding transaction confirmation operations */\n  abortSignal?: AbortSignal;\n  signature: TransactionSignature;\n}>;\n\n/**\n * This type represents all transaction confirmation strategies\n */\nexport type TransactionConfirmationStrategy =\n  | BlockheightBasedTransactionConfirmationStrategy\n  | DurableNonceTransactionConfirmationStrategy;\n\n/* @internal */\nfunction assertEndpointUrl(putativeUrl: string) {\n  if (/^https?:/.test(putativeUrl) === false) {\n    throw new TypeError('Endpoint URL must start with `http:` or `https:`.');\n  }\n  return putativeUrl;\n}\n\n/** @internal */\nfunction extractCommitmentFromConfig<TConfig>(\n  commitmentOrConfig?: Commitment | ({commitment?: Commitment} & TConfig),\n) {\n  let commitment: Commitment | undefined;\n  let config: Omit<TConfig, 'commitment'> | undefined;\n  if (typeof commitmentOrConfig === 'string') {\n    commitment = commitmentOrConfig;\n  } else if (commitmentOrConfig) {\n    const {commitment: specifiedCommitment, ...specifiedConfig} =\n      commitmentOrConfig;\n    commitment = specifiedCommitment;\n    config = specifiedConfig;\n  }\n  return {commitment, config};\n}\n\n/**\n * @internal\n */\nfunction createRpcResult<T, U>(result: Struct<T, U>) {\n  return union([\n    pick({\n      jsonrpc: literal('2.0'),\n      id: string(),\n      result,\n    }),\n    pick({\n      jsonrpc: literal('2.0'),\n      id: string(),\n      error: pick({\n        code: unknown(),\n        message: string(),\n        data: optional(any()),\n      }),\n    }),\n  ]);\n}\n\nconst UnknownRpcResult = createRpcResult(unknown());\n\n/**\n * @internal\n */\nfunction jsonRpcResult<T, U>(schema: Struct<T, U>) {\n  return coerce(createRpcResult(schema), UnknownRpcResult, value => {\n    if ('error' in value) {\n      return value;\n    } else {\n      return {\n        ...value,\n        result: create(value.result, schema),\n      };\n    }\n  });\n}\n\n/**\n * @internal\n */\nfunction jsonRpcResultAndContext<T, U>(value: Struct<T, U>) {\n  return jsonRpcResult(\n    pick({\n      context: pick({\n        slot: number(),\n      }),\n      value,\n    }),\n  );\n}\n\n/**\n * @internal\n */\nfunction notificationResultAndContext<T, U>(value: Struct<T, U>) {\n  return pick({\n    context: pick({\n      slot: number(),\n    }),\n    value,\n  });\n}\n\n/**\n * @internal\n */\nfunction versionedMessageFromResponse(\n  version: TransactionVersion | undefined,\n  response: MessageResponse,\n): VersionedMessage {\n  if (version === 0) {\n    return new MessageV0({\n      header: response.header,\n      staticAccountKeys: response.accountKeys.map(\n        accountKey => new PublicKey(accountKey),\n      ),\n      recentBlockhash: response.recentBlockhash,\n      compiledInstructions: response.instructions.map(ix => ({\n        programIdIndex: ix.programIdIndex,\n        accountKeyIndexes: ix.accounts,\n        data: bs58.decode(ix.data),\n      })),\n      addressTableLookups: response.addressTableLookups!,\n    });\n  } else {\n    return new Message(response);\n  }\n}\n\n/**\n * The level of commitment desired when querying state\n * <pre>\n *   'processed': Query the most recent block which has reached 1 confirmation by the connected node\n *   'confirmed': Query the most recent block which has reached 1 confirmation by the cluster\n *   'finalized': Query the most recent block which has been finalized by the cluster\n * </pre>\n */\nexport type Commitment =\n  | 'processed'\n  | 'confirmed'\n  | 'finalized'\n  | 'recent' // Deprecated as of v1.5.5\n  | 'single' // Deprecated as of v1.5.5\n  | 'singleGossip' // Deprecated as of v1.5.5\n  | 'root' // Deprecated as of v1.5.5\n  | 'max'; // Deprecated as of v1.5.5\n\n/**\n * A subset of Commitment levels, which are at least optimistically confirmed\n * <pre>\n *   'confirmed': Query the most recent block which has reached 1 confirmation by the cluster\n *   'finalized': Query the most recent block which has been finalized by the cluster\n * </pre>\n */\nexport type Finality = 'confirmed' | 'finalized';\n\n/**\n * Filter for largest accounts query\n * <pre>\n *   'circulating':    Return the largest accounts that are part of the circulating supply\n *   'nonCirculating': Return the largest accounts that are not part of the circulating supply\n * </pre>\n */\nexport type LargestAccountsFilter = 'circulating' | 'nonCirculating';\n\n/**\n * Configuration object for changing `getAccountInfo` query behavior\n */\nexport type GetAccountInfoConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n  /** Optional data slice to limit the returned account data */\n  dataSlice?: DataSlice;\n};\n\n/**\n * Configuration object for changing `getBalance` query behavior\n */\nexport type GetBalanceConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getBlock` query behavior\n */\nexport type GetBlockConfig = {\n  /** The level of finality desired */\n  commitment?: Finality;\n  /**\n   * Whether to populate the rewards array. If parameter not provided, the default includes rewards.\n   */\n  rewards?: boolean;\n  /**\n   * Level of transaction detail to return, either \"full\", \"accounts\", \"signatures\", or \"none\". If\n   * parameter not provided, the default detail level is \"full\". If \"accounts\" are requested,\n   * transaction details only include signatures and an annotated list of accounts in each\n   * transaction. Transaction metadata is limited to only: fee, err, pre_balances, post_balances,\n   * pre_token_balances, and post_token_balances.\n   */\n  transactionDetails?: 'accounts' | 'full' | 'none' | 'signatures';\n};\n\n/**\n * Configuration object for changing `getBlock` query behavior\n */\nexport type GetVersionedBlockConfig = {\n  /** The level of finality desired */\n  commitment?: Finality;\n  /** The max transaction version to return in responses. If the requested transaction is a higher version, an error will be returned */\n  maxSupportedTransactionVersion?: number;\n  /**\n   * Whether to populate the rewards array. If parameter not provided, the default includes rewards.\n   */\n  rewards?: boolean;\n  /**\n   * Level of transaction detail to return, either \"full\", \"accounts\", \"signatures\", or \"none\". If\n   * parameter not provided, the default detail level is \"full\". If \"accounts\" are requested,\n   * transaction details only include signatures and an annotated list of accounts in each\n   * transaction. Transaction metadata is limited to only: fee, err, pre_balances, post_balances,\n   * pre_token_balances, and post_token_balances.\n   */\n  transactionDetails?: 'accounts' | 'full' | 'none' | 'signatures';\n};\n\n/**\n * Configuration object for changing `getStakeMinimumDelegation` query behavior\n */\nexport type GetStakeMinimumDelegationConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n};\n\n/**\n * Configuration object for changing `getBlockHeight` query behavior\n */\nexport type GetBlockHeightConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getEpochInfo` query behavior\n */\nexport type GetEpochInfoConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getInflationReward` query behavior\n */\nexport type GetInflationRewardConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** An epoch for which the reward occurs. If omitted, the previous epoch will be used */\n  epoch?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getLatestBlockhash` query behavior\n */\nexport type GetLatestBlockhashConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getSlot` query behavior\n */\nexport type GetSlotConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getSlotLeader` query behavior\n */\nexport type GetSlotLeaderConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getTransaction` query behavior\n */\nexport type GetTransactionConfig = {\n  /** The level of finality desired */\n  commitment?: Finality;\n};\n\n/**\n * Configuration object for changing `getTransaction` query behavior\n */\nexport type GetVersionedTransactionConfig = {\n  /** The level of finality desired */\n  commitment?: Finality;\n  /** The max transaction version to return in responses. If the requested transaction is a higher version, an error will be returned */\n  maxSupportedTransactionVersion?: number;\n};\n\n/**\n * Configuration object for changing `getLargestAccounts` query behavior\n */\nexport type GetLargestAccountsConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** Filter largest accounts by whether they are part of the circulating supply */\n  filter?: LargestAccountsFilter;\n};\n\n/**\n * Configuration object for changing `getSupply` request behavior\n */\nexport type GetSupplyConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** Exclude non circulating accounts list from response */\n  excludeNonCirculatingAccountsList?: boolean;\n};\n\n/**\n * Configuration object for changing query behavior\n */\nexport type SignatureStatusConfig = {\n  /** enable searching status history, not needed for recent transactions */\n  searchTransactionHistory: boolean;\n};\n\n/**\n * Information describing a cluster node\n */\nexport type ContactInfo = {\n  /** Identity public key of the node */\n  pubkey: string;\n  /** Gossip network address for the node */\n  gossip: string | null;\n  /** TPU network address for the node (null if not available) */\n  tpu: string | null;\n  /** JSON RPC network address for the node (null if not available) */\n  rpc: string | null;\n  /** Software version of the node (null if not available) */\n  version: string | null;\n};\n\n/**\n * Information describing a vote account\n */\nexport type VoteAccountInfo = {\n  /** Public key of the vote account */\n  votePubkey: string;\n  /** Identity public key of the node voting with this account */\n  nodePubkey: string;\n  /** The stake, in lamports, delegated to this vote account and activated */\n  activatedStake: number;\n  /** Whether the vote account is staked for this epoch */\n  epochVoteAccount: boolean;\n  /** Recent epoch voting credit history for this voter */\n  epochCredits: Array<[number, number, number]>;\n  /** A percentage (0-100) of rewards payout owed to the voter */\n  commission: number;\n  /** Most recent slot voted on by this vote account */\n  lastVote: number;\n};\n\n/**\n * A collection of cluster vote accounts\n */\nexport type VoteAccountStatus = {\n  /** Active vote accounts */\n  current: Array<VoteAccountInfo>;\n  /** Inactive vote accounts */\n  delinquent: Array<VoteAccountInfo>;\n};\n\n/**\n * Network Inflation\n * (see https://docs.solana.com/implemented-proposals/ed_overview)\n */\nexport type InflationGovernor = {\n  foundation: number;\n  foundationTerm: number;\n  initial: number;\n  taper: number;\n  terminal: number;\n};\n\nconst GetInflationGovernorResult = pick({\n  foundation: number(),\n  foundationTerm: number(),\n  initial: number(),\n  taper: number(),\n  terminal: number(),\n});\n\n/**\n * The inflation reward for an epoch\n */\nexport type InflationReward = {\n  /** epoch for which the reward occurs */\n  epoch: number;\n  /** the slot in which the rewards are effective */\n  effectiveSlot: number;\n  /** reward amount in lamports */\n  amount: number;\n  /** post balance of the account in lamports */\n  postBalance: number;\n  /** vote account commission when the reward was credited */\n  commission?: number | null;\n};\n\n/**\n * Expected JSON RPC response for the \"getInflationReward\" message\n */\nconst GetInflationRewardResult = jsonRpcResult(\n  array(\n    nullable(\n      pick({\n        epoch: number(),\n        effectiveSlot: number(),\n        amount: number(),\n        postBalance: number(),\n        commission: optional(nullable(number())),\n      }),\n    ),\n  ),\n);\n\nexport type RecentPrioritizationFees = {\n  /** slot in which the fee was observed */\n  slot: number;\n  /** the per-compute-unit fee paid by at least one successfully landed transaction, specified in increments of 0.000001 lamports*/\n  prioritizationFee: number;\n};\n\n/**\n * Configuration object for changing `getRecentPrioritizationFees` query behavior\n */\nexport type GetRecentPrioritizationFeesConfig = {\n  /**\n   * If this parameter is provided, the response will reflect a fee to land a transaction locking\n   * all of the provided accounts as writable.\n   */\n  lockedWritableAccounts?: PublicKey[];\n};\n\n/**\n * Expected JSON RPC response for the \"getRecentPrioritizationFees\" message\n */\nconst GetRecentPrioritizationFeesResult = array(\n  pick({\n    slot: number(),\n    prioritizationFee: number(),\n  }),\n);\n\nexport type InflationRate = {\n  /** total inflation */\n  total: number;\n  /** inflation allocated to validators */\n  validator: number;\n  /** inflation allocated to the foundation */\n  foundation: number;\n  /** epoch for which these values are valid */\n  epoch: number;\n};\n\n/**\n * Expected JSON RPC response for the \"getInflationRate\" message\n */\nconst GetInflationRateResult = pick({\n  total: number(),\n  validator: number(),\n  foundation: number(),\n  epoch: number(),\n});\n\n/**\n * Information about the current epoch\n */\nexport type EpochInfo = {\n  epoch: number;\n  slotIndex: number;\n  slotsInEpoch: number;\n  absoluteSlot: number;\n  blockHeight?: number;\n  transactionCount?: number;\n};\n\nconst GetEpochInfoResult = pick({\n  epoch: number(),\n  slotIndex: number(),\n  slotsInEpoch: number(),\n  absoluteSlot: number(),\n  blockHeight: optional(number()),\n  transactionCount: optional(number()),\n});\n\nconst GetEpochScheduleResult = pick({\n  slotsPerEpoch: number(),\n  leaderScheduleSlotOffset: number(),\n  warmup: boolean(),\n  firstNormalEpoch: number(),\n  firstNormalSlot: number(),\n});\n\n/**\n * Leader schedule\n * (see https://docs.solana.com/terminology#leader-schedule)\n */\nexport type LeaderSchedule = {\n  [address: string]: number[];\n};\n\nconst GetLeaderScheduleResult = record(string(), array(number()));\n\n/**\n * Transaction error or null\n */\nconst TransactionErrorResult = nullable(union([pick({}), string()]));\n\n/**\n * Signature status for a transaction\n */\nconst SignatureStatusResult = pick({\n  err: TransactionErrorResult,\n});\n\n/**\n * Transaction signature received notification\n */\nconst SignatureReceivedResult = literal('receivedSignature');\n\n/**\n * Version info for a node\n */\nexport type Version = {\n  /** Version of solana-core */\n  'solana-core': string;\n  'feature-set'?: number;\n};\n\nconst VersionResult = pick({\n  'solana-core': string(),\n  'feature-set': optional(number()),\n});\n\nexport type SimulatedTransactionAccountInfo = {\n  /** `true` if this account's data contains a loaded program */\n  executable: boolean;\n  /** Identifier of the program that owns the account */\n  owner: string;\n  /** Number of lamports assigned to the account */\n  lamports: number;\n  /** Optional data assigned to the account */\n  data: string[];\n  /** Optional rent epoch info for account */\n  rentEpoch?: number;\n};\n\nexport type TransactionReturnDataEncoding = 'base64';\n\nexport type TransactionReturnData = {\n  programId: string;\n  data: [string, TransactionReturnDataEncoding];\n};\n\nexport type SimulateTransactionConfig = {\n  /** Optional parameter used to enable signature verification before simulation */\n  sigVerify?: boolean;\n  /** Optional parameter used to replace the simulated transaction's recent blockhash with the latest blockhash */\n  replaceRecentBlockhash?: boolean;\n  /** Optional parameter used to set the commitment level when selecting the latest block */\n  commitment?: Commitment;\n  /** Optional parameter used to specify a list of account addresses to return post simulation state for */\n  accounts?: {\n    encoding: 'base64';\n    addresses: string[];\n  };\n  /** Optional parameter used to specify the minimum block slot that can be used for simulation */\n  minContextSlot?: number;\n};\n\nexport type SimulatedTransactionResponse = {\n  err: TransactionError | string | null;\n  logs: Array<string> | null;\n  accounts?: (SimulatedTransactionAccountInfo | null)[] | null;\n  unitsConsumed?: number;\n  returnData?: TransactionReturnData | null;\n};\nconst SimulatedTransactionResponseStruct = jsonRpcResultAndContext(\n  pick({\n    err: nullable(union([pick({}), string()])),\n    logs: nullable(array(string())),\n    accounts: optional(\n      nullable(\n        array(\n          nullable(\n            pick({\n              executable: boolean(),\n              owner: string(),\n              lamports: number(),\n              data: array(string()),\n              rentEpoch: optional(number()),\n            }),\n          ),\n        ),\n      ),\n    ),\n    unitsConsumed: optional(number()),\n    returnData: optional(\n      nullable(\n        pick({\n          programId: string(),\n          data: tuple([string(), literal('base64')]),\n        }),\n      ),\n    ),\n  }),\n);\n\nexport type ParsedInnerInstruction = {\n  index: number;\n  instructions: (ParsedInstruction | PartiallyDecodedInstruction)[];\n};\n\nexport type TokenBalance = {\n  accountIndex: number;\n  mint: string;\n  owner?: string;\n  uiTokenAmount: TokenAmount;\n};\n\n/**\n * Metadata for a parsed confirmed transaction on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link ParsedTransactionMeta} instead.\n */\nexport type ParsedConfirmedTransactionMeta = ParsedTransactionMeta;\n\n/**\n * Collection of addresses loaded by a transaction using address table lookups\n */\nexport type LoadedAddresses = {\n  writable: Array<PublicKey>;\n  readonly: Array<PublicKey>;\n};\n\n/**\n * Metadata for a parsed transaction on the ledger\n */\nexport type ParsedTransactionMeta = {\n  /** The fee charged for processing the transaction */\n  fee: number;\n  /** An array of cross program invoked parsed instructions */\n  innerInstructions?: ParsedInnerInstruction[] | null;\n  /** The balances of the transaction accounts before processing */\n  preBalances: Array<number>;\n  /** The balances of the transaction accounts after processing */\n  postBalances: Array<number>;\n  /** An array of program log messages emitted during a transaction */\n  logMessages?: Array<string> | null;\n  /** The token balances of the transaction accounts before processing */\n  preTokenBalances?: Array<TokenBalance> | null;\n  /** The token balances of the transaction accounts after processing */\n  postTokenBalances?: Array<TokenBalance> | null;\n  /** The error result of transaction processing */\n  err: TransactionError | null;\n  /** The collection of addresses loaded using address lookup tables */\n  loadedAddresses?: LoadedAddresses;\n  /** The compute units consumed after processing the transaction */\n  computeUnitsConsumed?: number;\n};\n\nexport type CompiledInnerInstruction = {\n  index: number;\n  instructions: CompiledInstruction[];\n};\n\n/**\n * Metadata for a confirmed transaction on the ledger\n */\nexport type ConfirmedTransactionMeta = {\n  /** The fee charged for processing the transaction */\n  fee: number;\n  /** An array of cross program invoked instructions */\n  innerInstructions?: CompiledInnerInstruction[] | null;\n  /** The balances of the transaction accounts before processing */\n  preBalances: Array<number>;\n  /** The balances of the transaction accounts after processing */\n  postBalances: Array<number>;\n  /** An array of program log messages emitted during a transaction */\n  logMessages?: Array<string> | null;\n  /** The token balances of the transaction accounts before processing */\n  preTokenBalances?: Array<TokenBalance> | null;\n  /** The token balances of the transaction accounts after processing */\n  postTokenBalances?: Array<TokenBalance> | null;\n  /** The error result of transaction processing */\n  err: TransactionError | null;\n  /** The collection of addresses loaded using address lookup tables */\n  loadedAddresses?: LoadedAddresses;\n  /** The compute units consumed after processing the transaction */\n  computeUnitsConsumed?: number;\n};\n\n/**\n * A processed transaction from the RPC API\n */\nexport type TransactionResponse = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The transaction */\n  transaction: {\n    /** The transaction message */\n    message: Message;\n    /** The transaction signatures */\n    signatures: string[];\n  };\n  /** Metadata produced from the transaction */\n  meta: ConfirmedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n};\n\n/**\n * A processed transaction from the RPC API\n */\nexport type VersionedTransactionResponse = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The transaction */\n  transaction: {\n    /** The transaction message */\n    message: VersionedMessage;\n    /** The transaction signatures */\n    signatures: string[];\n  };\n  /** Metadata produced from the transaction */\n  meta: ConfirmedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n  /** The transaction version */\n  version?: TransactionVersion;\n};\n\n/**\n * A processed transaction message from the RPC API\n */\ntype MessageResponse = {\n  accountKeys: string[];\n  header: MessageHeader;\n  instructions: CompiledInstruction[];\n  recentBlockhash: string;\n  addressTableLookups?: ParsedAddressTableLookup[];\n};\n\n/**\n * A confirmed transaction on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0.\n */\nexport type ConfirmedTransaction = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The details of the transaction */\n  transaction: Transaction;\n  /** Metadata produced from the transaction */\n  meta: ConfirmedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n};\n\n/**\n * A partially decoded transaction instruction\n */\nexport type PartiallyDecodedInstruction = {\n  /** Program id called by this instruction */\n  programId: PublicKey;\n  /** Public keys of accounts passed to this instruction */\n  accounts: Array<PublicKey>;\n  /** Raw base-58 instruction data */\n  data: string;\n};\n\n/**\n * A parsed transaction message account\n */\nexport type ParsedMessageAccount = {\n  /** Public key of the account */\n  pubkey: PublicKey;\n  /** Indicates if the account signed the transaction */\n  signer: boolean;\n  /** Indicates if the account is writable for this transaction */\n  writable: boolean;\n  /** Indicates if the account key came from the transaction or a lookup table */\n  source?: 'transaction' | 'lookupTable';\n};\n\n/**\n * A parsed transaction instruction\n */\nexport type ParsedInstruction = {\n  /** Name of the program for this instruction */\n  program: string;\n  /** ID of the program for this instruction */\n  programId: PublicKey;\n  /** Parsed instruction info */\n  parsed: any;\n};\n\n/**\n * A parsed address table lookup\n */\nexport type ParsedAddressTableLookup = {\n  /** Address lookup table account key */\n  accountKey: PublicKey;\n  /** Parsed instruction info */\n  writableIndexes: number[];\n  /** Parsed instruction info */\n  readonlyIndexes: number[];\n};\n\n/**\n * A parsed transaction message\n */\nexport type ParsedMessage = {\n  /** Accounts used in the instructions */\n  accountKeys: ParsedMessageAccount[];\n  /** The atomically executed instructions for the transaction */\n  instructions: (ParsedInstruction | PartiallyDecodedInstruction)[];\n  /** Recent blockhash */\n  recentBlockhash: string;\n  /** Address table lookups used to load additional accounts */\n  addressTableLookups?: ParsedAddressTableLookup[] | null;\n};\n\n/**\n * A parsed transaction\n */\nexport type ParsedTransaction = {\n  /** Signatures for the transaction */\n  signatures: Array<string>;\n  /** Message of the transaction */\n  message: ParsedMessage;\n};\n\n/**\n * A parsed and confirmed transaction on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link ParsedTransactionWithMeta} instead.\n */\nexport type ParsedConfirmedTransaction = ParsedTransactionWithMeta;\n\n/**\n * A parsed transaction on the ledger with meta\n */\nexport type ParsedTransactionWithMeta = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The details of the transaction */\n  transaction: ParsedTransaction;\n  /** Metadata produced from the transaction */\n  meta: ParsedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n  /** The version of the transaction message */\n  version?: TransactionVersion;\n};\n\n/**\n * A processed block fetched from the RPC API\n */\nexport type BlockResponse = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions with status meta and original message */\n  transactions: Array<{\n    /** The transaction */\n    transaction: {\n      /** The transaction message */\n      message: Message;\n      /** The transaction signatures */\n      signatures: string[];\n    };\n    /** Metadata produced from the transaction */\n    meta: ConfirmedTransactionMeta | null;\n    /** The transaction version */\n    version?: TransactionVersion;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    /** Public key of reward recipient */\n    pubkey: string;\n    /** Reward value in lamports */\n    lamports: number;\n    /** Account balance after reward is applied */\n    postBalance: number | null;\n    /** Type of reward received */\n    rewardType: string | null;\n    /** Vote account commission when the reward was credited, only present for voting and staking rewards */\n    commission?: number | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * A processed block fetched from the RPC API where the `transactionDetails` mode is `accounts`\n */\nexport type AccountsModeBlockResponse = VersionedAccountsModeBlockResponse;\n\n/**\n * A processed block fetched from the RPC API where the `transactionDetails` mode is `none`\n */\nexport type NoneModeBlockResponse = VersionedNoneModeBlockResponse;\n\n/**\n * A block with parsed transactions\n */\nexport type ParsedBlockResponse = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions with status meta and original message */\n  transactions: Array<{\n    /** The details of the transaction */\n    transaction: ParsedTransaction;\n    /** Metadata produced from the transaction */\n    meta: ParsedTransactionMeta | null;\n    /** The transaction version */\n    version?: TransactionVersion;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    /** Public key of reward recipient */\n    pubkey: string;\n    /** Reward value in lamports */\n    lamports: number;\n    /** Account balance after reward is applied */\n    postBalance: number | null;\n    /** Type of reward received */\n    rewardType: string | null;\n    /** Vote account commission when the reward was credited, only present for voting and staking rewards */\n    commission?: number | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n  /** The number of blocks beneath this block */\n  blockHeight: number | null;\n};\n\n/**\n * A block with parsed transactions where the `transactionDetails` mode is `accounts`\n */\nexport type ParsedAccountsModeBlockResponse = Omit<\n  ParsedBlockResponse,\n  'transactions'\n> & {\n  transactions: Array<\n    Omit<ParsedBlockResponse['transactions'][number], 'transaction'> & {\n      transaction: Pick<\n        ParsedBlockResponse['transactions'][number]['transaction'],\n        'signatures'\n      > & {\n        accountKeys: ParsedMessageAccount[];\n      };\n    }\n  >;\n};\n\n/**\n * A block with parsed transactions where the `transactionDetails` mode is `none`\n */\nexport type ParsedNoneModeBlockResponse = Omit<\n  ParsedBlockResponse,\n  'transactions'\n>;\n\n/**\n * A processed block fetched from the RPC API\n */\nexport type VersionedBlockResponse = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions with status meta and original message */\n  transactions: Array<{\n    /** The transaction */\n    transaction: {\n      /** The transaction message */\n      message: VersionedMessage;\n      /** The transaction signatures */\n      signatures: string[];\n    };\n    /** Metadata produced from the transaction */\n    meta: ConfirmedTransactionMeta | null;\n    /** The transaction version */\n    version?: TransactionVersion;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    /** Public key of reward recipient */\n    pubkey: string;\n    /** Reward value in lamports */\n    lamports: number;\n    /** Account balance after reward is applied */\n    postBalance: number | null;\n    /** Type of reward received */\n    rewardType: string | null;\n    /** Vote account commission when the reward was credited, only present for voting and staking rewards */\n    commission?: number | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * A processed block fetched from the RPC API where the `transactionDetails` mode is `accounts`\n */\nexport type VersionedAccountsModeBlockResponse = Omit<\n  VersionedBlockResponse,\n  'transactions'\n> & {\n  transactions: Array<\n    Omit<VersionedBlockResponse['transactions'][number], 'transaction'> & {\n      transaction: Pick<\n        VersionedBlockResponse['transactions'][number]['transaction'],\n        'signatures'\n      > & {\n        accountKeys: ParsedMessageAccount[];\n      };\n    }\n  >;\n};\n\n/**\n * A processed block fetched from the RPC API where the `transactionDetails` mode is `none`\n */\nexport type VersionedNoneModeBlockResponse = Omit<\n  VersionedBlockResponse,\n  'transactions'\n>;\n\n/**\n * A confirmed block on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0.\n */\nexport type ConfirmedBlock = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions and status metas */\n  transactions: Array<{\n    transaction: Transaction;\n    meta: ConfirmedTransactionMeta | null;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    pubkey: string;\n    lamports: number;\n    postBalance: number | null;\n    rewardType: string | null;\n    commission?: number | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * A Block on the ledger with signatures only\n */\nexport type BlockSignatures = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of signatures */\n  signatures: Array<string>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * recent block production information\n */\nexport type BlockProduction = Readonly<{\n  /** a dictionary of validator identities, as base-58 encoded strings. Value is a two element array containing the number of leader slots and the number of blocks produced */\n  byIdentity: Readonly<Record<string, ReadonlyArray<number>>>;\n  /** Block production slot range */\n  range: Readonly<{\n    /** first slot of the block production information (inclusive) */\n    firstSlot: number;\n    /** last slot of block production information (inclusive) */\n    lastSlot: number;\n  }>;\n}>;\n\nexport type GetBlockProductionConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Slot range to return block production for. If parameter not provided, defaults to current epoch. */\n  range?: {\n    /** first slot to return block production information for (inclusive) */\n    firstSlot: number;\n    /** last slot to return block production information for (inclusive). If parameter not provided, defaults to the highest slot */\n    lastSlot?: number;\n  };\n  /** Only return results for this validator identity (base-58 encoded) */\n  identity?: string;\n};\n\n/**\n * Expected JSON RPC response for the \"getBlockProduction\" message\n */\nconst BlockProductionResponseStruct = jsonRpcResultAndContext(\n  pick({\n    byIdentity: record(string(), array(number())),\n    range: pick({\n      firstSlot: number(),\n      lastSlot: number(),\n    }),\n  }),\n);\n\n/**\n * A performance sample\n */\nexport type PerfSample = {\n  /** Slot number of sample */\n  slot: number;\n  /** Number of transactions in a sample window */\n  numTransactions: number;\n  /** Number of slots in a sample window */\n  numSlots: number;\n  /** Sample window in seconds */\n  samplePeriodSecs: number;\n};\n\nfunction createRpcClient(\n  url: string,\n  httpHeaders?: HttpHeaders,\n  customFetch?: FetchFn,\n  fetchMiddleware?: FetchMiddleware,\n  disableRetryOnRateLimit?: boolean,\n  httpAgent?: NodeHttpAgent | NodeHttpsAgent | false,\n): RpcClient {\n  const fetch = customFetch ? customFetch : fetchImpl;\n  let agent: NodeHttpAgent | NodeHttpsAgent | undefined;\n  if (process.env.BROWSER) {\n    if (httpAgent != null) {\n      console.warn(\n        'You have supplied an `httpAgent` when creating a `Connection` in a browser environment.' +\n          'It has been ignored; `httpAgent` is only used in Node environments.',\n      );\n    }\n  } else {\n    if (httpAgent == null) {\n      if (process.env.NODE_ENV !== 'test') {\n        const agentOptions = {\n          // One second fewer than the Solana RPC's keepalive timeout.\n          // Read more: https://github.com/solana-labs/solana/issues/27859#issuecomment-1340097889\n          freeSocketTimeout: 19000,\n          keepAlive: true,\n          maxSockets: 25,\n        };\n        if (url.startsWith('https:')) {\n          agent = new HttpsKeepAliveAgent(agentOptions);\n        } else {\n          agent = new HttpKeepAliveAgent(agentOptions);\n        }\n      }\n    } else {\n      if (httpAgent !== false) {\n        const isHttps = url.startsWith('https:');\n        if (isHttps && !(httpAgent instanceof NodeHttpsAgent)) {\n          throw new Error(\n            'The endpoint `' +\n              url +\n              '` can only be paired with an `https.Agent`. You have, instead, supplied an ' +\n              '`http.Agent` through `httpAgent`.',\n          );\n        } else if (!isHttps && httpAgent instanceof NodeHttpsAgent) {\n          throw new Error(\n            'The endpoint `' +\n              url +\n              '` can only be paired with an `http.Agent`. You have, instead, supplied an ' +\n              '`https.Agent` through `httpAgent`.',\n          );\n        }\n        agent = httpAgent;\n      }\n    }\n  }\n\n  let fetchWithMiddleware: FetchFn | undefined;\n\n  if (fetchMiddleware) {\n    fetchWithMiddleware = async (info, init) => {\n      const modifiedFetchArgs = await new Promise<Parameters<FetchFn>>(\n        (resolve, reject) => {\n          try {\n            fetchMiddleware(info, init, (modifiedInfo, modifiedInit) =>\n              resolve([modifiedInfo, modifiedInit]),\n            );\n          } catch (error) {\n            reject(error);\n          }\n        },\n      );\n      return await fetch(...modifiedFetchArgs);\n    };\n  }\n\n  const clientBrowser = new RpcClient(async (request, callback) => {\n    const options = {\n      method: 'POST',\n      body: request,\n      agent,\n      headers: Object.assign(\n        {\n          'Content-Type': 'application/json',\n        },\n        httpHeaders || {},\n        COMMON_HTTP_HEADERS,\n      ),\n    };\n\n    try {\n      let too_many_requests_retries = 5;\n      let res: Response;\n      let waitTime = 500;\n      for (;;) {\n        if (fetchWithMiddleware) {\n          res = await fetchWithMiddleware(url, options);\n        } else {\n          res = await fetch(url, options);\n        }\n\n        if (res.status !== 429 /* Too many requests */) {\n          break;\n        }\n        if (disableRetryOnRateLimit === true) {\n          break;\n        }\n        too_many_requests_retries -= 1;\n        if (too_many_requests_retries === 0) {\n          break;\n        }\n        console.log(\n          `Server responded with ${res.status} ${res.statusText}.  Retrying after ${waitTime}ms delay...`,\n        );\n        await sleep(waitTime);\n        waitTime *= 2;\n      }\n\n      const text = await res.text();\n      if (res.ok) {\n        callback(null, text);\n      } else {\n        callback(new Error(`${res.status} ${res.statusText}: ${text}`));\n      }\n    } catch (err) {\n      if (err instanceof Error) callback(err);\n    }\n  }, {});\n\n  return clientBrowser;\n}\n\nfunction createRpcRequest(client: RpcClient): RpcRequest {\n  return (method, args) => {\n    return new Promise((resolve, reject) => {\n      client.request(method, args, (err: any, response: any) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve(response);\n      });\n    });\n  };\n}\n\nfunction createRpcBatchRequest(client: RpcClient): RpcBatchRequest {\n  return (requests: RpcParams[]) => {\n    return new Promise((resolve, reject) => {\n      // Do nothing if requests is empty\n      if (requests.length === 0) resolve([]);\n\n      const batch = requests.map((params: RpcParams) => {\n        return client.request(params.methodName, params.args);\n      });\n\n      client.request(batch, (err: any, response: any) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve(response);\n      });\n    });\n  };\n}\n\n/**\n * Expected JSON RPC response for the \"getInflationGovernor\" message\n */\nconst GetInflationGovernorRpcResult = jsonRpcResult(GetInflationGovernorResult);\n\n/**\n * Expected JSON RPC response for the \"getInflationRate\" message\n */\nconst GetInflationRateRpcResult = jsonRpcResult(GetInflationRateResult);\n\n/**\n * Expected JSON RPC response for the \"getRecentPrioritizationFees\" message\n */\nconst GetRecentPrioritizationFeesRpcResult = jsonRpcResult(\n  GetRecentPrioritizationFeesResult,\n);\n\n/**\n * Expected JSON RPC response for the \"getEpochInfo\" message\n */\nconst GetEpochInfoRpcResult = jsonRpcResult(GetEpochInfoResult);\n\n/**\n * Expected JSON RPC response for the \"getEpochSchedule\" message\n */\nconst GetEpochScheduleRpcResult = jsonRpcResult(GetEpochScheduleResult);\n\n/**\n * Expected JSON RPC response for the \"getLeaderSchedule\" message\n */\nconst GetLeaderScheduleRpcResult = jsonRpcResult(GetLeaderScheduleResult);\n\n/**\n * Expected JSON RPC response for the \"minimumLedgerSlot\" and \"getFirstAvailableBlock\" messages\n */\nconst SlotRpcResult = jsonRpcResult(number());\n\n/**\n * Supply\n */\nexport type Supply = {\n  /** Total supply in lamports */\n  total: number;\n  /** Circulating supply in lamports */\n  circulating: number;\n  /** Non-circulating supply in lamports */\n  nonCirculating: number;\n  /** List of non-circulating account addresses */\n  nonCirculatingAccounts: Array<PublicKey>;\n};\n\n/**\n * Expected JSON RPC response for the \"getSupply\" message\n */\nconst GetSupplyRpcResult = jsonRpcResultAndContext(\n  pick({\n    total: number(),\n    circulating: number(),\n    nonCirculating: number(),\n    nonCirculatingAccounts: array(PublicKeyFromString),\n  }),\n);\n\n/**\n * Token amount object which returns a token amount in different formats\n * for various client use cases.\n */\nexport type TokenAmount = {\n  /** Raw amount of tokens as string ignoring decimals */\n  amount: string;\n  /** Number of decimals configured for token's mint */\n  decimals: number;\n  /** Token amount as float, accounts for decimals */\n  uiAmount: number | null;\n  /** Token amount as string, accounts for decimals */\n  uiAmountString?: string;\n};\n\n/**\n * Expected JSON RPC structure for token amounts\n */\nconst TokenAmountResult = pick({\n  amount: string(),\n  uiAmount: nullable(number()),\n  decimals: number(),\n  uiAmountString: optional(string()),\n});\n\n/**\n * Token address and balance.\n */\nexport type TokenAccountBalancePair = {\n  /** Address of the token account */\n  address: PublicKey;\n  /** Raw amount of tokens as string ignoring decimals */\n  amount: string;\n  /** Number of decimals configured for token's mint */\n  decimals: number;\n  /** Token amount as float, accounts for decimals */\n  uiAmount: number | null;\n  /** Token amount as string, accounts for decimals */\n  uiAmountString?: string;\n};\n\n/**\n * Expected JSON RPC response for the \"getTokenLargestAccounts\" message\n */\nconst GetTokenLargestAccountsResult = jsonRpcResultAndContext(\n  array(\n    pick({\n      address: PublicKeyFromString,\n      amount: string(),\n      uiAmount: nullable(number()),\n      decimals: number(),\n      uiAmountString: optional(string()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getTokenAccountsByOwner\" message\n */\nconst GetTokenAccountsByOwner = jsonRpcResultAndContext(\n  array(\n    pick({\n      pubkey: PublicKeyFromString,\n      account: pick({\n        executable: boolean(),\n        owner: PublicKeyFromString,\n        lamports: number(),\n        data: BufferFromRawAccountData,\n        rentEpoch: number(),\n      }),\n    }),\n  ),\n);\n\nconst ParsedAccountDataResult = pick({\n  program: string(),\n  parsed: unknown(),\n  space: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"getTokenAccountsByOwner\" message with parsed data\n */\nconst GetParsedTokenAccountsByOwner = jsonRpcResultAndContext(\n  array(\n    pick({\n      pubkey: PublicKeyFromString,\n      account: pick({\n        executable: boolean(),\n        owner: PublicKeyFromString,\n        lamports: number(),\n        data: ParsedAccountDataResult,\n        rentEpoch: number(),\n      }),\n    }),\n  ),\n);\n\n/**\n * Pair of an account address and its balance\n */\nexport type AccountBalancePair = {\n  address: PublicKey;\n  lamports: number;\n};\n\n/**\n * Expected JSON RPC response for the \"getLargestAccounts\" message\n */\nconst GetLargestAccountsRpcResult = jsonRpcResultAndContext(\n  array(\n    pick({\n      lamports: number(),\n      address: PublicKeyFromString,\n    }),\n  ),\n);\n\n/**\n * @internal\n */\nconst AccountInfoResult = pick({\n  executable: boolean(),\n  owner: PublicKeyFromString,\n  lamports: number(),\n  data: BufferFromRawAccountData,\n  rentEpoch: number(),\n});\n\n/**\n * @internal\n */\nconst KeyedAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: AccountInfoResult,\n});\n\nconst ParsedOrRawAccountData = coerce(\n  union([instance(Buffer), ParsedAccountDataResult]),\n  union([RawAccountDataResult, ParsedAccountDataResult]),\n  value => {\n    if (Array.isArray(value)) {\n      return create(value, BufferFromRawAccountData);\n    } else {\n      return value;\n    }\n  },\n);\n\n/**\n * @internal\n */\nconst ParsedAccountInfoResult = pick({\n  executable: boolean(),\n  owner: PublicKeyFromString,\n  lamports: number(),\n  data: ParsedOrRawAccountData,\n  rentEpoch: number(),\n});\n\nconst KeyedParsedAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: ParsedAccountInfoResult,\n});\n\n/**\n * @internal\n */\nconst StakeActivationResult = pick({\n  state: union([\n    literal('active'),\n    literal('inactive'),\n    literal('activating'),\n    literal('deactivating'),\n  ]),\n  active: number(),\n  inactive: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"getConfirmedSignaturesForAddress2\" message\n */\n\nconst GetConfirmedSignaturesForAddress2RpcResult = jsonRpcResult(\n  array(\n    pick({\n      signature: string(),\n      slot: number(),\n      err: TransactionErrorResult,\n      memo: nullable(string()),\n      blockTime: optional(nullable(number())),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getSignaturesForAddress\" message\n */\nconst GetSignaturesForAddressRpcResult = jsonRpcResult(\n  array(\n    pick({\n      signature: string(),\n      slot: number(),\n      err: TransactionErrorResult,\n      memo: nullable(string()),\n      blockTime: optional(nullable(number())),\n    }),\n  ),\n);\n\n/***\n * Expected JSON RPC response for the \"accountNotification\" message\n */\nconst AccountNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(AccountInfoResult),\n});\n\n/**\n * @internal\n */\nconst ProgramAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: AccountInfoResult,\n});\n\n/***\n * Expected JSON RPC response for the \"programNotification\" message\n */\nconst ProgramAccountNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(ProgramAccountInfoResult),\n});\n\n/**\n * @internal\n */\nconst SlotInfoResult = pick({\n  parent: number(),\n  slot: number(),\n  root: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"slotNotification\" message\n */\nconst SlotNotificationResult = pick({\n  subscription: number(),\n  result: SlotInfoResult,\n});\n\n/**\n * Slot updates which can be used for tracking the live progress of a cluster.\n * - `\"firstShredReceived\"`: connected node received the first shred of a block.\n * Indicates that a new block that is being produced.\n * - `\"completed\"`: connected node has received all shreds of a block. Indicates\n * a block was recently produced.\n * - `\"optimisticConfirmation\"`: block was optimistically confirmed by the\n * cluster. It is not guaranteed that an optimistic confirmation notification\n * will be sent for every finalized blocks.\n * - `\"root\"`: the connected node rooted this block.\n * - `\"createdBank\"`: the connected node has started validating this block.\n * - `\"frozen\"`: the connected node has validated this block.\n * - `\"dead\"`: the connected node failed to validate this block.\n */\nexport type SlotUpdate =\n  | {\n      type: 'firstShredReceived';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'completed';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'createdBank';\n      slot: number;\n      timestamp: number;\n      parent: number;\n    }\n  | {\n      type: 'frozen';\n      slot: number;\n      timestamp: number;\n      stats: {\n        numTransactionEntries: number;\n        numSuccessfulTransactions: number;\n        numFailedTransactions: number;\n        maxTransactionsPerEntry: number;\n      };\n    }\n  | {\n      type: 'dead';\n      slot: number;\n      timestamp: number;\n      err: string;\n    }\n  | {\n      type: 'optimisticConfirmation';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'root';\n      slot: number;\n      timestamp: number;\n    };\n\n/**\n * @internal\n */\nconst SlotUpdateResult = union([\n  pick({\n    type: union([\n      literal('firstShredReceived'),\n      literal('completed'),\n      literal('optimisticConfirmation'),\n      literal('root'),\n    ]),\n    slot: number(),\n    timestamp: number(),\n  }),\n  pick({\n    type: literal('createdBank'),\n    parent: number(),\n    slot: number(),\n    timestamp: number(),\n  }),\n  pick({\n    type: literal('frozen'),\n    slot: number(),\n    timestamp: number(),\n    stats: pick({\n      numTransactionEntries: number(),\n      numSuccessfulTransactions: number(),\n      numFailedTransactions: number(),\n      maxTransactionsPerEntry: number(),\n    }),\n  }),\n  pick({\n    type: literal('dead'),\n    slot: number(),\n    timestamp: number(),\n    err: string(),\n  }),\n]);\n\n/**\n * Expected JSON RPC response for the \"slotsUpdatesNotification\" message\n */\nconst SlotUpdateNotificationResult = pick({\n  subscription: number(),\n  result: SlotUpdateResult,\n});\n\n/**\n * Expected JSON RPC response for the \"signatureNotification\" message\n */\nconst SignatureNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(\n    union([SignatureStatusResult, SignatureReceivedResult]),\n  ),\n});\n\n/**\n * Expected JSON RPC response for the \"rootNotification\" message\n */\nconst RootNotificationResult = pick({\n  subscription: number(),\n  result: number(),\n});\n\nconst ContactInfoResult = pick({\n  pubkey: string(),\n  gossip: nullable(string()),\n  tpu: nullable(string()),\n  rpc: nullable(string()),\n  version: nullable(string()),\n});\n\nconst VoteAccountInfoResult = pick({\n  votePubkey: string(),\n  nodePubkey: string(),\n  activatedStake: number(),\n  epochVoteAccount: boolean(),\n  epochCredits: array(tuple([number(), number(), number()])),\n  commission: number(),\n  lastVote: number(),\n  rootSlot: nullable(number()),\n});\n\n/**\n * Expected JSON RPC response for the \"getVoteAccounts\" message\n */\nconst GetVoteAccounts = jsonRpcResult(\n  pick({\n    current: array(VoteAccountInfoResult),\n    delinquent: array(VoteAccountInfoResult),\n  }),\n);\n\nconst ConfirmationStatus = union([\n  literal('processed'),\n  literal('confirmed'),\n  literal('finalized'),\n]);\n\nconst SignatureStatusResponse = pick({\n  slot: number(),\n  confirmations: nullable(number()),\n  err: TransactionErrorResult,\n  confirmationStatus: optional(ConfirmationStatus),\n});\n\n/**\n * Expected JSON RPC response for the \"getSignatureStatuses\" message\n */\nconst GetSignatureStatusesRpcResult = jsonRpcResultAndContext(\n  array(nullable(SignatureStatusResponse)),\n);\n\n/**\n * Expected JSON RPC response for the \"getMinimumBalanceForRentExemption\" message\n */\nconst GetMinimumBalanceForRentExemptionRpcResult = jsonRpcResult(number());\n\nconst AddressTableLookupStruct = pick({\n  accountKey: PublicKeyFromString,\n  writableIndexes: array(number()),\n  readonlyIndexes: array(number()),\n});\n\nconst ConfirmedTransactionResult = pick({\n  signatures: array(string()),\n  message: pick({\n    accountKeys: array(string()),\n    header: pick({\n      numRequiredSignatures: number(),\n      numReadonlySignedAccounts: number(),\n      numReadonlyUnsignedAccounts: number(),\n    }),\n    instructions: array(\n      pick({\n        accounts: array(number()),\n        data: string(),\n        programIdIndex: number(),\n      }),\n    ),\n    recentBlockhash: string(),\n    addressTableLookups: optional(array(AddressTableLookupStruct)),\n  }),\n});\n\nconst AnnotatedAccountKey = pick({\n  pubkey: PublicKeyFromString,\n  signer: boolean(),\n  writable: boolean(),\n  source: optional(union([literal('transaction'), literal('lookupTable')])),\n});\n\nconst ConfirmedTransactionAccountsModeResult = pick({\n  accountKeys: array(AnnotatedAccountKey),\n  signatures: array(string()),\n});\n\nconst ParsedInstructionResult = pick({\n  parsed: unknown(),\n  program: string(),\n  programId: PublicKeyFromString,\n});\n\nconst RawInstructionResult = pick({\n  accounts: array(PublicKeyFromString),\n  data: string(),\n  programId: PublicKeyFromString,\n});\n\nconst InstructionResult = union([\n  RawInstructionResult,\n  ParsedInstructionResult,\n]);\n\nconst UnknownInstructionResult = union([\n  pick({\n    parsed: unknown(),\n    program: string(),\n    programId: string(),\n  }),\n  pick({\n    accounts: array(string()),\n    data: string(),\n    programId: string(),\n  }),\n]);\n\nconst ParsedOrRawInstruction = coerce(\n  InstructionResult,\n  UnknownInstructionResult,\n  value => {\n    if ('accounts' in value) {\n      return create(value, RawInstructionResult);\n    } else {\n      return create(value, ParsedInstructionResult);\n    }\n  },\n);\n\n/**\n * @internal\n */\nconst ParsedConfirmedTransactionResult = pick({\n  signatures: array(string()),\n  message: pick({\n    accountKeys: array(AnnotatedAccountKey),\n    instructions: array(ParsedOrRawInstruction),\n    recentBlockhash: string(),\n    addressTableLookups: optional(nullable(array(AddressTableLookupStruct))),\n  }),\n});\n\nconst TokenBalanceResult = pick({\n  accountIndex: number(),\n  mint: string(),\n  owner: optional(string()),\n  uiTokenAmount: TokenAmountResult,\n});\n\nconst LoadedAddressesResult = pick({\n  writable: array(PublicKeyFromString),\n  readonly: array(PublicKeyFromString),\n});\n\n/**\n * @internal\n */\nconst ConfirmedTransactionMetaResult = pick({\n  err: TransactionErrorResult,\n  fee: number(),\n  innerInstructions: optional(\n    nullable(\n      array(\n        pick({\n          index: number(),\n          instructions: array(\n            pick({\n              accounts: array(number()),\n              data: string(),\n              programIdIndex: number(),\n            }),\n          ),\n        }),\n      ),\n    ),\n  ),\n  preBalances: array(number()),\n  postBalances: array(number()),\n  logMessages: optional(nullable(array(string()))),\n  preTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  postTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  loadedAddresses: optional(LoadedAddressesResult),\n  computeUnitsConsumed: optional(number()),\n});\n\n/**\n * @internal\n */\nconst ParsedConfirmedTransactionMetaResult = pick({\n  err: TransactionErrorResult,\n  fee: number(),\n  innerInstructions: optional(\n    nullable(\n      array(\n        pick({\n          index: number(),\n          instructions: array(ParsedOrRawInstruction),\n        }),\n      ),\n    ),\n  ),\n  preBalances: array(number()),\n  postBalances: array(number()),\n  logMessages: optional(nullable(array(string()))),\n  preTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  postTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  loadedAddresses: optional(LoadedAddressesResult),\n  computeUnitsConsumed: optional(number()),\n});\n\nconst TransactionVersionStruct = union([literal(0), literal('legacy')]);\n\n/** @internal */\nconst RewardsResult = pick({\n  pubkey: string(),\n  lamports: number(),\n  postBalance: nullable(number()),\n  rewardType: nullable(string()),\n  commission: optional(nullable(number())),\n});\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message\n */\nconst GetBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ConfirmedTransactionResult,\n          meta: nullable(ConfirmedTransactionMetaResult),\n          version: optional(TransactionVersionStruct),\n        }),\n      ),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message when `transactionDetails` is `none`\n */\nconst GetNoneModeBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message when `transactionDetails` is `accounts`\n */\nconst GetAccountsModeBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ConfirmedTransactionAccountsModeResult,\n          meta: nullable(ConfirmedTransactionMetaResult),\n          version: optional(TransactionVersionStruct),\n        }),\n      ),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected parsed JSON RPC response for the \"getBlock\" message\n */\nconst GetParsedBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ParsedConfirmedTransactionResult,\n          meta: nullable(ParsedConfirmedTransactionMetaResult),\n          version: optional(TransactionVersionStruct),\n        }),\n      ),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected parsed JSON RPC response for the \"getBlock\" message  when `transactionDetails` is `accounts`\n */\nconst GetParsedAccountsModeBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ConfirmedTransactionAccountsModeResult,\n          meta: nullable(ParsedConfirmedTransactionMetaResult),\n          version: optional(TransactionVersionStruct),\n        }),\n      ),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected parsed JSON RPC response for the \"getBlock\" message  when `transactionDetails` is `none`\n */\nconst GetParsedNoneModeBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getConfirmedBlock\" message\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link GetBlockRpcResult} instead.\n */\nconst GetConfirmedBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ConfirmedTransactionResult,\n          meta: nullable(ConfirmedTransactionMetaResult),\n        }),\n      ),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message\n */\nconst GetBlockSignaturesRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      signatures: array(string()),\n      blockTime: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getTransaction\" message\n */\nconst GetTransactionRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      slot: number(),\n      meta: ConfirmedTransactionMetaResult,\n      blockTime: optional(nullable(number())),\n      transaction: ConfirmedTransactionResult,\n      version: optional(TransactionVersionStruct),\n    }),\n  ),\n);\n\n/**\n * Expected parsed JSON RPC response for the \"getTransaction\" message\n */\nconst GetParsedTransactionRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      slot: number(),\n      transaction: ParsedConfirmedTransactionResult,\n      meta: nullable(ParsedConfirmedTransactionMetaResult),\n      blockTime: optional(nullable(number())),\n      version: optional(TransactionVersionStruct),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getRecentBlockhash\" message\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link GetLatestBlockhashRpcResult} instead.\n */\nconst GetRecentBlockhashAndContextRpcResult = jsonRpcResultAndContext(\n  pick({\n    blockhash: string(),\n    feeCalculator: pick({\n      lamportsPerSignature: number(),\n    }),\n  }),\n);\n\n/**\n * Expected JSON RPC response for the \"getLatestBlockhash\" message\n */\nconst GetLatestBlockhashRpcResult = jsonRpcResultAndContext(\n  pick({\n    blockhash: string(),\n    lastValidBlockHeight: number(),\n  }),\n);\n\nconst PerfSampleResult = pick({\n  slot: number(),\n  numTransactions: number(),\n  numSlots: number(),\n  samplePeriodSecs: number(),\n});\n\n/*\n * Expected JSON RPC response for \"getRecentPerformanceSamples\" message\n */\nconst GetRecentPerformanceSamplesRpcResult = jsonRpcResult(\n  array(PerfSampleResult),\n);\n\n/**\n * Expected JSON RPC response for the \"getFeeCalculatorForBlockhash\" message\n */\nconst GetFeeCalculatorRpcResult = jsonRpcResultAndContext(\n  nullable(\n    pick({\n      feeCalculator: pick({\n        lamportsPerSignature: number(),\n      }),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"requestAirdrop\" message\n */\nconst RequestAirdropRpcResult = jsonRpcResult(string());\n\n/**\n * Expected JSON RPC response for the \"sendTransaction\" message\n */\nconst SendTransactionRpcResult = jsonRpcResult(string());\n\n/**\n * Information about the latest slot being processed by a node\n */\nexport type SlotInfo = {\n  /** Currently processing slot */\n  slot: number;\n  /** Parent of the current slot */\n  parent: number;\n  /** The root block of the current slot's fork */\n  root: number;\n};\n\n/**\n * Parsed account data\n */\nexport type ParsedAccountData = {\n  /** Name of the program that owns this account */\n  program: string;\n  /** Parsed account data */\n  parsed: any;\n  /** Space used by account data */\n  space: number;\n};\n\n/**\n * Stake Activation data\n */\nexport type StakeActivationData = {\n  /** the stake account's activation state */\n  state: 'active' | 'inactive' | 'activating' | 'deactivating';\n  /** stake active during the epoch */\n  active: number;\n  /** stake inactive during the epoch */\n  inactive: number;\n};\n\n/**\n * Data slice argument for getProgramAccounts\n */\nexport type DataSlice = {\n  /** offset of data slice */\n  offset: number;\n  /** length of data slice */\n  length: number;\n};\n\n/**\n * Memory comparison filter for getProgramAccounts\n */\nexport type MemcmpFilter = {\n  memcmp: {\n    /** offset into program account data to start comparison */\n    offset: number;\n    /** data to match, as base-58 encoded string and limited to less than 129 bytes */\n    bytes: string;\n  };\n};\n\n/**\n * Data size comparison filter for getProgramAccounts\n */\nexport type DataSizeFilter = {\n  /** Size of data for program account data length comparison */\n  dataSize: number;\n};\n\n/**\n * A filter object for getProgramAccounts\n */\nexport type GetProgramAccountsFilter = MemcmpFilter | DataSizeFilter;\n\n/**\n * Configuration object for getProgramAccounts requests\n */\nexport type GetProgramAccountsConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional encoding for account data (default base64)\n   * To use \"jsonParsed\" encoding, please refer to `getParsedProgramAccounts` in connection.ts\n   * */\n  encoding?: 'base64';\n  /** Optional data slice to limit the returned account data */\n  dataSlice?: DataSlice;\n  /** Optional array of filters to apply to accounts */\n  filters?: GetProgramAccountsFilter[];\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n  /** wrap the result in an RpcResponse JSON object */\n  withContext?: boolean;\n};\n\nexport type GetProgramAccountsResponse = readonly Readonly<{\n  account: AccountInfo<Buffer>;\n  /** the account Pubkey as base-58 encoded string */\n  pubkey: PublicKey;\n}>[];\n\n/**\n * Configuration object for getParsedProgramAccounts\n */\nexport type GetParsedProgramAccountsConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional array of filters to apply to accounts */\n  filters?: GetProgramAccountsFilter[];\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for getMultipleAccounts\n */\nexport type GetMultipleAccountsConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n  /** Optional data slice to limit the returned account data */\n  dataSlice?: DataSlice;\n};\n\n/**\n * Configuration object for `getStakeActivation`\n */\nexport type GetStakeActivationConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Epoch for which to calculate activation details. If parameter not provided, defaults to current epoch */\n  epoch?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for `getStakeActivation`\n */\nexport type GetTokenAccountsByOwnerConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for `getStakeActivation`\n */\nexport type GetTransactionCountConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for `getNonce`\n */\nexport type GetNonceConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for `getNonceAndContext`\n */\nexport type GetNonceAndContextConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Information describing an account\n */\nexport type AccountInfo<T> = {\n  /** `true` if this account's data contains a loaded program */\n  executable: boolean;\n  /** Identifier of the program that owns the account */\n  owner: PublicKey;\n  /** Number of lamports assigned to the account */\n  lamports: number;\n  /** Optional data assigned to the account */\n  data: T;\n  /** Optional rent epoch info for account */\n  rentEpoch?: number;\n};\n\n/**\n * Account information identified by pubkey\n */\nexport type KeyedAccountInfo = {\n  accountId: PublicKey;\n  accountInfo: AccountInfo<Buffer>;\n};\n\n/**\n * Callback function for account change notifications\n */\nexport type AccountChangeCallback = (\n  accountInfo: AccountInfo<Buffer>,\n  context: Context,\n) => void;\n\n/**\n * Callback function for program account change notifications\n */\nexport type ProgramAccountChangeCallback = (\n  keyedAccountInfo: KeyedAccountInfo,\n  context: Context,\n) => void;\n\n/**\n * Callback function for slot change notifications\n */\nexport type SlotChangeCallback = (slotInfo: SlotInfo) => void;\n\n/**\n * Callback function for slot update notifications\n */\nexport type SlotUpdateCallback = (slotUpdate: SlotUpdate) => void;\n\n/**\n * Callback function for signature status notifications\n */\nexport type SignatureResultCallback = (\n  signatureResult: SignatureResult,\n  context: Context,\n) => void;\n\n/**\n * Signature status notification with transaction result\n */\nexport type SignatureStatusNotification = {\n  type: 'status';\n  result: SignatureResult;\n};\n\n/**\n * Signature received notification\n */\nexport type SignatureReceivedNotification = {\n  type: 'received';\n};\n\n/**\n * Callback function for signature notifications\n */\nexport type SignatureSubscriptionCallback = (\n  notification: SignatureStatusNotification | SignatureReceivedNotification,\n  context: Context,\n) => void;\n\n/**\n * Signature subscription options\n */\nexport type SignatureSubscriptionOptions = {\n  commitment?: Commitment;\n  enableReceivedNotification?: boolean;\n};\n\n/**\n * Callback function for root change notifications\n */\nexport type RootChangeCallback = (root: number) => void;\n\n/**\n * @internal\n */\nconst LogsResult = pick({\n  err: TransactionErrorResult,\n  logs: array(string()),\n  signature: string(),\n});\n\n/**\n * Logs result.\n */\nexport type Logs = {\n  err: TransactionError | null;\n  logs: string[];\n  signature: string;\n};\n\n/**\n * Expected JSON RPC response for the \"logsNotification\" message.\n */\nconst LogsNotificationResult = pick({\n  result: notificationResultAndContext(LogsResult),\n  subscription: number(),\n});\n\n/**\n * Filter for log subscriptions.\n */\nexport type LogsFilter = PublicKey | 'all' | 'allWithVotes';\n\n/**\n * Callback function for log notifications.\n */\nexport type LogsCallback = (logs: Logs, ctx: Context) => void;\n\n/**\n * Signature result\n */\nexport type SignatureResult = {\n  err: TransactionError | null;\n};\n\n/**\n * Transaction error\n */\nexport type TransactionError = {} | string;\n\n/**\n * Transaction confirmation status\n * <pre>\n *   'processed': Transaction landed in a block which has reached 1 confirmation by the connected node\n *   'confirmed': Transaction landed in a block which has reached 1 confirmation by the cluster\n *   'finalized': Transaction landed in a block which has been finalized by the cluster\n * </pre>\n */\nexport type TransactionConfirmationStatus =\n  | 'processed'\n  | 'confirmed'\n  | 'finalized';\n\n/**\n * Signature status\n */\nexport type SignatureStatus = {\n  /** when the transaction was processed */\n  slot: number;\n  /** the number of blocks that have been confirmed and voted on in the fork containing `slot` */\n  confirmations: number | null;\n  /** transaction error, if any */\n  err: TransactionError | null;\n  /** cluster confirmation status, if data available. Possible responses: `processed`, `confirmed`, `finalized` */\n  confirmationStatus?: TransactionConfirmationStatus;\n};\n\n/**\n * A confirmed signature with its status\n */\nexport type ConfirmedSignatureInfo = {\n  /** the transaction signature */\n  signature: string;\n  /** when the transaction was processed */\n  slot: number;\n  /** error, if any */\n  err: TransactionError | null;\n  /** memo associated with the transaction, if any */\n  memo: string | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n  /** Cluster confirmation status, if available. Possible values: `processed`, `confirmed`, `finalized` */\n  confirmationStatus?: TransactionConfirmationStatus;\n};\n\n/**\n * An object defining headers to be passed to the RPC server\n */\nexport type HttpHeaders = {\n  [header: string]: string;\n} & {\n  // Prohibited headers; for internal use only.\n  'solana-client'?: never;\n};\n\n/**\n * The type of the JavaScript `fetch()` API\n */\nexport type FetchFn = typeof fetchImpl;\n\n/**\n * A callback used to augment the outgoing HTTP request\n */\nexport type FetchMiddleware = (\n  info: Parameters<FetchFn>[0],\n  init: Parameters<FetchFn>[1],\n  fetch: (...a: Parameters<FetchFn>) => void,\n) => void;\n\n/**\n * Configuration for instantiating a Connection\n */\nexport type ConnectionConfig = {\n  /**\n   * An `http.Agent` that will be used to manage socket connections (eg. to implement connection\n   * persistence). Set this to `false` to create a connection that uses no agent. This applies to\n   * Node environments only.\n   */\n  httpAgent?: NodeHttpAgent | NodeHttpsAgent | false;\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional endpoint URL to the fullnode JSON RPC PubSub WebSocket Endpoint */\n  wsEndpoint?: string;\n  /** Optional HTTP headers object */\n  httpHeaders?: HttpHeaders;\n  /** Optional custom fetch function */\n  fetch?: FetchFn;\n  /** Optional fetch middleware callback */\n  fetchMiddleware?: FetchMiddleware;\n  /** Optional Disable retrying calls when server responds with HTTP 429 (Too Many Requests) */\n  disableRetryOnRateLimit?: boolean;\n  /** time to allow for the server to initially process a transaction (in milliseconds) */\n  confirmTransactionInitialTimeout?: number;\n};\n\n/** @internal */\nconst COMMON_HTTP_HEADERS = {\n  'solana-client': `js/${process.env.npm_package_version ?? 'UNKNOWN'}`,\n};\n\n/**\n * A connection to a fullnode JSON RPC endpoint\n */\nexport class Connection {\n  /** @internal */ _commitment?: Commitment;\n  /** @internal */ _confirmTransactionInitialTimeout?: number;\n  /** @internal */ _rpcEndpoint: string;\n  /** @internal */ _rpcWsEndpoint: string;\n  /** @internal */ _rpcClient: RpcClient;\n  /** @internal */ _rpcRequest: RpcRequest;\n  /** @internal */ _rpcBatchRequest: RpcBatchRequest;\n  /** @internal */ _rpcWebSocket: RpcWebSocketClient;\n  /** @internal */ _rpcWebSocketConnected: boolean = false;\n  /** @internal */ _rpcWebSocketHeartbeat: ReturnType<\n    typeof setInterval\n  > | null = null;\n  /** @internal */ _rpcWebSocketIdleTimeout: ReturnType<\n    typeof setTimeout\n  > | null = null;\n  /** @internal\n   * A number that we increment every time an active connection closes.\n   * Used to determine whether the same socket connection that was open\n   * when an async operation started is the same one that's active when\n   * its continuation fires.\n   *\n   */ private _rpcWebSocketGeneration: number = 0;\n\n  /** @internal */ _disableBlockhashCaching: boolean = false;\n  /** @internal */ _pollingBlockhash: boolean = false;\n  /** @internal */ _blockhashInfo: {\n    latestBlockhash: BlockhashWithExpiryBlockHeight | null;\n    lastFetch: number;\n    simulatedSignatures: Array<string>;\n    transactionSignatures: Array<string>;\n  } = {\n    latestBlockhash: null,\n    lastFetch: 0,\n    transactionSignatures: [],\n    simulatedSignatures: [],\n  };\n\n  /** @internal */ private _nextClientSubscriptionId: ClientSubscriptionId = 0;\n  /** @internal */ private _subscriptionDisposeFunctionsByClientSubscriptionId: {\n    [clientSubscriptionId: ClientSubscriptionId]:\n      | SubscriptionDisposeFn\n      | undefined;\n  } = {};\n  /** @internal */ private _subscriptionHashByClientSubscriptionId: {\n    [clientSubscriptionId: ClientSubscriptionId]:\n      | SubscriptionConfigHash\n      | undefined;\n  } = {};\n  /** @internal */ private _subscriptionStateChangeCallbacksByHash: {\n    [hash: SubscriptionConfigHash]:\n      | Set<SubscriptionStateChangeCallback>\n      | undefined;\n  } = {};\n  /** @internal */ private _subscriptionCallbacksByServerSubscriptionId: {\n    [serverSubscriptionId: ServerSubscriptionId]:\n      | Set<SubscriptionConfig['callback']>\n      | undefined;\n  } = {};\n  /** @internal */ private _subscriptionsByHash: {\n    [hash: SubscriptionConfigHash]: Subscription | undefined;\n  } = {};\n  /**\n   * Special case.\n   * After a signature is processed, RPCs automatically dispose of the\n   * subscription on the server side. We need to track which of these\n   * subscriptions have been disposed in such a way, so that we know\n   * whether the client is dealing with a not-yet-processed signature\n   * (in which case we must tear down the server subscription) or an\n   * already-processed signature (in which case the client can simply\n   * clear out the subscription locally without telling the server).\n   *\n   * NOTE: There is a proposal to eliminate this special case, here:\n   * https://github.com/solana-labs/solana/issues/18892\n   */\n  /** @internal */ private _subscriptionsAutoDisposedByRpc: Set<ServerSubscriptionId> =\n    new Set();\n\n  /**\n   * Establish a JSON RPC connection\n   *\n   * @param endpoint URL to the fullnode JSON RPC endpoint\n   * @param commitmentOrConfig optional default commitment level or optional ConnectionConfig configuration object\n   */\n  constructor(\n    endpoint: string,\n    commitmentOrConfig?: Commitment | ConnectionConfig,\n  ) {\n    let wsEndpoint;\n    let httpHeaders;\n    let fetch;\n    let fetchMiddleware;\n    let disableRetryOnRateLimit;\n    let httpAgent;\n    if (commitmentOrConfig && typeof commitmentOrConfig === 'string') {\n      this._commitment = commitmentOrConfig;\n    } else if (commitmentOrConfig) {\n      this._commitment = commitmentOrConfig.commitment;\n      this._confirmTransactionInitialTimeout =\n        commitmentOrConfig.confirmTransactionInitialTimeout;\n      wsEndpoint = commitmentOrConfig.wsEndpoint;\n      httpHeaders = commitmentOrConfig.httpHeaders;\n      fetch = commitmentOrConfig.fetch;\n      fetchMiddleware = commitmentOrConfig.fetchMiddleware;\n      disableRetryOnRateLimit = commitmentOrConfig.disableRetryOnRateLimit;\n      httpAgent = commitmentOrConfig.httpAgent;\n    }\n\n    this._rpcEndpoint = assertEndpointUrl(endpoint);\n    this._rpcWsEndpoint = wsEndpoint || makeWebsocketUrl(endpoint);\n\n    this._rpcClient = createRpcClient(\n      endpoint,\n      httpHeaders,\n      fetch,\n      fetchMiddleware,\n      disableRetryOnRateLimit,\n      httpAgent,\n    );\n    this._rpcRequest = createRpcRequest(this._rpcClient);\n    this._rpcBatchRequest = createRpcBatchRequest(this._rpcClient);\n\n    this._rpcWebSocket = new RpcWebSocketClient(this._rpcWsEndpoint, {\n      autoconnect: false,\n      max_reconnects: Infinity,\n    });\n    this._rpcWebSocket.on('open', this._wsOnOpen.bind(this));\n    this._rpcWebSocket.on('error', this._wsOnError.bind(this));\n    this._rpcWebSocket.on('close', this._wsOnClose.bind(this));\n    this._rpcWebSocket.on(\n      'accountNotification',\n      this._wsOnAccountNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'programNotification',\n      this._wsOnProgramAccountNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'slotNotification',\n      this._wsOnSlotNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'slotsUpdatesNotification',\n      this._wsOnSlotUpdatesNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'signatureNotification',\n      this._wsOnSignatureNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'rootNotification',\n      this._wsOnRootNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'logsNotification',\n      this._wsOnLogsNotification.bind(this),\n    );\n  }\n\n  /**\n   * The default commitment used for requests\n   */\n  get commitment(): Commitment | undefined {\n    return this._commitment;\n  }\n\n  /**\n   * The RPC endpoint\n   */\n  get rpcEndpoint(): string {\n    return this._rpcEndpoint;\n  }\n\n  /**\n   * Fetch the balance for the specified public key, return with context\n   */\n  async getBalanceAndContext(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetBalanceConfig,\n  ): Promise<RpcResponseAndContext<number>> {\n    /** @internal */\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getBalance', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get balance for ${publicKey.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the balance for the specified public key\n   */\n  async getBalance(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetBalanceConfig,\n  ): Promise<number> {\n    return await this.getBalanceAndContext(publicKey, commitmentOrConfig)\n      .then(x => x.value)\n      .catch(e => {\n        throw new Error(\n          'failed to get balance of account ' + publicKey.toBase58() + ': ' + e,\n        );\n      });\n  }\n\n  /**\n   * Fetch the estimated production time of a block\n   */\n  async getBlockTime(slot: number): Promise<number | null> {\n    const unsafeRes = await this._rpcRequest('getBlockTime', [slot]);\n    const res = create(unsafeRes, jsonRpcResult(nullable(number())));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get block time for slot ${slot}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the lowest slot that the node has information about in its ledger.\n   * This value may increase over time if the node is configured to purge older ledger data\n   */\n  async getMinimumLedgerSlot(): Promise<number> {\n    const unsafeRes = await this._rpcRequest('minimumLedgerSlot', []);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get minimum ledger slot',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the slot of the lowest confirmed block that has not been purged from the ledger\n   */\n  async getFirstAvailableBlock(): Promise<number> {\n    const unsafeRes = await this._rpcRequest('getFirstAvailableBlock', []);\n    const res = create(unsafeRes, SlotRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get first available block',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch information about the current supply\n   */\n  async getSupply(\n    config?: GetSupplyConfig | Commitment,\n  ): Promise<RpcResponseAndContext<Supply>> {\n    let configArg: GetSupplyConfig = {};\n    if (typeof config === 'string') {\n      configArg = {commitment: config};\n    } else if (config) {\n      configArg = {\n        ...config,\n        commitment: (config && config.commitment) || this.commitment,\n      };\n    } else {\n      configArg = {\n        commitment: this.commitment,\n      };\n    }\n\n    const unsafeRes = await this._rpcRequest('getSupply', [configArg]);\n    const res = create(unsafeRes, GetSupplyRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get supply');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current supply of a token mint\n   */\n  async getTokenSupply(\n    tokenMintAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<TokenAmount>> {\n    const args = this._buildArgs([tokenMintAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenSupply', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(TokenAmountResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get token supply');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current balance of a token account\n   */\n  async getTokenAccountBalance(\n    tokenAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<TokenAmount>> {\n    const args = this._buildArgs([tokenAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenAccountBalance', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(TokenAmountResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get token account balance',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the token accounts owned by the specified account\n   *\n   * @return {Promise<RpcResponseAndContext<GetProgramAccountsResponse>}\n   */\n  async getTokenAccountsByOwner(\n    ownerAddress: PublicKey,\n    filter: TokenAccountsFilter,\n    commitmentOrConfig?: Commitment | GetTokenAccountsByOwnerConfig,\n  ): Promise<RpcResponseAndContext<GetProgramAccountsResponse>> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    let _args: any[] = [ownerAddress.toBase58()];\n    if ('mint' in filter) {\n      _args.push({mint: filter.mint.toBase58()});\n    } else {\n      _args.push({programId: filter.programId.toBase58()});\n    }\n\n    const args = this._buildArgs(_args, commitment, 'base64', config);\n    const unsafeRes = await this._rpcRequest('getTokenAccountsByOwner', args);\n    const res = create(unsafeRes, GetTokenAccountsByOwner);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get token accounts owned by account ${ownerAddress.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed token accounts owned by the specified account\n   *\n   * @return {Promise<RpcResponseAndContext<Array<{pubkey: PublicKey, account: AccountInfo<ParsedAccountData>}>>>}\n   */\n  async getParsedTokenAccountsByOwner(\n    ownerAddress: PublicKey,\n    filter: TokenAccountsFilter,\n    commitment?: Commitment,\n  ): Promise<\n    RpcResponseAndContext<\n      Array<{pubkey: PublicKey; account: AccountInfo<ParsedAccountData>}>\n    >\n  > {\n    let _args: any[] = [ownerAddress.toBase58()];\n    if ('mint' in filter) {\n      _args.push({mint: filter.mint.toBase58()});\n    } else {\n      _args.push({programId: filter.programId.toBase58()});\n    }\n\n    const args = this._buildArgs(_args, commitment, 'jsonParsed');\n    const unsafeRes = await this._rpcRequest('getTokenAccountsByOwner', args);\n    const res = create(unsafeRes, GetParsedTokenAccountsByOwner);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get token accounts owned by account ${ownerAddress.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the 20 largest accounts with their current balances\n   */\n  async getLargestAccounts(\n    config?: GetLargestAccountsConfig,\n  ): Promise<RpcResponseAndContext<Array<AccountBalancePair>>> {\n    const arg = {\n      ...config,\n      commitment: (config && config.commitment) || this.commitment,\n    };\n    const args = arg.filter || arg.commitment ? [arg] : [];\n    const unsafeRes = await this._rpcRequest('getLargestAccounts', args);\n    const res = create(unsafeRes, GetLargestAccountsRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get largest accounts');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the 20 largest token accounts with their current balances\n   * for a given mint.\n   */\n  async getTokenLargestAccounts(\n    mintAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<Array<TokenAccountBalancePair>>> {\n    const args = this._buildArgs([mintAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenLargestAccounts', args);\n    const res = create(unsafeRes, GetTokenLargestAccountsResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get token largest accounts',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for the specified public key, return with context\n   */\n  async getAccountInfoAndContext(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetAccountInfoConfig,\n  ): Promise<RpcResponseAndContext<AccountInfo<Buffer> | null>> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      'base64',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getAccountInfo', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(nullable(AccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get info about account ${publicKey.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed account info for the specified public key\n   */\n  async getParsedAccountInfo(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetAccountInfoConfig,\n  ): Promise<\n    RpcResponseAndContext<AccountInfo<Buffer | ParsedAccountData> | null>\n  > {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      'jsonParsed',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getAccountInfo', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(nullable(ParsedAccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get info about account ${publicKey.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for the specified public key\n   */\n  async getAccountInfo(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetAccountInfoConfig,\n  ): Promise<AccountInfo<Buffer> | null> {\n    try {\n      const res = await this.getAccountInfoAndContext(\n        publicKey,\n        commitmentOrConfig,\n      );\n      return res.value;\n    } catch (e) {\n      throw new Error(\n        'failed to get info about account ' + publicKey.toBase58() + ': ' + e,\n      );\n    }\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys, return with context\n   */\n  async getMultipleParsedAccounts(\n    publicKeys: PublicKey[],\n    rawConfig?: GetMultipleAccountsConfig,\n  ): Promise<\n    RpcResponseAndContext<(AccountInfo<Buffer | ParsedAccountData> | null)[]>\n  > {\n    const {commitment, config} = extractCommitmentFromConfig(rawConfig);\n    const keys = publicKeys.map(key => key.toBase58());\n    const args = this._buildArgs([keys], commitment, 'jsonParsed', config);\n    const unsafeRes = await this._rpcRequest('getMultipleAccounts', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(array(nullable(ParsedAccountInfoResult))),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get info for accounts ${keys}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys, return with context\n   */\n  async getMultipleAccountsInfoAndContext(\n    publicKeys: PublicKey[],\n    commitmentOrConfig?: Commitment | GetMultipleAccountsConfig,\n  ): Promise<RpcResponseAndContext<(AccountInfo<Buffer> | null)[]>> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const keys = publicKeys.map(key => key.toBase58());\n    const args = this._buildArgs([keys], commitment, 'base64', config);\n    const unsafeRes = await this._rpcRequest('getMultipleAccounts', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(array(nullable(AccountInfoResult))),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get info for accounts ${keys}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys\n   */\n  async getMultipleAccountsInfo(\n    publicKeys: PublicKey[],\n    commitmentOrConfig?: Commitment | GetMultipleAccountsConfig,\n  ): Promise<(AccountInfo<Buffer> | null)[]> {\n    const res = await this.getMultipleAccountsInfoAndContext(\n      publicKeys,\n      commitmentOrConfig,\n    );\n    return res.value;\n  }\n\n  /**\n   * Returns epoch activation information for a stake account that has been delegated\n   */\n  async getStakeActivation(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetStakeActivationConfig,\n    epoch?: number,\n  ): Promise<StakeActivationData> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      undefined /* encoding */,\n      {\n        ...config,\n        epoch: epoch != null ? epoch : config?.epoch,\n      },\n    );\n\n    const unsafeRes = await this._rpcRequest('getStakeActivation', args);\n    const res = create(unsafeRes, jsonRpcResult(StakeActivationResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get Stake Activation ${publicKey.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the accounts owned by the specified program id\n   *\n   * @return {Promise<Array<{pubkey: PublicKey, account: AccountInfo<Buffer>}>>}\n   */\n  async getProgramAccounts(\n    programId: PublicKey,\n    configOrCommitment: GetProgramAccountsConfig &\n      Readonly<{withContext: true}>,\n  ): Promise<RpcResponseAndContext<GetProgramAccountsResponse>>;\n  // eslint-disable-next-line no-dupe-class-members\n  async getProgramAccounts(\n    programId: PublicKey,\n    configOrCommitment?: GetProgramAccountsConfig | Commitment,\n  ): Promise<GetProgramAccountsResponse>;\n  // eslint-disable-next-line no-dupe-class-members\n  async getProgramAccounts(\n    programId: PublicKey,\n    configOrCommitment?: GetProgramAccountsConfig | Commitment,\n  ): Promise<\n    | GetProgramAccountsResponse\n    | RpcResponseAndContext<GetProgramAccountsResponse>\n  > {\n    const {commitment, config} =\n      extractCommitmentFromConfig(configOrCommitment);\n    const {encoding, ...configWithoutEncoding} = config || {};\n    const args = this._buildArgs(\n      [programId.toBase58()],\n      commitment,\n      encoding || 'base64',\n      configWithoutEncoding,\n    );\n    const unsafeRes = await this._rpcRequest('getProgramAccounts', args);\n    const baseSchema = array(KeyedAccountInfoResult);\n    const res =\n      configWithoutEncoding.withContext === true\n        ? create(unsafeRes, jsonRpcResultAndContext(baseSchema))\n        : create(unsafeRes, jsonRpcResult(baseSchema));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get accounts owned by program ${programId.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch and parse all the accounts owned by the specified program id\n   *\n   * @return {Promise<Array<{pubkey: PublicKey, account: AccountInfo<Buffer | ParsedAccountData>}>>}\n   */\n  async getParsedProgramAccounts(\n    programId: PublicKey,\n    configOrCommitment?: GetParsedProgramAccountsConfig | Commitment,\n  ): Promise<\n    Array<{\n      pubkey: PublicKey;\n      account: AccountInfo<Buffer | ParsedAccountData>;\n    }>\n  > {\n    const {commitment, config} =\n      extractCommitmentFromConfig(configOrCommitment);\n    const args = this._buildArgs(\n      [programId.toBase58()],\n      commitment,\n      'jsonParsed',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getProgramAccounts', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResult(array(KeyedParsedAccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get accounts owned by program ${programId.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  confirmTransaction(\n    strategy: TransactionConfirmationStrategy,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<SignatureResult>>;\n\n  /** @deprecated Instead, call `confirmTransaction` and pass in {@link TransactionConfirmationStrategy} */\n  // eslint-disable-next-line no-dupe-class-members\n  confirmTransaction(\n    strategy: TransactionSignature,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<SignatureResult>>;\n\n  // eslint-disable-next-line no-dupe-class-members\n  async confirmTransaction(\n    strategy: TransactionConfirmationStrategy | TransactionSignature,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<SignatureResult>> {\n    let rawSignature: string;\n\n    if (typeof strategy == 'string') {\n      rawSignature = strategy;\n    } else {\n      const config = strategy as TransactionConfirmationStrategy;\n\n      if (config.abortSignal?.aborted) {\n        return Promise.reject(config.abortSignal.reason);\n      }\n      rawSignature = config.signature;\n    }\n\n    let decodedSignature;\n\n    try {\n      decodedSignature = bs58.decode(rawSignature);\n    } catch (err) {\n      throw new Error('signature must be base58 encoded: ' + rawSignature);\n    }\n\n    assert(decodedSignature.length === 64, 'signature has invalid length');\n\n    if (typeof strategy === 'string') {\n      return await this.confirmTransactionUsingLegacyTimeoutStrategy({\n        commitment: commitment || this.commitment,\n        signature: rawSignature,\n      });\n    } else if ('lastValidBlockHeight' in strategy) {\n      return await this.confirmTransactionUsingBlockHeightExceedanceStrategy({\n        commitment: commitment || this.commitment,\n        strategy,\n      });\n    } else {\n      return await this.confirmTransactionUsingDurableNonceStrategy({\n        commitment: commitment || this.commitment,\n        strategy,\n      });\n    }\n  }\n\n  private getCancellationPromise(signal?: AbortSignal): Promise<never> {\n    return new Promise<never>((_, reject) => {\n      if (signal == null) {\n        return;\n      }\n      if (signal.aborted) {\n        reject(signal.reason);\n      } else {\n        signal.addEventListener('abort', () => {\n          reject(signal.reason);\n        });\n      }\n    });\n  }\n\n  private getTransactionConfirmationPromise({\n    commitment,\n    signature,\n  }: {\n    commitment?: Commitment;\n    signature: string;\n  }): {\n    abortConfirmation(): void;\n    confirmationPromise: Promise<{\n      __type: TransactionStatus.PROCESSED;\n      response: RpcResponseAndContext<SignatureResult>;\n    }>;\n  } {\n    let signatureSubscriptionId: number | undefined;\n    let disposeSignatureSubscriptionStateChangeObserver:\n      | SubscriptionStateChangeDisposeFn\n      | undefined;\n    let done = false;\n    const confirmationPromise = new Promise<{\n      __type: TransactionStatus.PROCESSED;\n      response: RpcResponseAndContext<SignatureResult>;\n    }>((resolve, reject) => {\n      try {\n        signatureSubscriptionId = this.onSignature(\n          signature,\n          (result: SignatureResult, context: Context) => {\n            signatureSubscriptionId = undefined;\n            const response = {\n              context,\n              value: result,\n            };\n            resolve({__type: TransactionStatus.PROCESSED, response});\n          },\n          commitment,\n        );\n        const subscriptionSetupPromise = new Promise<void>(\n          resolveSubscriptionSetup => {\n            if (signatureSubscriptionId == null) {\n              resolveSubscriptionSetup();\n            } else {\n              disposeSignatureSubscriptionStateChangeObserver =\n                this._onSubscriptionStateChange(\n                  signatureSubscriptionId,\n                  nextState => {\n                    if (nextState === 'subscribed') {\n                      resolveSubscriptionSetup();\n                    }\n                  },\n                );\n            }\n          },\n        );\n        (async () => {\n          await subscriptionSetupPromise;\n          if (done) return;\n          const response = await this.getSignatureStatus(signature);\n          if (done) return;\n          if (response == null) {\n            return;\n          }\n          const {context, value} = response;\n          if (value == null) {\n            return;\n          }\n          if (value?.err) {\n            reject(value.err);\n          } else {\n            switch (commitment) {\n              case 'confirmed':\n              case 'single':\n              case 'singleGossip': {\n                if (value.confirmationStatus === 'processed') {\n                  return;\n                }\n                break;\n              }\n              case 'finalized':\n              case 'max':\n              case 'root': {\n                if (\n                  value.confirmationStatus === 'processed' ||\n                  value.confirmationStatus === 'confirmed'\n                ) {\n                  return;\n                }\n                break;\n              }\n              // exhaust enums to ensure full coverage\n              case 'processed':\n              case 'recent':\n            }\n            done = true;\n            resolve({\n              __type: TransactionStatus.PROCESSED,\n              response: {\n                context,\n                value,\n              },\n            });\n          }\n        })();\n      } catch (err) {\n        reject(err);\n      }\n    });\n    const abortConfirmation = () => {\n      if (disposeSignatureSubscriptionStateChangeObserver) {\n        disposeSignatureSubscriptionStateChangeObserver();\n        disposeSignatureSubscriptionStateChangeObserver = undefined;\n      }\n      if (signatureSubscriptionId != null) {\n        this.removeSignatureListener(signatureSubscriptionId);\n        signatureSubscriptionId = undefined;\n      }\n    };\n    return {abortConfirmation, confirmationPromise};\n  }\n\n  private async confirmTransactionUsingBlockHeightExceedanceStrategy({\n    commitment,\n    strategy: {abortSignal, lastValidBlockHeight, signature},\n  }: {\n    commitment?: Commitment;\n    strategy: BlockheightBasedTransactionConfirmationStrategy;\n  }) {\n    let done: boolean = false;\n    const expiryPromise = new Promise<{\n      __type: TransactionStatus.BLOCKHEIGHT_EXCEEDED;\n    }>(resolve => {\n      const checkBlockHeight = async () => {\n        try {\n          const blockHeight = await this.getBlockHeight(commitment);\n          return blockHeight;\n        } catch (_e) {\n          return -1;\n        }\n      };\n      (async () => {\n        let currentBlockHeight = await checkBlockHeight();\n        if (done) return;\n        while (currentBlockHeight <= lastValidBlockHeight) {\n          await sleep(1000);\n          if (done) return;\n          currentBlockHeight = await checkBlockHeight();\n          if (done) return;\n        }\n        resolve({__type: TransactionStatus.BLOCKHEIGHT_EXCEEDED});\n      })();\n    });\n    const {abortConfirmation, confirmationPromise} =\n      this.getTransactionConfirmationPromise({commitment, signature});\n    const cancellationPromise = this.getCancellationPromise(abortSignal);\n    let result: RpcResponseAndContext<SignatureResult>;\n    try {\n      const outcome = await Promise.race([\n        cancellationPromise,\n        confirmationPromise,\n        expiryPromise,\n      ]);\n      if (outcome.__type === TransactionStatus.PROCESSED) {\n        result = outcome.response;\n      } else {\n        throw new TransactionExpiredBlockheightExceededError(signature);\n      }\n    } finally {\n      done = true;\n      abortConfirmation();\n    }\n    return result;\n  }\n\n  private async confirmTransactionUsingDurableNonceStrategy({\n    commitment,\n    strategy: {\n      abortSignal,\n      minContextSlot,\n      nonceAccountPubkey,\n      nonceValue,\n      signature,\n    },\n  }: {\n    commitment?: Commitment;\n    strategy: DurableNonceTransactionConfirmationStrategy;\n  }) {\n    let done: boolean = false;\n    const expiryPromise = new Promise<{\n      __type: TransactionStatus.NONCE_INVALID;\n      slotInWhichNonceDidAdvance: number | null;\n    }>(resolve => {\n      let currentNonceValue: string | undefined = nonceValue;\n      let lastCheckedSlot: number | null = null;\n      const getCurrentNonceValue = async () => {\n        try {\n          const {context, value: nonceAccount} = await this.getNonceAndContext(\n            nonceAccountPubkey,\n            {\n              commitment,\n              minContextSlot,\n            },\n          );\n          lastCheckedSlot = context.slot;\n          return nonceAccount?.nonce;\n        } catch (e) {\n          // If for whatever reason we can't reach/read the nonce\n          // account, just keep using the last-known value.\n          return currentNonceValue;\n        }\n      };\n      (async () => {\n        currentNonceValue = await getCurrentNonceValue();\n        if (done) return;\n        while (\n          true // eslint-disable-line no-constant-condition\n        ) {\n          if (nonceValue !== currentNonceValue) {\n            resolve({\n              __type: TransactionStatus.NONCE_INVALID,\n              slotInWhichNonceDidAdvance: lastCheckedSlot,\n            });\n            return;\n          }\n          await sleep(2000);\n          if (done) return;\n          currentNonceValue = await getCurrentNonceValue();\n          if (done) return;\n        }\n      })();\n    });\n    const {abortConfirmation, confirmationPromise} =\n      this.getTransactionConfirmationPromise({commitment, signature});\n    const cancellationPromise = this.getCancellationPromise(abortSignal);\n    let result: RpcResponseAndContext<SignatureResult>;\n    try {\n      const outcome = await Promise.race([\n        cancellationPromise,\n        confirmationPromise,\n        expiryPromise,\n      ]);\n      if (outcome.__type === TransactionStatus.PROCESSED) {\n        result = outcome.response;\n      } else {\n        // Double check that the transaction is indeed unconfirmed.\n        let signatureStatus:\n          | RpcResponseAndContext<SignatureStatus | null>\n          | null\n          | undefined;\n        while (\n          true // eslint-disable-line no-constant-condition\n        ) {\n          const status = await this.getSignatureStatus(signature);\n          if (status == null) {\n            break;\n          }\n          if (\n            status.context.slot <\n            (outcome.slotInWhichNonceDidAdvance ?? minContextSlot)\n          ) {\n            await sleep(400);\n            continue;\n          }\n          signatureStatus = status;\n          break;\n        }\n        if (signatureStatus?.value) {\n          const commitmentForStatus = commitment || 'finalized';\n          const {confirmationStatus} = signatureStatus.value;\n          switch (commitmentForStatus) {\n            case 'processed':\n            case 'recent':\n              if (\n                confirmationStatus !== 'processed' &&\n                confirmationStatus !== 'confirmed' &&\n                confirmationStatus !== 'finalized'\n              ) {\n                throw new TransactionExpiredNonceInvalidError(signature);\n              }\n              break;\n            case 'confirmed':\n            case 'single':\n            case 'singleGossip':\n              if (\n                confirmationStatus !== 'confirmed' &&\n                confirmationStatus !== 'finalized'\n              ) {\n                throw new TransactionExpiredNonceInvalidError(signature);\n              }\n              break;\n            case 'finalized':\n            case 'max':\n            case 'root':\n              if (confirmationStatus !== 'finalized') {\n                throw new TransactionExpiredNonceInvalidError(signature);\n              }\n              break;\n            default:\n              // Exhaustive switch.\n              // eslint-disable-next-line @typescript-eslint/no-unused-vars\n              ((_: never) => {})(commitmentForStatus);\n          }\n          result = {\n            context: signatureStatus.context,\n            value: {err: signatureStatus.value.err},\n          };\n        } else {\n          throw new TransactionExpiredNonceInvalidError(signature);\n        }\n      }\n    } finally {\n      done = true;\n      abortConfirmation();\n    }\n    return result;\n  }\n\n  private async confirmTransactionUsingLegacyTimeoutStrategy({\n    commitment,\n    signature,\n  }: {\n    commitment?: Commitment;\n    signature: string;\n  }) {\n    let timeoutId;\n    const expiryPromise = new Promise<{\n      __type: TransactionStatus.TIMED_OUT;\n      timeoutMs: number;\n    }>(resolve => {\n      let timeoutMs = this._confirmTransactionInitialTimeout || 60 * 1000;\n      switch (commitment) {\n        case 'processed':\n        case 'recent':\n        case 'single':\n        case 'confirmed':\n        case 'singleGossip': {\n          timeoutMs = this._confirmTransactionInitialTimeout || 30 * 1000;\n          break;\n        }\n        // exhaust enums to ensure full coverage\n        case 'finalized':\n        case 'max':\n        case 'root':\n      }\n      timeoutId = setTimeout(\n        () => resolve({__type: TransactionStatus.TIMED_OUT, timeoutMs}),\n        timeoutMs,\n      );\n    });\n    const {abortConfirmation, confirmationPromise} =\n      this.getTransactionConfirmationPromise({\n        commitment,\n        signature,\n      });\n    let result: RpcResponseAndContext<SignatureResult>;\n    try {\n      const outcome = await Promise.race([confirmationPromise, expiryPromise]);\n      if (outcome.__type === TransactionStatus.PROCESSED) {\n        result = outcome.response;\n      } else {\n        throw new TransactionExpiredTimeoutError(\n          signature,\n          outcome.timeoutMs / 1000,\n        );\n      }\n    } finally {\n      clearTimeout(timeoutId);\n      abortConfirmation();\n    }\n    return result;\n  }\n\n  /**\n   * Return the list of nodes that are currently participating in the cluster\n   */\n  async getClusterNodes(): Promise<Array<ContactInfo>> {\n    const unsafeRes = await this._rpcRequest('getClusterNodes', []);\n    const res = create(unsafeRes, jsonRpcResult(array(ContactInfoResult)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get cluster nodes');\n    }\n    return res.result;\n  }\n\n  /**\n   * Return the list of nodes that are currently participating in the cluster\n   */\n  async getVoteAccounts(commitment?: Commitment): Promise<VoteAccountStatus> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getVoteAccounts', args);\n    const res = create(unsafeRes, GetVoteAccounts);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get vote accounts');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current slot that the node is processing\n   */\n  async getSlot(\n    commitmentOrConfig?: Commitment | GetSlotConfig,\n  ): Promise<number> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getSlot', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current slot leader of the cluster\n   */\n  async getSlotLeader(\n    commitmentOrConfig?: Commitment | GetSlotLeaderConfig,\n  ): Promise<string> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getSlotLeader', args);\n    const res = create(unsafeRes, jsonRpcResult(string()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot leader');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch `limit` number of slot leaders starting from `startSlot`\n   *\n   * @param startSlot fetch slot leaders starting from this slot\n   * @param limit number of slot leaders to return\n   */\n  async getSlotLeaders(\n    startSlot: number,\n    limit: number,\n  ): Promise<Array<PublicKey>> {\n    const args = [startSlot, limit];\n    const unsafeRes = await this._rpcRequest('getSlotLeaders', args);\n    const res = create(unsafeRes, jsonRpcResult(array(PublicKeyFromString)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot leaders');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current status of a signature\n   */\n  async getSignatureStatus(\n    signature: TransactionSignature,\n    config?: SignatureStatusConfig,\n  ): Promise<RpcResponseAndContext<SignatureStatus | null>> {\n    const {context, value: values} = await this.getSignatureStatuses(\n      [signature],\n      config,\n    );\n    assert(values.length === 1);\n    const value = values[0];\n    return {context, value};\n  }\n\n  /**\n   * Fetch the current statuses of a batch of signatures\n   */\n  async getSignatureStatuses(\n    signatures: Array<TransactionSignature>,\n    config?: SignatureStatusConfig,\n  ): Promise<RpcResponseAndContext<Array<SignatureStatus | null>>> {\n    const params: any[] = [signatures];\n    if (config) {\n      params.push(config);\n    }\n    const unsafeRes = await this._rpcRequest('getSignatureStatuses', params);\n    const res = create(unsafeRes, GetSignatureStatusesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get signature status');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current transaction count of the cluster\n   */\n  async getTransactionCount(\n    commitmentOrConfig?: Commitment | GetTransactionCountConfig,\n  ): Promise<number> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getTransactionCount', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get transaction count',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current total currency supply of the cluster in lamports\n   *\n   * @deprecated Deprecated since v1.2.8. Please use {@link getSupply} instead.\n   */\n  async getTotalSupply(commitment?: Commitment): Promise<number> {\n    const result = await this.getSupply({\n      commitment,\n      excludeNonCirculatingAccountsList: true,\n    });\n    return result.value.total;\n  }\n\n  /**\n   * Fetch the cluster InflationGovernor parameters\n   */\n  async getInflationGovernor(\n    commitment?: Commitment,\n  ): Promise<InflationGovernor> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getInflationGovernor', args);\n    const res = create(unsafeRes, GetInflationGovernorRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get inflation');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the inflation reward for a list of addresses for an epoch\n   */\n  async getInflationReward(\n    addresses: PublicKey[],\n    epoch?: number,\n    commitmentOrConfig?: Commitment | GetInflationRewardConfig,\n  ): Promise<(InflationReward | null)[]> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [addresses.map(pubkey => pubkey.toBase58())],\n      commitment,\n      undefined /* encoding */,\n      {\n        ...config,\n        epoch: epoch != null ? epoch : config?.epoch,\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getInflationReward', args);\n    const res = create(unsafeRes, GetInflationRewardResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get inflation reward');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the specific inflation values for the current epoch\n   */\n  async getInflationRate(): Promise<InflationRate> {\n    const unsafeRes = await this._rpcRequest('getInflationRate', []);\n    const res = create(unsafeRes, GetInflationRateRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get inflation rate');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the Epoch Info parameters\n   */\n  async getEpochInfo(\n    commitmentOrConfig?: Commitment | GetEpochInfoConfig,\n  ): Promise<EpochInfo> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getEpochInfo', args);\n    const res = create(unsafeRes, GetEpochInfoRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get epoch info');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the Epoch Schedule parameters\n   */\n  async getEpochSchedule(): Promise<EpochSchedule> {\n    const unsafeRes = await this._rpcRequest('getEpochSchedule', []);\n    const res = create(unsafeRes, GetEpochScheduleRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get epoch schedule');\n    }\n    const epochSchedule = res.result;\n    return new EpochSchedule(\n      epochSchedule.slotsPerEpoch,\n      epochSchedule.leaderScheduleSlotOffset,\n      epochSchedule.warmup,\n      epochSchedule.firstNormalEpoch,\n      epochSchedule.firstNormalSlot,\n    );\n  }\n\n  /**\n   * Fetch the leader schedule for the current epoch\n   * @return {Promise<RpcResponseAndContext<LeaderSchedule>>}\n   */\n  async getLeaderSchedule(): Promise<LeaderSchedule> {\n    const unsafeRes = await this._rpcRequest('getLeaderSchedule', []);\n    const res = create(unsafeRes, GetLeaderScheduleRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get leader schedule');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the minimum balance needed to exempt an account of `dataLength`\n   * size from rent\n   */\n  async getMinimumBalanceForRentExemption(\n    dataLength: number,\n    commitment?: Commitment,\n  ): Promise<number> {\n    const args = this._buildArgs([dataLength], commitment);\n    const unsafeRes = await this._rpcRequest(\n      'getMinimumBalanceForRentExemption',\n      args,\n    );\n    const res = create(unsafeRes, GetMinimumBalanceForRentExemptionRpcResult);\n    if ('error' in res) {\n      console.warn('Unable to fetch minimum balance for rent exemption');\n      return 0;\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a recent blockhash from the cluster, return with context\n   * @return {Promise<RpcResponseAndContext<{blockhash: Blockhash, feeCalculator: FeeCalculator}>>}\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getLatestBlockhash} instead.\n   */\n  async getRecentBlockhashAndContext(commitment?: Commitment): Promise<\n    RpcResponseAndContext<{\n      blockhash: Blockhash;\n      feeCalculator: FeeCalculator;\n    }>\n  > {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getRecentBlockhash', args);\n    const res = create(unsafeRes, GetRecentBlockhashAndContextRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get recent blockhash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch recent performance samples\n   * @return {Promise<Array<PerfSample>>}\n   */\n  async getRecentPerformanceSamples(\n    limit?: number,\n  ): Promise<Array<PerfSample>> {\n    const unsafeRes = await this._rpcRequest(\n      'getRecentPerformanceSamples',\n      limit ? [limit] : [],\n    );\n    const res = create(unsafeRes, GetRecentPerformanceSamplesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get recent performance samples',\n      );\n    }\n\n    return res.result;\n  }\n\n  /**\n   * Fetch the fee calculator for a recent blockhash from the cluster, return with context\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getFeeForMessage} instead.\n   */\n  async getFeeCalculatorForBlockhash(\n    blockhash: Blockhash,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<FeeCalculator | null>> {\n    const args = this._buildArgs([blockhash], commitment);\n    const unsafeRes = await this._rpcRequest(\n      'getFeeCalculatorForBlockhash',\n      args,\n    );\n\n    const res = create(unsafeRes, GetFeeCalculatorRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get fee calculator');\n    }\n    const {context, value} = res.result;\n    return {\n      context,\n      value: value !== null ? value.feeCalculator : null,\n    };\n  }\n\n  /**\n   * Fetch the fee for a message from the cluster, return with context\n   */\n  async getFeeForMessage(\n    message: VersionedMessage,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<number | null>> {\n    const wireMessage = toBuffer(message.serialize()).toString('base64');\n    const args = this._buildArgs([wireMessage], commitment);\n    const unsafeRes = await this._rpcRequest('getFeeForMessage', args);\n\n    const res = create(unsafeRes, jsonRpcResultAndContext(nullable(number())));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get fee for message');\n    }\n    if (res.result === null) {\n      throw new Error('invalid blockhash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a list of prioritization fees from recent blocks.\n   */\n  async getRecentPrioritizationFees(\n    config?: GetRecentPrioritizationFeesConfig,\n  ): Promise<RecentPrioritizationFees[]> {\n    const accounts = config?.lockedWritableAccounts?.map(key => key.toBase58());\n    const args = this._buildArgs(accounts?.length ? [accounts] : []);\n    const unsafeRes = await this._rpcRequest(\n      'getRecentPrioritizationFees',\n      args,\n    );\n    const res = create(unsafeRes, GetRecentPrioritizationFeesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get recent prioritization fees',\n      );\n    }\n    return res.result;\n  }\n  /**\n   * Fetch a recent blockhash from the cluster\n   * @return {Promise<{blockhash: Blockhash, feeCalculator: FeeCalculator}>}\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getLatestBlockhash} instead.\n   */\n  async getRecentBlockhash(\n    commitment?: Commitment,\n  ): Promise<{blockhash: Blockhash; feeCalculator: FeeCalculator}> {\n    try {\n      const res = await this.getRecentBlockhashAndContext(commitment);\n      return res.value;\n    } catch (e) {\n      throw new Error('failed to get recent blockhash: ' + e);\n    }\n  }\n\n  /**\n   * Fetch the latest blockhash from the cluster\n   * @return {Promise<BlockhashWithExpiryBlockHeight>}\n   */\n  async getLatestBlockhash(\n    commitmentOrConfig?: Commitment | GetLatestBlockhashConfig,\n  ): Promise<BlockhashWithExpiryBlockHeight> {\n    try {\n      const res = await this.getLatestBlockhashAndContext(commitmentOrConfig);\n      return res.value;\n    } catch (e) {\n      throw new Error('failed to get recent blockhash: ' + e);\n    }\n  }\n\n  /**\n   * Fetch the latest blockhash from the cluster\n   * @return {Promise<BlockhashWithExpiryBlockHeight>}\n   */\n  async getLatestBlockhashAndContext(\n    commitmentOrConfig?: Commitment | GetLatestBlockhashConfig,\n  ): Promise<RpcResponseAndContext<BlockhashWithExpiryBlockHeight>> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getLatestBlockhash', args);\n    const res = create(unsafeRes, GetLatestBlockhashRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get latest blockhash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the node version\n   */\n  async getVersion(): Promise<Version> {\n    const unsafeRes = await this._rpcRequest('getVersion', []);\n    const res = create(unsafeRes, jsonRpcResult(VersionResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get version');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the genesis hash\n   */\n  async getGenesisHash(): Promise<string> {\n    const unsafeRes = await this._rpcRequest('getGenesisHash', []);\n    const res = create(unsafeRes, jsonRpcResult(string()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get genesis hash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a processed block from the cluster.\n   *\n   * @deprecated Instead, call `getBlock` using a `GetVersionedBlockConfig` by\n   * setting the `maxSupportedTransactionVersion` property.\n   */\n  async getBlock(\n    slot: number,\n    rawConfig?: GetBlockConfig,\n  ): Promise<BlockResponse | null>;\n\n  /**\n   * @deprecated Instead, call `getBlock` using a `GetVersionedBlockConfig` by\n   * setting the `maxSupportedTransactionVersion` property.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig: GetBlockConfig & {transactionDetails: 'accounts'},\n  ): Promise<AccountsModeBlockResponse | null>;\n\n  /**\n   * @deprecated Instead, call `getBlock` using a `GetVersionedBlockConfig` by\n   * setting the `maxSupportedTransactionVersion` property.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig: GetBlockConfig & {transactionDetails: 'none'},\n  ): Promise<NoneModeBlockResponse | null>;\n\n  /**\n   * Fetch a processed block from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig?: GetVersionedBlockConfig,\n  ): Promise<VersionedBlockResponse | null>;\n\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig: GetVersionedBlockConfig & {transactionDetails: 'accounts'},\n  ): Promise<VersionedAccountsModeBlockResponse | null>;\n\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig: GetVersionedBlockConfig & {transactionDetails: 'none'},\n  ): Promise<VersionedNoneModeBlockResponse | null>;\n\n  /**\n   * Fetch a processed block from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig?: GetVersionedBlockConfig,\n  ): Promise<\n    | VersionedBlockResponse\n    | VersionedAccountsModeBlockResponse\n    | VersionedNoneModeBlockResponse\n    | null\n  > {\n    const {commitment, config} = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment as Finality,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    try {\n      switch (config?.transactionDetails) {\n        case 'accounts': {\n          const res = create(unsafeRes, GetAccountsModeBlockRpcResult);\n          if ('error' in res) {\n            throw res.error;\n          }\n          return res.result;\n        }\n        case 'none': {\n          const res = create(unsafeRes, GetNoneModeBlockRpcResult);\n          if ('error' in res) {\n            throw res.error;\n          }\n          return res.result;\n        }\n        default: {\n          const res = create(unsafeRes, GetBlockRpcResult);\n          if ('error' in res) {\n            throw res.error;\n          }\n          const {result} = res;\n          return result\n            ? {\n                ...result,\n                transactions: result.transactions.map(\n                  ({transaction, meta, version}) => ({\n                    meta,\n                    transaction: {\n                      ...transaction,\n                      message: versionedMessageFromResponse(\n                        version,\n                        transaction.message,\n                      ),\n                    },\n                    version,\n                  }),\n                ),\n              }\n            : null;\n        }\n      }\n    } catch (e) {\n      throw new SolanaJSONRPCError(\n        e as JSONRPCError,\n        'failed to get confirmed block',\n      );\n    }\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed or finalized block\n   */\n  async getParsedBlock(\n    slot: number,\n    rawConfig?: GetVersionedBlockConfig,\n  ): Promise<ParsedAccountsModeBlockResponse>;\n\n  // eslint-disable-next-line no-dupe-class-members\n  async getParsedBlock(\n    slot: number,\n    rawConfig: GetVersionedBlockConfig & {transactionDetails: 'accounts'},\n  ): Promise<ParsedAccountsModeBlockResponse>;\n\n  // eslint-disable-next-line no-dupe-class-members\n  async getParsedBlock(\n    slot: number,\n    rawConfig: GetVersionedBlockConfig & {transactionDetails: 'none'},\n  ): Promise<ParsedNoneModeBlockResponse>;\n  // eslint-disable-next-line no-dupe-class-members\n  async getParsedBlock(\n    slot: number,\n    rawConfig?: GetVersionedBlockConfig,\n  ): Promise<\n    | ParsedBlockResponse\n    | ParsedAccountsModeBlockResponse\n    | ParsedNoneModeBlockResponse\n    | null\n  > {\n    const {commitment, config} = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment as Finality,\n      'jsonParsed',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    try {\n      switch (config?.transactionDetails) {\n        case 'accounts': {\n          const res = create(unsafeRes, GetParsedAccountsModeBlockRpcResult);\n          if ('error' in res) {\n            throw res.error;\n          }\n          return res.result;\n        }\n        case 'none': {\n          const res = create(unsafeRes, GetParsedNoneModeBlockRpcResult);\n          if ('error' in res) {\n            throw res.error;\n          }\n          return res.result;\n        }\n        default: {\n          const res = create(unsafeRes, GetParsedBlockRpcResult);\n          if ('error' in res) {\n            throw res.error;\n          }\n          return res.result;\n        }\n      }\n    } catch (e) {\n      throw new SolanaJSONRPCError(e as JSONRPCError, 'failed to get block');\n    }\n  }\n\n  /*\n   * Returns the current block height of the node\n   */\n  getBlockHeight = (() => {\n    const requestPromises: {[hash: string]: Promise<number>} = {};\n    return async (\n      commitmentOrConfig?: Commitment | GetBlockHeightConfig,\n    ): Promise<number> => {\n      const {commitment, config} =\n        extractCommitmentFromConfig(commitmentOrConfig);\n      const args = this._buildArgs(\n        [],\n        commitment,\n        undefined /* encoding */,\n        config,\n      );\n      const requestHash = fastStableStringify(args);\n      requestPromises[requestHash] =\n        requestPromises[requestHash] ??\n        (async () => {\n          try {\n            const unsafeRes = await this._rpcRequest('getBlockHeight', args);\n            const res = create(unsafeRes, jsonRpcResult(number()));\n            if ('error' in res) {\n              throw new SolanaJSONRPCError(\n                res.error,\n                'failed to get block height information',\n              );\n            }\n            return res.result;\n          } finally {\n            delete requestPromises[requestHash];\n          }\n        })();\n      return await requestPromises[requestHash];\n    };\n  })();\n\n  /*\n   * Returns recent block production information from the current or previous epoch\n   */\n  async getBlockProduction(\n    configOrCommitment?: GetBlockProductionConfig | Commitment,\n  ): Promise<RpcResponseAndContext<BlockProduction>> {\n    let extra: Omit<GetBlockProductionConfig, 'commitment'> | undefined;\n    let commitment: Commitment | undefined;\n\n    if (typeof configOrCommitment === 'string') {\n      commitment = configOrCommitment;\n    } else if (configOrCommitment) {\n      const {commitment: c, ...rest} = configOrCommitment;\n      commitment = c;\n      extra = rest;\n    }\n\n    const args = this._buildArgs([], commitment, 'base64', extra);\n    const unsafeRes = await this._rpcRequest('getBlockProduction', args);\n    const res = create(unsafeRes, BlockProductionResponseStruct);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get block production information',\n      );\n    }\n\n    return res.result;\n  }\n\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   *\n   * @deprecated Instead, call `getTransaction` using a\n   * `GetVersionedTransactionConfig` by setting the\n   * `maxSupportedTransactionVersion` property.\n   */\n  async getTransaction(\n    signature: string,\n    rawConfig?: GetTransactionConfig,\n  ): Promise<TransactionResponse | null>;\n\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransaction(\n    signature: string,\n    rawConfig: GetVersionedTransactionConfig,\n  ): Promise<VersionedTransactionResponse | null>;\n\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransaction(\n    signature: string,\n    rawConfig?: GetVersionedTransactionConfig,\n  ): Promise<VersionedTransactionResponse | null> {\n    const {commitment, config} = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgsAtLeastConfirmed(\n      [signature],\n      commitment as Finality,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getTransaction', args);\n    const res = create(unsafeRes, GetTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction');\n    }\n\n    const result = res.result;\n    if (!result) return result;\n\n    return {\n      ...result,\n      transaction: {\n        ...result.transaction,\n        message: versionedMessageFromResponse(\n          result.version,\n          result.transaction.message,\n        ),\n      },\n    };\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed or finalized transaction\n   */\n  async getParsedTransaction(\n    signature: TransactionSignature,\n    commitmentOrConfig?: GetVersionedTransactionConfig | Finality,\n  ): Promise<ParsedTransactionWithMeta | null> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgsAtLeastConfirmed(\n      [signature],\n      commitment as Finality,\n      'jsonParsed',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getTransaction', args);\n    const res = create(unsafeRes, GetParsedTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed transaction details for a batch of confirmed transactions\n   */\n  async getParsedTransactions(\n    signatures: TransactionSignature[],\n    commitmentOrConfig?: GetVersionedTransactionConfig | Finality,\n  ): Promise<(ParsedTransactionWithMeta | null)[]> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed(\n        [signature],\n        commitment as Finality,\n        'jsonParsed',\n        config,\n      );\n      return {\n        methodName: 'getTransaction',\n        args,\n      };\n    });\n\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map((unsafeRes: any) => {\n      const res = create(unsafeRes, GetParsedTransactionRpcResult);\n      if ('error' in res) {\n        throw new SolanaJSONRPCError(res.error, 'failed to get transactions');\n      }\n      return res.result;\n    });\n\n    return res;\n  }\n\n  /**\n   * Fetch transaction details for a batch of confirmed transactions.\n   * Similar to {@link getParsedTransactions} but returns a {@link TransactionResponse}.\n   *\n   * @deprecated Instead, call `getTransactions` using a\n   * `GetVersionedTransactionConfig` by setting the\n   * `maxSupportedTransactionVersion` property.\n   */\n  async getTransactions(\n    signatures: TransactionSignature[],\n    commitmentOrConfig?: GetTransactionConfig | Finality,\n  ): Promise<(TransactionResponse | null)[]>;\n\n  /**\n   * Fetch transaction details for a batch of confirmed transactions.\n   * Similar to {@link getParsedTransactions} but returns a {@link\n   * VersionedTransactionResponse}.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransactions(\n    signatures: TransactionSignature[],\n    commitmentOrConfig: GetVersionedTransactionConfig | Finality,\n  ): Promise<(VersionedTransactionResponse | null)[]>;\n\n  /**\n   * Fetch transaction details for a batch of confirmed transactions.\n   * Similar to {@link getParsedTransactions} but returns a {@link\n   * VersionedTransactionResponse}.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransactions(\n    signatures: TransactionSignature[],\n    commitmentOrConfig: GetVersionedTransactionConfig | Finality,\n  ): Promise<(VersionedTransactionResponse | null)[]> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed(\n        [signature],\n        commitment as Finality,\n        undefined /* encoding */,\n        config,\n      );\n      return {\n        methodName: 'getTransaction',\n        args,\n      };\n    });\n\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map((unsafeRes: any) => {\n      const res = create(unsafeRes, GetTransactionRpcResult);\n      if ('error' in res) {\n        throw new SolanaJSONRPCError(res.error, 'failed to get transactions');\n      }\n      const result = res.result;\n      if (!result) return result;\n\n      return {\n        ...result,\n        transaction: {\n          ...result.transaction,\n          message: versionedMessageFromResponse(\n            result.version,\n            result.transaction.message,\n          ),\n        },\n      };\n    });\n\n    return res;\n  }\n\n  /**\n   * Fetch a list of Transactions and transaction statuses from the cluster\n   * for a confirmed block.\n   *\n   * @deprecated Deprecated since v1.13.0. Please use {@link getBlock} instead.\n   */\n  async getConfirmedBlock(\n    slot: number,\n    commitment?: Finality,\n  ): Promise<ConfirmedBlock> {\n    const args = this._buildArgsAtLeastConfirmed([slot], commitment);\n    const unsafeRes = await this._rpcRequest('getConfirmedBlock', args);\n    const res = create(unsafeRes, GetConfirmedBlockRpcResult);\n\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get confirmed block');\n    }\n\n    const result = res.result;\n    if (!result) {\n      throw new Error('Confirmed block ' + slot + ' not found');\n    }\n\n    const block = {\n      ...result,\n      transactions: result.transactions.map(({transaction, meta}) => {\n        const message = new Message(transaction.message);\n        return {\n          meta,\n          transaction: {\n            ...transaction,\n            message,\n          },\n        };\n      }),\n    };\n\n    return {\n      ...block,\n      transactions: block.transactions.map(({transaction, meta}) => {\n        return {\n          meta,\n          transaction: Transaction.populate(\n            transaction.message,\n            transaction.signatures,\n          ),\n        };\n      }),\n    };\n  }\n\n  /**\n   * Fetch confirmed blocks between two slots\n   */\n  async getBlocks(\n    startSlot: number,\n    endSlot?: number,\n    commitment?: Finality,\n  ): Promise<Array<number>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      endSlot !== undefined ? [startSlot, endSlot] : [startSlot],\n      commitment,\n    );\n    const unsafeRes = await this._rpcRequest('getBlocks', args);\n    const res = create(unsafeRes, jsonRpcResult(array(number())));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get blocks');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a list of Signatures from the cluster for a block, excluding rewards\n   */\n  async getBlockSignatures(\n    slot: number,\n    commitment?: Finality,\n  ): Promise<BlockSignatures> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment,\n      undefined,\n      {\n        transactionDetails: 'signatures',\n        rewards: false,\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    const res = create(unsafeRes, GetBlockSignaturesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get block');\n    }\n    const result = res.result;\n    if (!result) {\n      throw new Error('Block ' + slot + ' not found');\n    }\n    return result;\n  }\n\n  /**\n   * Fetch a list of Signatures from the cluster for a confirmed block, excluding rewards\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getBlockSignatures} instead.\n   */\n  async getConfirmedBlockSignatures(\n    slot: number,\n    commitment?: Finality,\n  ): Promise<BlockSignatures> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment,\n      undefined,\n      {\n        transactionDetails: 'signatures',\n        rewards: false,\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getConfirmedBlock', args);\n    const res = create(unsafeRes, GetBlockSignaturesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get confirmed block');\n    }\n    const result = res.result;\n    if (!result) {\n      throw new Error('Confirmed block ' + slot + ' not found');\n    }\n    return result;\n  }\n\n  /**\n   * Fetch a transaction details for a confirmed transaction\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getTransaction} instead.\n   */\n  async getConfirmedTransaction(\n    signature: TransactionSignature,\n    commitment?: Finality,\n  ): Promise<ConfirmedTransaction | null> {\n    const args = this._buildArgsAtLeastConfirmed([signature], commitment);\n    const unsafeRes = await this._rpcRequest('getConfirmedTransaction', args);\n    const res = create(unsafeRes, GetTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction');\n    }\n\n    const result = res.result;\n    if (!result) return result;\n\n    const message = new Message(result.transaction.message);\n    const signatures = result.transaction.signatures;\n    return {\n      ...result,\n      transaction: Transaction.populate(message, signatures),\n    };\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed transaction\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getParsedTransaction} instead.\n   */\n  async getParsedConfirmedTransaction(\n    signature: TransactionSignature,\n    commitment?: Finality,\n  ): Promise<ParsedConfirmedTransaction | null> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [signature],\n      commitment,\n      'jsonParsed',\n    );\n    const unsafeRes = await this._rpcRequest('getConfirmedTransaction', args);\n    const res = create(unsafeRes, GetParsedTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get confirmed transaction',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed transaction details for a batch of confirmed transactions\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getParsedTransactions} instead.\n   */\n  async getParsedConfirmedTransactions(\n    signatures: TransactionSignature[],\n    commitment?: Finality,\n  ): Promise<(ParsedConfirmedTransaction | null)[]> {\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed(\n        [signature],\n        commitment,\n        'jsonParsed',\n      );\n      return {\n        methodName: 'getConfirmedTransaction',\n        args,\n      };\n    });\n\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map((unsafeRes: any) => {\n      const res = create(unsafeRes, GetParsedTransactionRpcResult);\n      if ('error' in res) {\n        throw new SolanaJSONRPCError(\n          res.error,\n          'failed to get confirmed transactions',\n        );\n      }\n      return res.result;\n    });\n\n    return res;\n  }\n\n  /**\n   * Fetch a list of all the confirmed signatures for transactions involving an address\n   * within a specified slot range. Max range allowed is 10,000 slots.\n   *\n   * @deprecated Deprecated since v1.3. Please use {@link getConfirmedSignaturesForAddress2} instead.\n   *\n   * @param address queried address\n   * @param startSlot start slot, inclusive\n   * @param endSlot end slot, inclusive\n   */\n  async getConfirmedSignaturesForAddress(\n    address: PublicKey,\n    startSlot: number,\n    endSlot: number,\n  ): Promise<Array<TransactionSignature>> {\n    let options: any = {};\n\n    let firstAvailableBlock = await this.getFirstAvailableBlock();\n    while (!('until' in options)) {\n      startSlot--;\n      if (startSlot <= 0 || startSlot < firstAvailableBlock) {\n        break;\n      }\n\n      try {\n        const block = await this.getConfirmedBlockSignatures(\n          startSlot,\n          'finalized',\n        );\n        if (block.signatures.length > 0) {\n          options.until =\n            block.signatures[block.signatures.length - 1].toString();\n        }\n      } catch (err) {\n        if (err instanceof Error && err.message.includes('skipped')) {\n          continue;\n        } else {\n          throw err;\n        }\n      }\n    }\n\n    let highestConfirmedRoot = await this.getSlot('finalized');\n    while (!('before' in options)) {\n      endSlot++;\n      if (endSlot > highestConfirmedRoot) {\n        break;\n      }\n\n      try {\n        const block = await this.getConfirmedBlockSignatures(endSlot);\n        if (block.signatures.length > 0) {\n          options.before =\n            block.signatures[block.signatures.length - 1].toString();\n        }\n      } catch (err) {\n        if (err instanceof Error && err.message.includes('skipped')) {\n          continue;\n        } else {\n          throw err;\n        }\n      }\n    }\n\n    const confirmedSignatureInfo = await this.getConfirmedSignaturesForAddress2(\n      address,\n      options,\n    );\n    return confirmedSignatureInfo.map(info => info.signature);\n  }\n\n  /**\n   * Returns confirmed signatures for transactions involving an\n   * address backwards in time from the provided signature or most recent confirmed block\n   *\n   *\n   * @param address queried address\n   * @param options\n   */\n  async getConfirmedSignaturesForAddress2(\n    address: PublicKey,\n    options?: ConfirmedSignaturesForAddress2Options,\n    commitment?: Finality,\n  ): Promise<Array<ConfirmedSignatureInfo>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [address.toBase58()],\n      commitment,\n      undefined,\n      options,\n    );\n    const unsafeRes = await this._rpcRequest(\n      'getConfirmedSignaturesForAddress2',\n      args,\n    );\n    const res = create(unsafeRes, GetConfirmedSignaturesForAddress2RpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get confirmed signatures for address',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Returns confirmed signatures for transactions involving an\n   * address backwards in time from the provided signature or most recent confirmed block\n   *\n   *\n   * @param address queried address\n   * @param options\n   */\n  async getSignaturesForAddress(\n    address: PublicKey,\n    options?: SignaturesForAddressOptions,\n    commitment?: Finality,\n  ): Promise<Array<ConfirmedSignatureInfo>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [address.toBase58()],\n      commitment,\n      undefined,\n      options,\n    );\n    const unsafeRes = await this._rpcRequest('getSignaturesForAddress', args);\n    const res = create(unsafeRes, GetSignaturesForAddressRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get signatures for address',\n      );\n    }\n    return res.result;\n  }\n\n  async getAddressLookupTable(\n    accountKey: PublicKey,\n    config?: GetAccountInfoConfig,\n  ): Promise<RpcResponseAndContext<AddressLookupTableAccount | null>> {\n    const {context, value: accountInfo} = await this.getAccountInfoAndContext(\n      accountKey,\n      config,\n    );\n\n    let value = null;\n    if (accountInfo !== null) {\n      value = new AddressLookupTableAccount({\n        key: accountKey,\n        state: AddressLookupTableAccount.deserialize(accountInfo.data),\n      });\n    }\n\n    return {\n      context,\n      value,\n    };\n  }\n\n  /**\n   * Fetch the contents of a Nonce account from the cluster, return with context\n   */\n  async getNonceAndContext(\n    nonceAccount: PublicKey,\n    commitmentOrConfig?: Commitment | GetNonceAndContextConfig,\n  ): Promise<RpcResponseAndContext<NonceAccount | null>> {\n    const {context, value: accountInfo} = await this.getAccountInfoAndContext(\n      nonceAccount,\n      commitmentOrConfig,\n    );\n\n    let value = null;\n    if (accountInfo !== null) {\n      value = NonceAccount.fromAccountData(accountInfo.data);\n    }\n\n    return {\n      context,\n      value,\n    };\n  }\n\n  /**\n   * Fetch the contents of a Nonce account from the cluster\n   */\n  async getNonce(\n    nonceAccount: PublicKey,\n    commitmentOrConfig?: Commitment | GetNonceConfig,\n  ): Promise<NonceAccount | null> {\n    return await this.getNonceAndContext(nonceAccount, commitmentOrConfig)\n      .then(x => x.value)\n      .catch(e => {\n        throw new Error(\n          'failed to get nonce for account ' +\n            nonceAccount.toBase58() +\n            ': ' +\n            e,\n        );\n      });\n  }\n\n  /**\n   * Request an allocation of lamports to the specified address\n   *\n   * ```typescript\n   * import { Connection, PublicKey, LAMPORTS_PER_SOL } from \"@solana/web3.js\";\n   *\n   * (async () => {\n   *   const connection = new Connection(\"https://api.testnet.solana.com\", \"confirmed\");\n   *   const myAddress = new PublicKey(\"2nr1bHFT86W9tGnyvmYW4vcHKsQB3sVQfnddasz4kExM\");\n   *   const signature = await connection.requestAirdrop(myAddress, LAMPORTS_PER_SOL);\n   *   await connection.confirmTransaction(signature);\n   * })();\n   * ```\n   */\n  async requestAirdrop(\n    to: PublicKey,\n    lamports: number,\n  ): Promise<TransactionSignature> {\n    const unsafeRes = await this._rpcRequest('requestAirdrop', [\n      to.toBase58(),\n      lamports,\n    ]);\n    const res = create(unsafeRes, RequestAirdropRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `airdrop to ${to.toBase58()} failed`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * @internal\n   */\n  async _blockhashWithExpiryBlockHeight(\n    disableCache: boolean,\n  ): Promise<BlockhashWithExpiryBlockHeight> {\n    if (!disableCache) {\n      // Wait for polling to finish\n      while (this._pollingBlockhash) {\n        await sleep(100);\n      }\n      const timeSinceFetch = Date.now() - this._blockhashInfo.lastFetch;\n      const expired = timeSinceFetch >= BLOCKHASH_CACHE_TIMEOUT_MS;\n      if (this._blockhashInfo.latestBlockhash !== null && !expired) {\n        return this._blockhashInfo.latestBlockhash;\n      }\n    }\n\n    return await this._pollNewBlockhash();\n  }\n\n  /**\n   * @internal\n   */\n  async _pollNewBlockhash(): Promise<BlockhashWithExpiryBlockHeight> {\n    this._pollingBlockhash = true;\n    try {\n      const startTime = Date.now();\n      const cachedLatestBlockhash = this._blockhashInfo.latestBlockhash;\n      const cachedBlockhash = cachedLatestBlockhash\n        ? cachedLatestBlockhash.blockhash\n        : null;\n      for (let i = 0; i < 50; i++) {\n        const latestBlockhash = await this.getLatestBlockhash('finalized');\n\n        if (cachedBlockhash !== latestBlockhash.blockhash) {\n          this._blockhashInfo = {\n            latestBlockhash,\n            lastFetch: Date.now(),\n            transactionSignatures: [],\n            simulatedSignatures: [],\n          };\n          return latestBlockhash;\n        }\n\n        // Sleep for approximately half a slot\n        await sleep(MS_PER_SLOT / 2);\n      }\n\n      throw new Error(\n        `Unable to obtain a new blockhash after ${Date.now() - startTime}ms`,\n      );\n    } finally {\n      this._pollingBlockhash = false;\n    }\n  }\n\n  /**\n   * get the stake minimum delegation\n   */\n  async getStakeMinimumDelegation(\n    config?: GetStakeMinimumDelegationConfig,\n  ): Promise<RpcResponseAndContext<number>> {\n    const {commitment, config: configArg} = extractCommitmentFromConfig(config);\n    const args = this._buildArgs([], commitment, 'base64', configArg);\n    const unsafeRes = await this._rpcRequest('getStakeMinimumDelegation', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get stake minimum delegation`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Simulate a transaction\n   *\n   * @deprecated Instead, call {@link simulateTransaction} with {@link\n   * VersionedTransaction} and {@link SimulateTransactionConfig} parameters\n   */\n  simulateTransaction(\n    transactionOrMessage: Transaction | Message,\n    signers?: Array<Signer>,\n    includeAccounts?: boolean | Array<PublicKey>,\n  ): Promise<RpcResponseAndContext<SimulatedTransactionResponse>>;\n\n  /**\n   * Simulate a transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  simulateTransaction(\n    transaction: VersionedTransaction,\n    config?: SimulateTransactionConfig,\n  ): Promise<RpcResponseAndContext<SimulatedTransactionResponse>>;\n\n  /**\n   * Simulate a transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async simulateTransaction(\n    transactionOrMessage: VersionedTransaction | Transaction | Message,\n    configOrSigners?: SimulateTransactionConfig | Array<Signer>,\n    includeAccounts?: boolean | Array<PublicKey>,\n  ): Promise<RpcResponseAndContext<SimulatedTransactionResponse>> {\n    if ('message' in transactionOrMessage) {\n      const versionedTx = transactionOrMessage;\n      const wireTransaction = versionedTx.serialize();\n      const encodedTransaction =\n        Buffer.from(wireTransaction).toString('base64');\n      if (Array.isArray(configOrSigners) || includeAccounts !== undefined) {\n        throw new Error('Invalid arguments');\n      }\n\n      const config: any = configOrSigners || {};\n      config.encoding = 'base64';\n      if (!('commitment' in config)) {\n        config.commitment = this.commitment;\n      }\n\n      const args = [encodedTransaction, config];\n      const unsafeRes = await this._rpcRequest('simulateTransaction', args);\n      const res = create(unsafeRes, SimulatedTransactionResponseStruct);\n      if ('error' in res) {\n        throw new Error('failed to simulate transaction: ' + res.error.message);\n      }\n      return res.result;\n    }\n\n    let transaction;\n    if (transactionOrMessage instanceof Transaction) {\n      let originalTx: Transaction = transactionOrMessage;\n      transaction = new Transaction();\n      transaction.feePayer = originalTx.feePayer;\n      transaction.instructions = transactionOrMessage.instructions;\n      transaction.nonceInfo = originalTx.nonceInfo;\n      transaction.signatures = originalTx.signatures;\n    } else {\n      transaction = Transaction.populate(transactionOrMessage);\n      // HACK: this function relies on mutating the populated transaction\n      transaction._message = transaction._json = undefined;\n    }\n\n    if (configOrSigners !== undefined && !Array.isArray(configOrSigners)) {\n      throw new Error('Invalid arguments');\n    }\n\n    const signers = configOrSigners;\n    if (transaction.nonceInfo && signers) {\n      transaction.sign(...signers);\n    } else {\n      let disableCache = this._disableBlockhashCaching;\n      for (;;) {\n        const latestBlockhash = await this._blockhashWithExpiryBlockHeight(\n          disableCache,\n        );\n        transaction.lastValidBlockHeight = latestBlockhash.lastValidBlockHeight;\n        transaction.recentBlockhash = latestBlockhash.blockhash;\n\n        if (!signers) break;\n\n        transaction.sign(...signers);\n        if (!transaction.signature) {\n          throw new Error('!signature'); // should never happen\n        }\n\n        const signature = transaction.signature.toString('base64');\n        if (\n          !this._blockhashInfo.simulatedSignatures.includes(signature) &&\n          !this._blockhashInfo.transactionSignatures.includes(signature)\n        ) {\n          // The signature of this transaction has not been seen before with the\n          // current recentBlockhash, all done. Let's break\n          this._blockhashInfo.simulatedSignatures.push(signature);\n          break;\n        } else {\n          // This transaction would be treated as duplicate (its derived signature\n          // matched to one of already recorded signatures).\n          // So, we must fetch a new blockhash for a different signature by disabling\n          // our cache not to wait for the cache expiration (BLOCKHASH_CACHE_TIMEOUT_MS).\n          disableCache = true;\n        }\n      }\n    }\n\n    const message = transaction._compile();\n    const signData = message.serialize();\n    const wireTransaction = transaction._serialize(signData);\n    const encodedTransaction = wireTransaction.toString('base64');\n    const config: any = {\n      encoding: 'base64',\n      commitment: this.commitment,\n    };\n\n    if (includeAccounts) {\n      const addresses = (\n        Array.isArray(includeAccounts)\n          ? includeAccounts\n          : message.nonProgramIds()\n      ).map(key => key.toBase58());\n\n      config['accounts'] = {\n        encoding: 'base64',\n        addresses,\n      };\n    }\n\n    if (signers) {\n      config.sigVerify = true;\n    }\n\n    const args = [encodedTransaction, config];\n    const unsafeRes = await this._rpcRequest('simulateTransaction', args);\n    const res = create(unsafeRes, SimulatedTransactionResponseStruct);\n    if ('error' in res) {\n      let logs;\n      if ('data' in res.error) {\n        logs = res.error.data.logs;\n        if (logs && Array.isArray(logs)) {\n          const traceIndent = '\\n    ';\n          const logTrace = traceIndent + logs.join(traceIndent);\n          console.error(res.error.message, logTrace);\n        }\n      }\n      throw new SendTransactionError(\n        'failed to simulate transaction: ' + res.error.message,\n        logs,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Sign and send a transaction\n   *\n   * @deprecated Instead, call {@link sendTransaction} with a {@link\n   * VersionedTransaction}\n   */\n  sendTransaction(\n    transaction: Transaction,\n    signers: Array<Signer>,\n    options?: SendOptions,\n  ): Promise<TransactionSignature>;\n\n  /**\n   * Send a signed transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  sendTransaction(\n    transaction: VersionedTransaction,\n    options?: SendOptions,\n  ): Promise<TransactionSignature>;\n\n  /**\n   * Sign and send a transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async sendTransaction(\n    transaction: VersionedTransaction | Transaction,\n    signersOrOptions?: Array<Signer> | SendOptions,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    if ('version' in transaction) {\n      if (signersOrOptions && Array.isArray(signersOrOptions)) {\n        throw new Error('Invalid arguments');\n      }\n\n      const wireTransaction = transaction.serialize();\n      return await this.sendRawTransaction(wireTransaction, signersOrOptions);\n    }\n\n    if (signersOrOptions === undefined || !Array.isArray(signersOrOptions)) {\n      throw new Error('Invalid arguments');\n    }\n\n    const signers = signersOrOptions;\n    if (transaction.nonceInfo) {\n      transaction.sign(...signers);\n    } else {\n      let disableCache = this._disableBlockhashCaching;\n      for (;;) {\n        const latestBlockhash = await this._blockhashWithExpiryBlockHeight(\n          disableCache,\n        );\n        transaction.lastValidBlockHeight = latestBlockhash.lastValidBlockHeight;\n        transaction.recentBlockhash = latestBlockhash.blockhash;\n        transaction.sign(...signers);\n        if (!transaction.signature) {\n          throw new Error('!signature'); // should never happen\n        }\n\n        const signature = transaction.signature.toString('base64');\n        if (!this._blockhashInfo.transactionSignatures.includes(signature)) {\n          // The signature of this transaction has not been seen before with the\n          // current recentBlockhash, all done. Let's break\n          this._blockhashInfo.transactionSignatures.push(signature);\n          break;\n        } else {\n          // This transaction would be treated as duplicate (its derived signature\n          // matched to one of already recorded signatures).\n          // So, we must fetch a new blockhash for a different signature by disabling\n          // our cache not to wait for the cache expiration (BLOCKHASH_CACHE_TIMEOUT_MS).\n          disableCache = true;\n        }\n      }\n    }\n\n    const wireTransaction = transaction.serialize();\n    return await this.sendRawTransaction(wireTransaction, options);\n  }\n\n  /**\n   * Send a transaction that has already been signed and serialized into the\n   * wire format\n   */\n  async sendRawTransaction(\n    rawTransaction: Buffer | Uint8Array | Array<number>,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    const encodedTransaction = toBuffer(rawTransaction).toString('base64');\n    const result = await this.sendEncodedTransaction(\n      encodedTransaction,\n      options,\n    );\n    return result;\n  }\n\n  /**\n   * Send a transaction that has already been signed, serialized into the\n   * wire format, and encoded as a base64 string\n   */\n  async sendEncodedTransaction(\n    encodedTransaction: string,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    const config: any = {encoding: 'base64'};\n    const skipPreflight = options && options.skipPreflight;\n    const preflightCommitment =\n      (options && options.preflightCommitment) || this.commitment;\n\n    if (options && options.maxRetries != null) {\n      config.maxRetries = options.maxRetries;\n    }\n    if (options && options.minContextSlot != null) {\n      config.minContextSlot = options.minContextSlot;\n    }\n    if (skipPreflight) {\n      config.skipPreflight = skipPreflight;\n    }\n    if (preflightCommitment) {\n      config.preflightCommitment = preflightCommitment;\n    }\n\n    const args = [encodedTransaction, config];\n    const unsafeRes = await this._rpcRequest('sendTransaction', args);\n    const res = create(unsafeRes, SendTransactionRpcResult);\n    if ('error' in res) {\n      let logs;\n      if ('data' in res.error) {\n        logs = res.error.data.logs;\n      }\n      throw new SendTransactionError(\n        'failed to send transaction: ' + res.error.message,\n        logs,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnOpen() {\n    this._rpcWebSocketConnected = true;\n    this._rpcWebSocketHeartbeat = setInterval(() => {\n      // Ping server every 5s to prevent idle timeouts\n      (async () => {\n        try {\n          await this._rpcWebSocket.notify('ping');\n          // eslint-disable-next-line no-empty\n        } catch {}\n      })();\n    }, 5000);\n    this._updateSubscriptions();\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnError(err: Error) {\n    this._rpcWebSocketConnected = false;\n    console.error('ws error:', err.message);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnClose(code: number) {\n    this._rpcWebSocketConnected = false;\n    this._rpcWebSocketGeneration =\n      (this._rpcWebSocketGeneration + 1) % Number.MAX_SAFE_INTEGER;\n    if (this._rpcWebSocketIdleTimeout) {\n      clearTimeout(this._rpcWebSocketIdleTimeout);\n      this._rpcWebSocketIdleTimeout = null;\n    }\n    if (this._rpcWebSocketHeartbeat) {\n      clearInterval(this._rpcWebSocketHeartbeat);\n      this._rpcWebSocketHeartbeat = null;\n    }\n\n    if (code === 1000) {\n      // explicit close, check if any subscriptions have been made since close\n      this._updateSubscriptions();\n      return;\n    }\n\n    // implicit close, prepare subscriptions for auto-reconnect\n    this._subscriptionCallbacksByServerSubscriptionId = {};\n    Object.entries(\n      this._subscriptionsByHash as Record<SubscriptionConfigHash, Subscription>,\n    ).forEach(([hash, subscription]) => {\n      this._setSubscription(hash, {\n        ...subscription,\n        state: 'pending',\n      });\n    });\n  }\n\n  /**\n   * @internal\n   */\n  private _setSubscription(\n    hash: SubscriptionConfigHash,\n    nextSubscription: Subscription,\n  ) {\n    const prevState = this._subscriptionsByHash[hash]?.state;\n    this._subscriptionsByHash[hash] = nextSubscription;\n    if (prevState !== nextSubscription.state) {\n      const stateChangeCallbacks =\n        this._subscriptionStateChangeCallbacksByHash[hash];\n      if (stateChangeCallbacks) {\n        stateChangeCallbacks.forEach(cb => {\n          try {\n            cb(nextSubscription.state);\n            // eslint-disable-next-line no-empty\n          } catch {}\n        });\n      }\n    }\n  }\n\n  /**\n   * @internal\n   */\n  private _onSubscriptionStateChange(\n    clientSubscriptionId: ClientSubscriptionId,\n    callback: SubscriptionStateChangeCallback,\n  ): SubscriptionStateChangeDisposeFn {\n    const hash =\n      this._subscriptionHashByClientSubscriptionId[clientSubscriptionId];\n    if (hash == null) {\n      return () => {};\n    }\n    const stateChangeCallbacks = (this._subscriptionStateChangeCallbacksByHash[\n      hash\n    ] ||= new Set());\n    stateChangeCallbacks.add(callback);\n    return () => {\n      stateChangeCallbacks.delete(callback);\n      if (stateChangeCallbacks.size === 0) {\n        delete this._subscriptionStateChangeCallbacksByHash[hash];\n      }\n    };\n  }\n\n  /**\n   * @internal\n   */\n  async _updateSubscriptions() {\n    if (Object.keys(this._subscriptionsByHash).length === 0) {\n      if (this._rpcWebSocketConnected) {\n        this._rpcWebSocketConnected = false;\n        this._rpcWebSocketIdleTimeout = setTimeout(() => {\n          this._rpcWebSocketIdleTimeout = null;\n          try {\n            this._rpcWebSocket.close();\n          } catch (err) {\n            // swallow error if socket has already been closed.\n            if (err instanceof Error) {\n              console.log(\n                `Error when closing socket connection: ${err.message}`,\n              );\n            }\n          }\n        }, 500);\n      }\n      return;\n    }\n\n    if (this._rpcWebSocketIdleTimeout !== null) {\n      clearTimeout(this._rpcWebSocketIdleTimeout);\n      this._rpcWebSocketIdleTimeout = null;\n      this._rpcWebSocketConnected = true;\n    }\n\n    if (!this._rpcWebSocketConnected) {\n      this._rpcWebSocket.connect();\n      return;\n    }\n\n    const activeWebSocketGeneration = this._rpcWebSocketGeneration;\n    const isCurrentConnectionStillActive = () => {\n      return activeWebSocketGeneration === this._rpcWebSocketGeneration;\n    };\n\n    await Promise.all(\n      // Don't be tempted to change this to `Object.entries`. We call\n      // `_updateSubscriptions` recursively when processing the state,\n      // so it's important that we look up the *current* version of\n      // each subscription, every time we process a hash.\n      Object.keys(this._subscriptionsByHash).map(async hash => {\n        const subscription = this._subscriptionsByHash[hash];\n        if (subscription === undefined) {\n          // This entry has since been deleted. Skip.\n          return;\n        }\n        switch (subscription.state) {\n          case 'pending':\n          case 'unsubscribed':\n            if (subscription.callbacks.size === 0) {\n              /**\n               * You can end up here when:\n               *\n               * - a subscription has recently unsubscribed\n               *   without having new callbacks added to it\n               *   while the unsubscribe was in flight, or\n               * - when a pending subscription has its\n               *   listeners removed before a request was\n               *   sent to the server.\n               *\n               * Being that nobody is interested in this\n               * subscription any longer, delete it.\n               */\n              delete this._subscriptionsByHash[hash];\n              if (subscription.state === 'unsubscribed') {\n                delete this._subscriptionCallbacksByServerSubscriptionId[\n                  subscription.serverSubscriptionId\n                ];\n              }\n              await this._updateSubscriptions();\n              return;\n            }\n            await (async () => {\n              const {args, method} = subscription;\n              try {\n                this._setSubscription(hash, {\n                  ...subscription,\n                  state: 'subscribing',\n                });\n                const serverSubscriptionId: ServerSubscriptionId =\n                  (await this._rpcWebSocket.call(method, args)) as number;\n                this._setSubscription(hash, {\n                  ...subscription,\n                  serverSubscriptionId,\n                  state: 'subscribed',\n                });\n                this._subscriptionCallbacksByServerSubscriptionId[\n                  serverSubscriptionId\n                ] = subscription.callbacks;\n                await this._updateSubscriptions();\n              } catch (e) {\n                if (e instanceof Error) {\n                  console.error(\n                    `${method} error for argument`,\n                    args,\n                    e.message,\n                  );\n                }\n                if (!isCurrentConnectionStillActive()) {\n                  return;\n                }\n                // TODO: Maybe add an 'errored' state or a retry limit?\n                this._setSubscription(hash, {\n                  ...subscription,\n                  state: 'pending',\n                });\n                await this._updateSubscriptions();\n              }\n            })();\n            break;\n          case 'subscribed':\n            if (subscription.callbacks.size === 0) {\n              // By the time we successfully set up a subscription\n              // with the server, the client stopped caring about it.\n              // Tear it down now.\n              await (async () => {\n                const {serverSubscriptionId, unsubscribeMethod} = subscription;\n                if (\n                  this._subscriptionsAutoDisposedByRpc.has(serverSubscriptionId)\n                ) {\n                  /**\n                   * Special case.\n                   * If we're dealing with a subscription that has been auto-\n                   * disposed by the RPC, then we can skip the RPC call to\n                   * tear down the subscription here.\n                   *\n                   * NOTE: There is a proposal to eliminate this special case, here:\n                   * https://github.com/solana-labs/solana/issues/18892\n                   */\n                  this._subscriptionsAutoDisposedByRpc.delete(\n                    serverSubscriptionId,\n                  );\n                } else {\n                  this._setSubscription(hash, {\n                    ...subscription,\n                    state: 'unsubscribing',\n                  });\n                  this._setSubscription(hash, {\n                    ...subscription,\n                    state: 'unsubscribing',\n                  });\n                  try {\n                    await this._rpcWebSocket.call(unsubscribeMethod, [\n                      serverSubscriptionId,\n                    ]);\n                  } catch (e) {\n                    if (e instanceof Error) {\n                      console.error(`${unsubscribeMethod} error:`, e.message);\n                    }\n                    if (!isCurrentConnectionStillActive()) {\n                      return;\n                    }\n                    // TODO: Maybe add an 'errored' state or a retry limit?\n                    this._setSubscription(hash, {\n                      ...subscription,\n                      state: 'subscribed',\n                    });\n                    await this._updateSubscriptions();\n                    return;\n                  }\n                }\n                this._setSubscription(hash, {\n                  ...subscription,\n                  state: 'unsubscribed',\n                });\n                await this._updateSubscriptions();\n              })();\n            }\n            break;\n          case 'subscribing':\n          case 'unsubscribing':\n            break;\n        }\n      }),\n    );\n  }\n\n  /**\n   * @internal\n   */\n  private _handleServerNotification<\n    TCallback extends SubscriptionConfig['callback'],\n  >(\n    serverSubscriptionId: ServerSubscriptionId,\n    callbackArgs: Parameters<TCallback>,\n  ): void {\n    const callbacks =\n      this._subscriptionCallbacksByServerSubscriptionId[serverSubscriptionId];\n    if (callbacks === undefined) {\n      return;\n    }\n    callbacks.forEach(cb => {\n      try {\n        cb(\n          // I failed to find a way to convince TypeScript that `cb` is of type\n          // `TCallback` which is certainly compatible with `Parameters<TCallback>`.\n          // See https://github.com/microsoft/TypeScript/issues/47615\n          // @ts-ignore\n          ...callbackArgs,\n        );\n      } catch (e) {\n        console.error(e);\n      }\n    });\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnAccountNotification(notification: object) {\n    const {result, subscription} = create(\n      notification,\n      AccountNotificationResult,\n    );\n    this._handleServerNotification<AccountChangeCallback>(subscription, [\n      result.value,\n      result.context,\n    ]);\n  }\n\n  /**\n   * @internal\n   */\n  private _makeSubscription(\n    subscriptionConfig: SubscriptionConfig,\n    /**\n     * When preparing `args` for a call to `_makeSubscription`, be sure\n     * to carefully apply a default `commitment` property, if necessary.\n     *\n     * - If the user supplied a `commitment` use that.\n     * - Otherwise, if the `Connection::commitment` is set, use that.\n     * - Otherwise, set it to the RPC server default: `finalized`.\n     *\n     * This is extremely important to ensure that these two fundamentally\n     * identical subscriptions produce the same identifying hash:\n     *\n     * - A subscription made without specifying a commitment.\n     * - A subscription made where the commitment specified is the same\n     *   as the default applied to the subscription above.\n     *\n     * Example; these two subscriptions must produce the same hash:\n     *\n     * - An `accountSubscribe` subscription for `'PUBKEY'`\n     * - An `accountSubscribe` subscription for `'PUBKEY'` with commitment\n     *   `'finalized'`.\n     *\n     * See the 'making a subscription with defaulted params omitted' test\n     * in `connection-subscriptions.ts` for more.\n     */\n    args: IWSRequestParams,\n  ): ClientSubscriptionId {\n    const clientSubscriptionId = this._nextClientSubscriptionId++;\n    const hash = fastStableStringify(\n      [subscriptionConfig.method, args],\n      true /* isArrayProp */,\n    );\n    const existingSubscription = this._subscriptionsByHash[hash];\n    if (existingSubscription === undefined) {\n      this._subscriptionsByHash[hash] = {\n        ...subscriptionConfig,\n        args,\n        callbacks: new Set([subscriptionConfig.callback]),\n        state: 'pending',\n      };\n    } else {\n      existingSubscription.callbacks.add(subscriptionConfig.callback);\n    }\n    this._subscriptionHashByClientSubscriptionId[clientSubscriptionId] = hash;\n    this._subscriptionDisposeFunctionsByClientSubscriptionId[\n      clientSubscriptionId\n    ] = async () => {\n      delete this._subscriptionDisposeFunctionsByClientSubscriptionId[\n        clientSubscriptionId\n      ];\n      delete this._subscriptionHashByClientSubscriptionId[clientSubscriptionId];\n      const subscription = this._subscriptionsByHash[hash];\n      assert(\n        subscription !== undefined,\n        `Could not find a \\`Subscription\\` when tearing down client subscription #${clientSubscriptionId}`,\n      );\n      subscription.callbacks.delete(subscriptionConfig.callback);\n      await this._updateSubscriptions();\n    };\n    this._updateSubscriptions();\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Register a callback to be invoked whenever the specified account changes\n   *\n   * @param publicKey Public key of the account to monitor\n   * @param callback Function to invoke whenever the account is changed\n   * @param commitment Specify the commitment level account changes must reach before notification\n   * @return subscription id\n   */\n  onAccountChange(\n    publicKey: PublicKey,\n    callback: AccountChangeCallback,\n    commitment?: Commitment,\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n      'base64',\n    );\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'accountSubscribe',\n        unsubscribeMethod: 'accountUnsubscribe',\n      },\n      args,\n    );\n  }\n\n  /**\n   * Deregister an account notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeAccountChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'account change',\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnProgramAccountNotification(notification: Object) {\n    const {result, subscription} = create(\n      notification,\n      ProgramAccountNotificationResult,\n    );\n    this._handleServerNotification<ProgramAccountChangeCallback>(subscription, [\n      {\n        accountId: result.value.pubkey,\n        accountInfo: result.value.account,\n      },\n      result.context,\n    ]);\n  }\n\n  /**\n   * Register a callback to be invoked whenever accounts owned by the\n   * specified program change\n   *\n   * @param programId Public key of the program to monitor\n   * @param callback Function to invoke whenever the account is changed\n   * @param commitment Specify the commitment level account changes must reach before notification\n   * @param filters The program account filters to pass into the RPC method\n   * @return subscription id\n   */\n  onProgramAccountChange(\n    programId: PublicKey,\n    callback: ProgramAccountChangeCallback,\n    commitment?: Commitment,\n    filters?: GetProgramAccountsFilter[],\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [programId.toBase58()],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n      'base64' /* encoding */,\n      filters ? {filters: filters} : undefined /* extra */,\n    );\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'programSubscribe',\n        unsubscribeMethod: 'programUnsubscribe',\n      },\n      args,\n    );\n  }\n\n  /**\n   * Deregister an account notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeProgramAccountChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'program account change',\n    );\n  }\n\n  /**\n   * Registers a callback to be invoked whenever logs are emitted.\n   */\n  onLogs(\n    filter: LogsFilter,\n    callback: LogsCallback,\n    commitment?: Commitment,\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [typeof filter === 'object' ? {mentions: [filter.toString()]} : filter],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n    );\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'logsSubscribe',\n        unsubscribeMethod: 'logsUnsubscribe',\n      },\n      args,\n    );\n  }\n\n  /**\n   * Deregister a logs callback.\n   *\n   * @param id client subscription id to deregister.\n   */\n  async removeOnLogsListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(clientSubscriptionId, 'logs');\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnLogsNotification(notification: Object) {\n    const {result, subscription} = create(notification, LogsNotificationResult);\n    this._handleServerNotification<LogsCallback>(subscription, [\n      result.value,\n      result.context,\n    ]);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSlotNotification(notification: Object) {\n    const {result, subscription} = create(notification, SlotNotificationResult);\n    this._handleServerNotification<SlotChangeCallback>(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon slot changes\n   *\n   * @param callback Function to invoke whenever the slot changes\n   * @return subscription id\n   */\n  onSlotChange(callback: SlotChangeCallback): ClientSubscriptionId {\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'slotSubscribe',\n        unsubscribeMethod: 'slotUnsubscribe',\n      },\n      [] /* args */,\n    );\n  }\n\n  /**\n   * Deregister a slot notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeSlotChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'slot change',\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSlotUpdatesNotification(notification: Object) {\n    const {result, subscription} = create(\n      notification,\n      SlotUpdateNotificationResult,\n    );\n    this._handleServerNotification<SlotUpdateCallback>(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon slot updates. {@link SlotUpdate}'s\n   * may be useful to track live progress of a cluster.\n   *\n   * @param callback Function to invoke whenever the slot updates\n   * @return subscription id\n   */\n  onSlotUpdate(callback: SlotUpdateCallback): ClientSubscriptionId {\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'slotsUpdatesSubscribe',\n        unsubscribeMethod: 'slotsUpdatesUnsubscribe',\n      },\n      [] /* args */,\n    );\n  }\n\n  /**\n   * Deregister a slot update notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeSlotUpdateListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'slot update',\n    );\n  }\n\n  /**\n   * @internal\n   */\n\n  private async _unsubscribeClientSubscription(\n    clientSubscriptionId: ClientSubscriptionId,\n    subscriptionName: string,\n  ) {\n    const dispose =\n      this._subscriptionDisposeFunctionsByClientSubscriptionId[\n        clientSubscriptionId\n      ];\n    if (dispose) {\n      await dispose();\n    } else {\n      console.warn(\n        'Ignored unsubscribe request because an active subscription with id ' +\n          `\\`${clientSubscriptionId}\\` for '${subscriptionName}' events ` +\n          'could not be found.',\n      );\n    }\n  }\n\n  _buildArgs(\n    args: Array<any>,\n    override?: Commitment,\n    encoding?: 'jsonParsed' | 'base64',\n    extra?: any,\n  ): Array<any> {\n    const commitment = override || this._commitment;\n    if (commitment || encoding || extra) {\n      let options: any = {};\n      if (encoding) {\n        options.encoding = encoding;\n      }\n      if (commitment) {\n        options.commitment = commitment;\n      }\n      if (extra) {\n        options = Object.assign(options, extra);\n      }\n      args.push(options);\n    }\n    return args;\n  }\n\n  /**\n   * @internal\n   */\n  _buildArgsAtLeastConfirmed(\n    args: Array<any>,\n    override?: Finality,\n    encoding?: 'jsonParsed' | 'base64',\n    extra?: any,\n  ): Array<any> {\n    const commitment = override || this._commitment;\n    if (commitment && !['confirmed', 'finalized'].includes(commitment)) {\n      throw new Error(\n        'Using Connection with default commitment: `' +\n          this._commitment +\n          '`, but method requires at least `confirmed`',\n      );\n    }\n    return this._buildArgs(args, override, encoding, extra);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSignatureNotification(notification: Object) {\n    const {result, subscription} = create(\n      notification,\n      SignatureNotificationResult,\n    );\n    if (result.value !== 'receivedSignature') {\n      /**\n       * Special case.\n       * After a signature is processed, RPCs automatically dispose of the\n       * subscription on the server side. We need to track which of these\n       * subscriptions have been disposed in such a way, so that we know\n       * whether the client is dealing with a not-yet-processed signature\n       * (in which case we must tear down the server subscription) or an\n       * already-processed signature (in which case the client can simply\n       * clear out the subscription locally without telling the server).\n       *\n       * NOTE: There is a proposal to eliminate this special case, here:\n       * https://github.com/solana-labs/solana/issues/18892\n       */\n      this._subscriptionsAutoDisposedByRpc.add(subscription);\n    }\n    this._handleServerNotification<SignatureSubscriptionCallback>(\n      subscription,\n      result.value === 'receivedSignature'\n        ? [{type: 'received'}, result.context]\n        : [{type: 'status', result: result.value}, result.context],\n    );\n  }\n\n  /**\n   * Register a callback to be invoked upon signature updates\n   *\n   * @param signature Transaction signature string in base 58\n   * @param callback Function to invoke on signature notifications\n   * @param commitment Specify the commitment level signature must reach before notification\n   * @return subscription id\n   */\n  onSignature(\n    signature: TransactionSignature,\n    callback: SignatureResultCallback,\n    commitment?: Commitment,\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [signature],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n    );\n    const clientSubscriptionId = this._makeSubscription(\n      {\n        callback: (notification, context) => {\n          if (notification.type === 'status') {\n            callback(notification.result, context);\n            // Signatures subscriptions are auto-removed by the RPC service\n            // so no need to explicitly send an unsubscribe message.\n            try {\n              this.removeSignatureListener(clientSubscriptionId);\n              // eslint-disable-next-line no-empty\n            } catch (_err) {\n              // Already removed.\n            }\n          }\n        },\n        method: 'signatureSubscribe',\n        unsubscribeMethod: 'signatureUnsubscribe',\n      },\n      args,\n    );\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Register a callback to be invoked when a transaction is\n   * received and/or processed.\n   *\n   * @param signature Transaction signature string in base 58\n   * @param callback Function to invoke on signature notifications\n   * @param options Enable received notifications and set the commitment\n   *   level that signature must reach before notification\n   * @return subscription id\n   */\n  onSignatureWithOptions(\n    signature: TransactionSignature,\n    callback: SignatureSubscriptionCallback,\n    options?: SignatureSubscriptionOptions,\n  ): ClientSubscriptionId {\n    const {commitment, ...extra} = {\n      ...options,\n      commitment:\n        (options && options.commitment) || this._commitment || 'finalized', // Apply connection/server default.\n    };\n    const args = this._buildArgs(\n      [signature],\n      commitment,\n      undefined /* encoding */,\n      extra,\n    );\n    const clientSubscriptionId = this._makeSubscription(\n      {\n        callback: (notification, context) => {\n          callback(notification, context);\n          // Signatures subscriptions are auto-removed by the RPC service\n          // so no need to explicitly send an unsubscribe message.\n          try {\n            this.removeSignatureListener(clientSubscriptionId);\n            // eslint-disable-next-line no-empty\n          } catch (_err) {\n            // Already removed.\n          }\n        },\n        method: 'signatureSubscribe',\n        unsubscribeMethod: 'signatureUnsubscribe',\n      },\n      args,\n    );\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Deregister a signature notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeSignatureListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'signature result',\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnRootNotification(notification: Object) {\n    const {result, subscription} = create(notification, RootNotificationResult);\n    this._handleServerNotification<RootChangeCallback>(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon root changes\n   *\n   * @param callback Function to invoke whenever the root changes\n   * @return subscription id\n   */\n  onRootChange(callback: RootChangeCallback): ClientSubscriptionId {\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'rootSubscribe',\n        unsubscribeMethod: 'rootUnsubscribe',\n      },\n      [] /* args */,\n    );\n  }\n\n  /**\n   * Deregister a root notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeRootChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'root change',\n    );\n  }\n}\n","import {generateKeypair, getPublicKey, Ed25519Keypair} from './utils/ed25519';\nimport {PublicKey} from './publickey';\n\n/**\n * Keypair signer interface\n */\nexport interface Signer {\n  publicKey: PublicKey;\n  secretKey: Uint8Array;\n}\n\n/**\n * An account keypair used for signing transactions.\n */\nexport class Keypair {\n  private _keypair: Ed25519Keypair;\n\n  /**\n   * Create a new keypair instance.\n   * Generate random keypair if no {@link Ed25519Keypair} is provided.\n   *\n   * @param keypair ed25519 keypair\n   */\n  constructor(keypair?: Ed25519Keypair) {\n    this._keypair = keypair ?? generateKeypair();\n  }\n\n  /**\n   * Generate a new random keypair\n   */\n  static generate(): Keypair {\n    return new Keypair(generateKeypair());\n  }\n\n  /**\n   * Create a keypair from a raw secret key byte array.\n   *\n   * This method should only be used to recreate a keypair from a previously\n   * generated secret key. Generating keypairs from a random seed should be done\n   * with the {@link Keypair.fromSeed} method.\n   *\n   * @throws error if the provided secret key is invalid and validation is not skipped.\n   *\n   * @param secretKey secret key byte array\n   * @param options: skip secret key validation\n   */\n  static fromSecretKey(\n    secretKey: Uint8Array,\n    options?: {skipValidation?: boolean},\n  ): Keypair {\n    if (secretKey.byteLength !== 64) {\n      throw new Error('bad secret key size');\n    }\n    const publicKey = secretKey.slice(32, 64);\n    if (!options || !options.skipValidation) {\n      const privateScalar = secretKey.slice(0, 32);\n      const computedPublicKey = getPublicKey(privateScalar);\n      for (let ii = 0; ii < 32; ii++) {\n        if (publicKey[ii] !== computedPublicKey[ii]) {\n          throw new Error('provided secretKey is invalid');\n        }\n      }\n    }\n    return new Keypair({publicKey, secretKey});\n  }\n\n  /**\n   * Generate a keypair from a 32 byte seed.\n   *\n   * @param seed seed byte array\n   */\n  static fromSeed(seed: Uint8Array): Keypair {\n    const publicKey = getPublicKey(seed);\n    const secretKey = new Uint8Array(64);\n    secretKey.set(seed);\n    secretKey.set(publicKey, 32);\n    return new Keypair({publicKey, secretKey});\n  }\n\n  /**\n   * The public key for this keypair\n   */\n  get publicKey(): PublicKey {\n    return new PublicKey(this._keypair.publicKey);\n  }\n\n  /**\n   * The raw secret key for this keypair\n   */\n  get secretKey(): Uint8Array {\n    return new Uint8Array(this._keypair.secretKey);\n  }\n}\n","import {toBufferLE} from 'bigint-buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport * as Layout from '../../layout';\nimport {PublicKey} from '../../publickey';\nimport * as bigintLayout from '../../utils/bigint';\nimport {SystemProgram} from '../system';\nimport {TransactionInstruction} from '../../transaction';\nimport {decodeData, encodeData, IInstructionInputData} from '../../instruction';\n\nexport * from './state';\n\nexport type CreateLookupTableParams = {\n  /** Account used to derive and control the new address lookup table. */\n  authority: PublicKey;\n  /** Account that will fund the new address lookup table. */\n  payer: PublicKey;\n  /** A recent slot must be used in the derivation path for each initialized table. */\n  recentSlot: bigint | number;\n};\n\nexport type FreezeLookupTableParams = {\n  /** Address lookup table account to freeze. */\n  lookupTable: PublicKey;\n  /** Account which is the current authority. */\n  authority: PublicKey;\n};\n\nexport type ExtendLookupTableParams = {\n  /** Address lookup table account to extend. */\n  lookupTable: PublicKey;\n  /** Account which is the current authority. */\n  authority: PublicKey;\n  /** Account that will fund the table reallocation.\n   * Not required if the reallocation has already been funded. */\n  payer?: PublicKey;\n  /** List of Public Keys to be added to the lookup table. */\n  addresses: Array<PublicKey>;\n};\n\nexport type DeactivateLookupTableParams = {\n  /** Address lookup table account to deactivate. */\n  lookupTable: PublicKey;\n  /** Account which is the current authority. */\n  authority: PublicKey;\n};\n\nexport type CloseLookupTableParams = {\n  /** Address lookup table account to close. */\n  lookupTable: PublicKey;\n  /** Account which is the current authority. */\n  authority: PublicKey;\n  /** Recipient of closed account lamports. */\n  recipient: PublicKey;\n};\n\n/**\n * An enumeration of valid LookupTableInstructionType's\n */\nexport type LookupTableInstructionType =\n  | 'CreateLookupTable'\n  | 'ExtendLookupTable'\n  | 'CloseLookupTable'\n  | 'FreezeLookupTable'\n  | 'DeactivateLookupTable';\n\ntype LookupTableInstructionInputData = {\n  CreateLookupTable: IInstructionInputData &\n    Readonly<{\n      recentSlot: bigint;\n      bumpSeed: number;\n    }>;\n  FreezeLookupTable: IInstructionInputData;\n  ExtendLookupTable: IInstructionInputData &\n    Readonly<{\n      numberOfAddresses: bigint;\n      addresses: Array<Uint8Array>;\n    }>;\n  DeactivateLookupTable: IInstructionInputData;\n  CloseLookupTable: IInstructionInputData;\n};\n\n/**\n * An enumeration of valid address lookup table InstructionType's\n * @internal\n */\nexport const LOOKUP_TABLE_INSTRUCTION_LAYOUTS = Object.freeze({\n  CreateLookupTable: {\n    index: 0,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['CreateLookupTable']\n    >([\n      BufferLayout.u32('instruction'),\n      bigintLayout.u64('recentSlot'),\n      BufferLayout.u8('bumpSeed'),\n    ]),\n  },\n  FreezeLookupTable: {\n    index: 1,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['FreezeLookupTable']\n    >([BufferLayout.u32('instruction')]),\n  },\n  ExtendLookupTable: {\n    index: 2,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['ExtendLookupTable']\n    >([\n      BufferLayout.u32('instruction'),\n      bigintLayout.u64(),\n      BufferLayout.seq(\n        Layout.publicKey(),\n        BufferLayout.offset(BufferLayout.u32(), -8),\n        'addresses',\n      ),\n    ]),\n  },\n  DeactivateLookupTable: {\n    index: 3,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['DeactivateLookupTable']\n    >([BufferLayout.u32('instruction')]),\n  },\n  CloseLookupTable: {\n    index: 4,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['CloseLookupTable']\n    >([BufferLayout.u32('instruction')]),\n  },\n});\n\nexport class AddressLookupTableInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): LookupTableInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const index = instructionTypeLayout.decode(instruction.data);\n\n    let type: LookupTableInstructionType | undefined;\n    for (const [layoutType, layout] of Object.entries(\n      LOOKUP_TABLE_INSTRUCTION_LAYOUTS,\n    )) {\n      if ((layout as any).index == index) {\n        type = layoutType as LookupTableInstructionType;\n        break;\n      }\n    }\n    if (!type) {\n      throw new Error(\n        'Invalid Instruction. Should be a LookupTable Instruction',\n      );\n    }\n    return type;\n  }\n\n  static decodeCreateLookupTable(\n    instruction: TransactionInstruction,\n  ): CreateLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 4);\n\n    const {recentSlot} = decodeData(\n      LOOKUP_TABLE_INSTRUCTION_LAYOUTS.CreateLookupTable,\n      instruction.data,\n    );\n\n    return {\n      authority: instruction.keys[1].pubkey,\n      payer: instruction.keys[2].pubkey,\n      recentSlot: Number(recentSlot),\n    };\n  }\n\n  static decodeExtendLookupTable(\n    instruction: TransactionInstruction,\n  ): ExtendLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    if (instruction.keys.length < 2) {\n      throw new Error(\n        `invalid instruction; found ${instruction.keys.length} keys, expected at least 2`,\n      );\n    }\n\n    const {addresses} = decodeData(\n      LOOKUP_TABLE_INSTRUCTION_LAYOUTS.ExtendLookupTable,\n      instruction.data,\n    );\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n      payer:\n        instruction.keys.length > 2 ? instruction.keys[2].pubkey : undefined,\n      addresses: addresses.map(buffer => new PublicKey(buffer)),\n    };\n  }\n\n  static decodeCloseLookupTable(\n    instruction: TransactionInstruction,\n  ): CloseLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 3);\n\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n      recipient: instruction.keys[2].pubkey,\n    };\n  }\n\n  static decodeFreezeLookupTable(\n    instruction: TransactionInstruction,\n  ): FreezeLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 2);\n\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n    };\n  }\n\n  static decodeDeactivateLookupTable(\n    instruction: TransactionInstruction,\n  ): DeactivateLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 2);\n\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(AddressLookupTableProgram.programId)) {\n      throw new Error(\n        'invalid instruction; programId is not AddressLookupTable Program',\n      );\n    }\n  }\n  /**\n   * @internal\n   */\n  static checkKeysLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\nexport class AddressLookupTableProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  static programId: PublicKey = new PublicKey(\n    'AddressLookupTab1e1111111111111111111111111',\n  );\n\n  static createLookupTable(params: CreateLookupTableParams) {\n    const [lookupTableAddress, bumpSeed] = PublicKey.findProgramAddressSync(\n      [params.authority.toBuffer(), toBufferLE(BigInt(params.recentSlot), 8)],\n      this.programId,\n    );\n\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.CreateLookupTable;\n    const data = encodeData(type, {\n      recentSlot: BigInt(params.recentSlot),\n      bumpSeed: bumpSeed,\n    });\n\n    const keys = [\n      {\n        pubkey: lookupTableAddress,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n      {\n        pubkey: params.payer,\n        isSigner: true,\n        isWritable: true,\n      },\n      {\n        pubkey: SystemProgram.programId,\n        isSigner: false,\n        isWritable: false,\n      },\n    ];\n\n    return [\n      new TransactionInstruction({\n        programId: this.programId,\n        keys: keys,\n        data: data,\n      }),\n      lookupTableAddress,\n    ] as [TransactionInstruction, PublicKey];\n  }\n\n  static freezeLookupTable(params: FreezeLookupTableParams) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.FreezeLookupTable;\n    const data = encodeData(type);\n\n    const keys = [\n      {\n        pubkey: params.lookupTable,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n    ];\n\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data,\n    });\n  }\n\n  static extendLookupTable(params: ExtendLookupTableParams) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.ExtendLookupTable;\n    const data = encodeData(type, {\n      addresses: params.addresses.map(addr => addr.toBytes()),\n    });\n\n    const keys = [\n      {\n        pubkey: params.lookupTable,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n    ];\n\n    if (params.payer) {\n      keys.push(\n        {\n          pubkey: params.payer,\n          isSigner: true,\n          isWritable: true,\n        },\n        {\n          pubkey: SystemProgram.programId,\n          isSigner: false,\n          isWritable: false,\n        },\n      );\n    }\n\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data,\n    });\n  }\n\n  static deactivateLookupTable(params: DeactivateLookupTableParams) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.DeactivateLookupTable;\n    const data = encodeData(type);\n\n    const keys = [\n      {\n        pubkey: params.lookupTable,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n    ];\n\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data,\n    });\n  }\n\n  static closeLookupTable(params: CloseLookupTableParams) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.CloseLookupTable;\n    const data = encodeData(type);\n\n    const keys = [\n      {\n        pubkey: params.lookupTable,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n      {\n        pubkey: params.recipient,\n        isSigner: false,\n        isWritable: true,\n      },\n    ];\n\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data,\n    });\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from '../instruction';\nimport {PublicKey} from '../publickey';\nimport {TransactionInstruction} from '../transaction';\nimport {u64} from '../utils/bigint';\n\n/**\n * Compute Budget Instruction class\n */\nexport class ComputeBudgetInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a compute budget instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): ComputeBudgetInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u8('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: ComputeBudgetInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS,\n    )) {\n      if (layout.index == typeIndex) {\n        type = ixType as ComputeBudgetInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error(\n        'Instruction type incorrect; not a ComputeBudgetInstruction',\n      );\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode request units compute budget instruction and retrieve the instruction params.\n   */\n  static decodeRequestUnits(\n    instruction: TransactionInstruction,\n  ): RequestUnitsParams {\n    this.checkProgramId(instruction.programId);\n    const {units, additionalFee} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestUnits,\n      instruction.data,\n    );\n    return {units, additionalFee};\n  }\n\n  /**\n   * Decode request heap frame compute budget instruction and retrieve the instruction params.\n   */\n  static decodeRequestHeapFrame(\n    instruction: TransactionInstruction,\n  ): RequestHeapFrameParams {\n    this.checkProgramId(instruction.programId);\n    const {bytes} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestHeapFrame,\n      instruction.data,\n    );\n    return {bytes};\n  }\n\n  /**\n   * Decode set compute unit limit compute budget instruction and retrieve the instruction params.\n   */\n  static decodeSetComputeUnitLimit(\n    instruction: TransactionInstruction,\n  ): SetComputeUnitLimitParams {\n    this.checkProgramId(instruction.programId);\n    const {units} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitLimit,\n      instruction.data,\n    );\n    return {units};\n  }\n\n  /**\n   * Decode set compute unit price compute budget instruction and retrieve the instruction params.\n   */\n  static decodeSetComputeUnitPrice(\n    instruction: TransactionInstruction,\n  ): SetComputeUnitPriceParams {\n    this.checkProgramId(instruction.programId);\n    const {microLamports} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitPrice,\n      instruction.data,\n    );\n    return {microLamports};\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(ComputeBudgetProgram.programId)) {\n      throw new Error(\n        'invalid instruction; programId is not ComputeBudgetProgram',\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid ComputeBudgetInstructionType's\n */\nexport type ComputeBudgetInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof ComputeBudgetInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  | 'RequestUnits'\n  | 'RequestHeapFrame'\n  | 'SetComputeUnitLimit'\n  | 'SetComputeUnitPrice';\n\ntype ComputeBudgetInstructionInputData = {\n  RequestUnits: IInstructionInputData & Readonly<RequestUnitsParams>;\n  RequestHeapFrame: IInstructionInputData & Readonly<RequestHeapFrameParams>;\n  SetComputeUnitLimit: IInstructionInputData &\n    Readonly<SetComputeUnitLimitParams>;\n  SetComputeUnitPrice: IInstructionInputData &\n    Readonly<SetComputeUnitPriceParams>;\n};\n\n/**\n * Request units instruction params\n */\nexport interface RequestUnitsParams {\n  /** Units to request for transaction-wide compute */\n  units: number;\n  /** Prioritization fee lamports */\n  additionalFee: number;\n}\n\n/**\n * Request heap frame instruction params\n */\nexport type RequestHeapFrameParams = {\n  /** Requested transaction-wide program heap size in bytes. Must be multiple of 1024. Applies to each program, including CPIs. */\n  bytes: number;\n};\n\n/**\n * Set compute unit limit instruction params\n */\nexport interface SetComputeUnitLimitParams {\n  /** Transaction-wide compute unit limit */\n  units: number;\n}\n\n/**\n * Set compute unit price instruction params\n */\nexport interface SetComputeUnitPriceParams {\n  /** Transaction compute unit price used for prioritization fees */\n  microLamports: number | bigint;\n}\n\n/**\n * An enumeration of valid ComputeBudget InstructionType's\n * @internal\n */\nexport const COMPUTE_BUDGET_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in ComputeBudgetInstructionType]: InstructionType<\n    ComputeBudgetInstructionInputData[Instruction]\n  >;\n}>({\n  RequestUnits: {\n    index: 0,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['RequestUnits']\n    >([\n      BufferLayout.u8('instruction'),\n      BufferLayout.u32('units'),\n      BufferLayout.u32('additionalFee'),\n    ]),\n  },\n  RequestHeapFrame: {\n    index: 1,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['RequestHeapFrame']\n    >([BufferLayout.u8('instruction'), BufferLayout.u32('bytes')]),\n  },\n  SetComputeUnitLimit: {\n    index: 2,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['SetComputeUnitLimit']\n    >([BufferLayout.u8('instruction'), BufferLayout.u32('units')]),\n  },\n  SetComputeUnitPrice: {\n    index: 3,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['SetComputeUnitPrice']\n    >([BufferLayout.u8('instruction'), u64('microLamports')]),\n  },\n});\n\n/**\n * Factory class for transaction instructions to interact with the Compute Budget program\n */\nexport class ComputeBudgetProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Compute Budget program\n   */\n  static programId: PublicKey = new PublicKey(\n    'ComputeBudget111111111111111111111111111111',\n  );\n\n  /**\n   * @deprecated Instead, call {@link setComputeUnitLimit} and/or {@link setComputeUnitPrice}\n   */\n  static requestUnits(params: RequestUnitsParams): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestUnits;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  static requestHeapFrame(\n    params: RequestHeapFrameParams,\n  ): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestHeapFrame;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  static setComputeUnitLimit(\n    params: SetComputeUnitLimitParams,\n  ): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitLimit;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  static setComputeUnitPrice(\n    params: SetComputeUnitPriceParams,\n  ): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitPrice;\n    const data = encodeData(type, {\n      microLamports: BigInt(params.microLamports),\n    });\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {Keypair} from '../keypair';\nimport {PublicKey} from '../publickey';\nimport {TransactionInstruction} from '../transaction';\nimport assert from '../utils/assert';\nimport {sign} from '../utils/ed25519';\n\nconst PRIVATE_KEY_BYTES = 64;\nconst PUBLIC_KEY_BYTES = 32;\nconst SIGNATURE_BYTES = 64;\n\n/**\n * Params for creating an ed25519 instruction using a public key\n */\nexport type CreateEd25519InstructionWithPublicKeyParams = {\n  publicKey: Uint8Array;\n  message: Uint8Array;\n  signature: Uint8Array;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an ed25519 instruction using a private key\n */\nexport type CreateEd25519InstructionWithPrivateKeyParams = {\n  privateKey: Uint8Array;\n  message: Uint8Array;\n  instructionIndex?: number;\n};\n\nconst ED25519_INSTRUCTION_LAYOUT = BufferLayout.struct<\n  Readonly<{\n    messageDataOffset: number;\n    messageDataSize: number;\n    messageInstructionIndex: number;\n    numSignatures: number;\n    padding: number;\n    publicKeyInstructionIndex: number;\n    publicKeyOffset: number;\n    signatureInstructionIndex: number;\n    signatureOffset: number;\n  }>\n>([\n  BufferLayout.u8('numSignatures'),\n  BufferLayout.u8('padding'),\n  BufferLayout.u16('signatureOffset'),\n  BufferLayout.u16('signatureInstructionIndex'),\n  BufferLayout.u16('publicKeyOffset'),\n  BufferLayout.u16('publicKeyInstructionIndex'),\n  BufferLayout.u16('messageDataOffset'),\n  BufferLayout.u16('messageDataSize'),\n  BufferLayout.u16('messageInstructionIndex'),\n]);\n\nexport class Ed25519Program {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the ed25519 program\n   */\n  static programId: PublicKey = new PublicKey(\n    'Ed25519SigVerify111111111111111111111111111',\n  );\n\n  /**\n   * Create an ed25519 instruction with a public key and signature. The\n   * public key must be a buffer that is 32 bytes long, and the signature\n   * must be a buffer of 64 bytes.\n   */\n  static createInstructionWithPublicKey(\n    params: CreateEd25519InstructionWithPublicKeyParams,\n  ): TransactionInstruction {\n    const {publicKey, message, signature, instructionIndex} = params;\n\n    assert(\n      publicKey.length === PUBLIC_KEY_BYTES,\n      `Public Key must be ${PUBLIC_KEY_BYTES} bytes but received ${publicKey.length} bytes`,\n    );\n\n    assert(\n      signature.length === SIGNATURE_BYTES,\n      `Signature must be ${SIGNATURE_BYTES} bytes but received ${signature.length} bytes`,\n    );\n\n    const publicKeyOffset = ED25519_INSTRUCTION_LAYOUT.span;\n    const signatureOffset = publicKeyOffset + publicKey.length;\n    const messageDataOffset = signatureOffset + signature.length;\n    const numSignatures = 1;\n\n    const instructionData = Buffer.alloc(messageDataOffset + message.length);\n\n    const index =\n      instructionIndex == null\n        ? 0xffff // An index of `u16::MAX` makes it default to the current instruction.\n        : instructionIndex;\n\n    ED25519_INSTRUCTION_LAYOUT.encode(\n      {\n        numSignatures,\n        padding: 0,\n        signatureOffset,\n        signatureInstructionIndex: index,\n        publicKeyOffset,\n        publicKeyInstructionIndex: index,\n        messageDataOffset,\n        messageDataSize: message.length,\n        messageInstructionIndex: index,\n      },\n      instructionData,\n    );\n\n    instructionData.fill(publicKey, publicKeyOffset);\n    instructionData.fill(signature, signatureOffset);\n    instructionData.fill(message, messageDataOffset);\n\n    return new TransactionInstruction({\n      keys: [],\n      programId: Ed25519Program.programId,\n      data: instructionData,\n    });\n  }\n\n  /**\n   * Create an ed25519 instruction with a private key. The private key\n   * must be a buffer that is 64 bytes long.\n   */\n  static createInstructionWithPrivateKey(\n    params: CreateEd25519InstructionWithPrivateKeyParams,\n  ): TransactionInstruction {\n    const {privateKey, message, instructionIndex} = params;\n\n    assert(\n      privateKey.length === PRIVATE_KEY_BYTES,\n      `Private key must be ${PRIVATE_KEY_BYTES} bytes but received ${privateKey.length} bytes`,\n    );\n\n    try {\n      const keypair = Keypair.fromSecretKey(privateKey);\n      const publicKey = keypair.publicKey.toBytes();\n      const signature = sign(message, keypair.secretKey);\n\n      return this.createInstructionWithPublicKey({\n        publicKey,\n        message,\n        signature,\n        instructionIndex,\n      });\n    } catch (error) {\n      throw new Error(`Error creating instruction; ${error}`);\n    }\n  }\n}\n","import assert from './_assert.js';\nimport u64 from './_u64.js';\nimport { Hash, u32, toBytes, wrapConstructor, wrapConstructorWithOpts, } from './utils.js';\n// Various per round constants calculations\nconst [SHA3_PI, SHA3_ROTL, _SHA3_IOTA] = [[], [], []];\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst _7n = BigInt(7);\nconst _256n = BigInt(256);\nconst _0x71n = BigInt(0x71);\nfor (let round = 0, R = _1n, x = 1, y = 0; round < 24; round++) {\n    // Pi\n    [x, y] = [y, (2 * x + 3 * y) % 5];\n    SHA3_PI.push(2 * (5 * y + x));\n    // Rotational\n    SHA3_ROTL.push((((round + 1) * (round + 2)) / 2) % 64);\n    // Iota\n    let t = _0n;\n    for (let j = 0; j < 7; j++) {\n        R = ((R << _1n) ^ ((R >> _7n) * _0x71n)) % _256n;\n        if (R & _2n)\n            t ^= _1n << ((_1n << BigInt(j)) - _1n);\n    }\n    _SHA3_IOTA.push(t);\n}\nconst [SHA3_IOTA_H, SHA3_IOTA_L] = u64.split(_SHA3_IOTA, true);\n// Left rotation (without 0, 32, 64)\nconst rotlH = (h, l, s) => s > 32 ? u64.rotlBH(h, l, s) : u64.rotlSH(h, l, s);\nconst rotlL = (h, l, s) => s > 32 ? u64.rotlBL(h, l, s) : u64.rotlSL(h, l, s);\n// Same as keccakf1600, but allows to skip some rounds\nexport function keccakP(s, rounds = 24) {\n    const B = new Uint32Array(5 * 2);\n    // NOTE: all indices are x2 since we store state as u32 instead of u64 (bigints to slow in js)\n    for (let round = 24 - rounds; round < 24; round++) {\n        // Theta θ\n        for (let x = 0; x < 10; x++)\n            B[x] = s[x] ^ s[x + 10] ^ s[x + 20] ^ s[x + 30] ^ s[x + 40];\n        for (let x = 0; x < 10; x += 2) {\n            const idx1 = (x + 8) % 10;\n            const idx0 = (x + 2) % 10;\n            const B0 = B[idx0];\n            const B1 = B[idx0 + 1];\n            const Th = rotlH(B0, B1, 1) ^ B[idx1];\n            const Tl = rotlL(B0, B1, 1) ^ B[idx1 + 1];\n            for (let y = 0; y < 50; y += 10) {\n                s[x + y] ^= Th;\n                s[x + y + 1] ^= Tl;\n            }\n        }\n        // Rho (ρ) and Pi (π)\n        let curH = s[2];\n        let curL = s[3];\n        for (let t = 0; t < 24; t++) {\n            const shift = SHA3_ROTL[t];\n            const Th = rotlH(curH, curL, shift);\n            const Tl = rotlL(curH, curL, shift);\n            const PI = SHA3_PI[t];\n            curH = s[PI];\n            curL = s[PI + 1];\n            s[PI] = Th;\n            s[PI + 1] = Tl;\n        }\n        // Chi (χ)\n        for (let y = 0; y < 50; y += 10) {\n            for (let x = 0; x < 10; x++)\n                B[x] = s[y + x];\n            for (let x = 0; x < 10; x++)\n                s[y + x] ^= ~B[(x + 2) % 10] & B[(x + 4) % 10];\n        }\n        // Iota (ι)\n        s[0] ^= SHA3_IOTA_H[round];\n        s[1] ^= SHA3_IOTA_L[round];\n    }\n    B.fill(0);\n}\nexport class Keccak extends Hash {\n    // NOTE: we accept arguments in bytes instead of bits here.\n    constructor(blockLen, suffix, outputLen, enableXOF = false, rounds = 24) {\n        super();\n        this.blockLen = blockLen;\n        this.suffix = suffix;\n        this.outputLen = outputLen;\n        this.enableXOF = enableXOF;\n        this.rounds = rounds;\n        this.pos = 0;\n        this.posOut = 0;\n        this.finished = false;\n        this.destroyed = false;\n        // Can be passed from user as dkLen\n        assert.number(outputLen);\n        // 1600 = 5x5 matrix of 64bit.  1600 bits === 200 bytes\n        if (0 >= this.blockLen || this.blockLen >= 200)\n            throw new Error('Sha3 supports only keccak-f1600 function');\n        this.state = new Uint8Array(200);\n        this.state32 = u32(this.state);\n    }\n    keccak() {\n        keccakP(this.state32, this.rounds);\n        this.posOut = 0;\n        this.pos = 0;\n    }\n    update(data) {\n        assert.exists(this);\n        const { blockLen, state } = this;\n        data = toBytes(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            for (let i = 0; i < take; i++)\n                state[this.pos++] ^= data[pos++];\n            if (this.pos === blockLen)\n                this.keccak();\n        }\n        return this;\n    }\n    finish() {\n        if (this.finished)\n            return;\n        this.finished = true;\n        const { state, suffix, pos, blockLen } = this;\n        // Do the padding\n        state[pos] ^= suffix;\n        if ((suffix & 0x80) !== 0 && pos === blockLen - 1)\n            this.keccak();\n        state[blockLen - 1] ^= 0x80;\n        this.keccak();\n    }\n    writeInto(out) {\n        assert.exists(this, false);\n        assert.bytes(out);\n        this.finish();\n        const bufferOut = this.state;\n        const { blockLen } = this;\n        for (let pos = 0, len = out.length; pos < len;) {\n            if (this.posOut >= blockLen)\n                this.keccak();\n            const take = Math.min(blockLen - this.posOut, len - pos);\n            out.set(bufferOut.subarray(this.posOut, this.posOut + take), pos);\n            this.posOut += take;\n            pos += take;\n        }\n        return out;\n    }\n    xofInto(out) {\n        // Sha3/Keccak usage with XOF is probably mistake, only SHAKE instances can do XOF\n        if (!this.enableXOF)\n            throw new Error('XOF is not possible for this instance');\n        return this.writeInto(out);\n    }\n    xof(bytes) {\n        assert.number(bytes);\n        return this.xofInto(new Uint8Array(bytes));\n    }\n    digestInto(out) {\n        assert.output(out, this);\n        if (this.finished)\n            throw new Error('digest() was already called');\n        this.writeInto(out);\n        this.destroy();\n        return out;\n    }\n    digest() {\n        return this.digestInto(new Uint8Array(this.outputLen));\n    }\n    destroy() {\n        this.destroyed = true;\n        this.state.fill(0);\n    }\n    _cloneInto(to) {\n        const { blockLen, suffix, outputLen, rounds, enableXOF } = this;\n        to || (to = new Keccak(blockLen, suffix, outputLen, enableXOF, rounds));\n        to.state32.set(this.state32);\n        to.pos = this.pos;\n        to.posOut = this.posOut;\n        to.finished = this.finished;\n        to.rounds = rounds;\n        // Suffix can change in cSHAKE\n        to.suffix = suffix;\n        to.outputLen = outputLen;\n        to.enableXOF = enableXOF;\n        to.destroyed = this.destroyed;\n        return to;\n    }\n}\nconst gen = (suffix, blockLen, outputLen) => wrapConstructor(() => new Keccak(blockLen, suffix, outputLen));\nexport const sha3_224 = gen(0x06, 144, 224 / 8);\n/**\n * SHA3-256 hash function\n * @param message - that would be hashed\n */\nexport const sha3_256 = gen(0x06, 136, 256 / 8);\nexport const sha3_384 = gen(0x06, 104, 384 / 8);\nexport const sha3_512 = gen(0x06, 72, 512 / 8);\nexport const keccak_224 = gen(0x01, 144, 224 / 8);\n/**\n * keccak-256 hash function. Different from SHA3-256.\n * @param message - that would be hashed\n */\nexport const keccak_256 = gen(0x01, 136, 256 / 8);\nexport const keccak_384 = gen(0x01, 104, 384 / 8);\nexport const keccak_512 = gen(0x01, 72, 512 / 8);\nconst genShake = (suffix, blockLen, outputLen) => wrapConstructorWithOpts((opts = {}) => new Keccak(blockLen, suffix, opts.dkLen === undefined ? outputLen : opts.dkLen, true));\nexport const shake128 = genShake(0x1f, 168, 128 / 8);\nexport const shake256 = genShake(0x1f, 136, 256 / 8);\n//# sourceMappingURL=sha3.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Short Weierstrass curve. The formula is: y² = x³ + ax + b\nimport * as mod from './modular.js';\nimport * as ut from './utils.js';\nimport { ensureBytes } from './utils.js';\nimport { wNAF, validateBasic } from './curve.js';\nfunction validatePointOpts(curve) {\n    const opts = validateBasic(curve);\n    ut.validateObject(opts, {\n        a: 'field',\n        b: 'field',\n    }, {\n        allowedPrivateKeyLengths: 'array',\n        wrapPrivateKey: 'boolean',\n        isTorsionFree: 'function',\n        clearCofactor: 'function',\n        allowInfinityPoint: 'boolean',\n        fromBytes: 'function',\n        toBytes: 'function',\n    });\n    const { endo, Fp, a } = opts;\n    if (endo) {\n        if (!Fp.eql(a, Fp.ZERO)) {\n            throw new Error('Endomorphism can only be defined for Koblitz curves that have a=0');\n        }\n        if (typeof endo !== 'object' ||\n            typeof endo.beta !== 'bigint' ||\n            typeof endo.splitScalar !== 'function') {\n            throw new Error('Expected endomorphism with beta: bigint and splitScalar: function');\n        }\n    }\n    return Object.freeze({ ...opts });\n}\n// ASN.1 DER encoding utilities\nconst { bytesToNumberBE: b2n, hexToBytes: h2b } = ut;\nexport const DER = {\n    // asn.1 DER encoding utils\n    Err: class DERErr extends Error {\n        constructor(m = '') {\n            super(m);\n        }\n    },\n    _parseInt(data) {\n        const { Err: E } = DER;\n        if (data.length < 2 || data[0] !== 0x02)\n            throw new E('Invalid signature integer tag');\n        const len = data[1];\n        const res = data.subarray(2, len + 2);\n        if (!len || res.length !== len)\n            throw new E('Invalid signature integer: wrong length');\n        // https://crypto.stackexchange.com/a/57734 Leftmost bit of first byte is 'negative' flag,\n        // since we always use positive integers here. It must always be empty:\n        // - add zero byte if exists\n        // - if next byte doesn't have a flag, leading zero is not allowed (minimal encoding)\n        if (res[0] & 0b10000000)\n            throw new E('Invalid signature integer: negative');\n        if (res[0] === 0x00 && !(res[1] & 0b10000000))\n            throw new E('Invalid signature integer: unnecessary leading zero');\n        return { d: b2n(res), l: data.subarray(len + 2) }; // d is data, l is left\n    },\n    toSig(hex) {\n        // parse DER signature\n        const { Err: E } = DER;\n        const data = typeof hex === 'string' ? h2b(hex) : hex;\n        if (!(data instanceof Uint8Array))\n            throw new Error('ui8a expected');\n        let l = data.length;\n        if (l < 2 || data[0] != 0x30)\n            throw new E('Invalid signature tag');\n        if (data[1] !== l - 2)\n            throw new E('Invalid signature: incorrect length');\n        const { d: r, l: sBytes } = DER._parseInt(data.subarray(2));\n        const { d: s, l: rBytesLeft } = DER._parseInt(sBytes);\n        if (rBytesLeft.length)\n            throw new E('Invalid signature: left bytes after parsing');\n        return { r, s };\n    },\n    hexFromSig(sig) {\n        // Add leading zero if first byte has negative bit enabled. More details in '_parseInt'\n        const slice = (s) => (Number.parseInt(s[0], 16) & 0b1000 ? '00' + s : s);\n        const h = (num) => {\n            const hex = num.toString(16);\n            return hex.length & 1 ? `0${hex}` : hex;\n        };\n        const s = slice(h(sig.s));\n        const r = slice(h(sig.r));\n        const shl = s.length / 2;\n        const rhl = r.length / 2;\n        const sl = h(shl);\n        const rl = h(rhl);\n        return `30${h(rhl + shl + 4)}02${rl}${r}02${sl}${s}`;\n    },\n};\n// Be friendly to bad ECMAScript parsers by not using bigint literals\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3), _4n = BigInt(4);\nexport function weierstrassPoints(opts) {\n    const CURVE = validatePointOpts(opts);\n    const { Fp } = CURVE; // All curves has same field / group length as for now, but they can differ\n    const toBytes = CURVE.toBytes ||\n        ((c, point, isCompressed) => {\n            const a = point.toAffine();\n            return ut.concatBytes(Uint8Array.from([0x04]), Fp.toBytes(a.x), Fp.toBytes(a.y));\n        });\n    const fromBytes = CURVE.fromBytes ||\n        ((bytes) => {\n            // const head = bytes[0];\n            const tail = bytes.subarray(1);\n            // if (head !== 0x04) throw new Error('Only non-compressed encoding is supported');\n            const x = Fp.fromBytes(tail.subarray(0, Fp.BYTES));\n            const y = Fp.fromBytes(tail.subarray(Fp.BYTES, 2 * Fp.BYTES));\n            return { x, y };\n        });\n    /**\n     * y² = x³ + ax + b: Short weierstrass curve formula\n     * @returns y²\n     */\n    function weierstrassEquation(x) {\n        const { a, b } = CURVE;\n        const x2 = Fp.sqr(x); // x * x\n        const x3 = Fp.mul(x2, x); // x2 * x\n        return Fp.add(Fp.add(x3, Fp.mul(x, a)), b); // x3 + a * x + b\n    }\n    // Validate whether the passed curve params are valid.\n    // We check if curve equation works for generator point.\n    // `assertValidity()` won't work: `isTorsionFree()` is not available at this point in bls12-381.\n    // ProjectivePoint class has not been initialized yet.\n    if (!Fp.eql(Fp.sqr(CURVE.Gy), weierstrassEquation(CURVE.Gx)))\n        throw new Error('bad generator point: equation left != right');\n    // Valid group elements reside in range 1..n-1\n    function isWithinCurveOrder(num) {\n        return typeof num === 'bigint' && _0n < num && num < CURVE.n;\n    }\n    function assertGE(num) {\n        if (!isWithinCurveOrder(num))\n            throw new Error('Expected valid bigint: 0 < bigint < curve.n');\n    }\n    // Validates if priv key is valid and converts it to bigint.\n    // Supports options allowedPrivateKeyLengths and wrapPrivateKey.\n    function normPrivateKeyToScalar(key) {\n        const { allowedPrivateKeyLengths: lengths, nByteLength, wrapPrivateKey, n } = CURVE;\n        if (lengths && typeof key !== 'bigint') {\n            if (key instanceof Uint8Array)\n                key = ut.bytesToHex(key);\n            // Normalize to hex string, pad. E.g. P521 would norm 130-132 char hex to 132-char bytes\n            if (typeof key !== 'string' || !lengths.includes(key.length))\n                throw new Error('Invalid key');\n            key = key.padStart(nByteLength * 2, '0');\n        }\n        let num;\n        try {\n            num =\n                typeof key === 'bigint'\n                    ? key\n                    : ut.bytesToNumberBE(ensureBytes('private key', key, nByteLength));\n        }\n        catch (error) {\n            throw new Error(`private key must be ${nByteLength} bytes, hex or bigint, not ${typeof key}`);\n        }\n        if (wrapPrivateKey)\n            num = mod.mod(num, n); // disabled by default, enabled for BLS\n        assertGE(num); // num in range [1..N-1]\n        return num;\n    }\n    const pointPrecomputes = new Map();\n    function assertPrjPoint(other) {\n        if (!(other instanceof Point))\n            throw new Error('ProjectivePoint expected');\n    }\n    /**\n     * Projective Point works in 3d / projective (homogeneous) coordinates: (x, y, z) ∋ (x=x/z, y=y/z)\n     * Default Point works in 2d / affine coordinates: (x, y)\n     * We're doing calculations in projective, because its operations don't require costly inversion.\n     */\n    class Point {\n        constructor(px, py, pz) {\n            this.px = px;\n            this.py = py;\n            this.pz = pz;\n            if (px == null || !Fp.isValid(px))\n                throw new Error('x required');\n            if (py == null || !Fp.isValid(py))\n                throw new Error('y required');\n            if (pz == null || !Fp.isValid(pz))\n                throw new Error('z required');\n        }\n        // Does not validate if the point is on-curve.\n        // Use fromHex instead, or call assertValidity() later.\n        static fromAffine(p) {\n            const { x, y } = p || {};\n            if (!p || !Fp.isValid(x) || !Fp.isValid(y))\n                throw new Error('invalid affine point');\n            if (p instanceof Point)\n                throw new Error('projective point not allowed');\n            const is0 = (i) => Fp.eql(i, Fp.ZERO);\n            // fromAffine(x:0, y:0) would produce (x:0, y:0, z:1), but we need (x:0, y:1, z:0)\n            if (is0(x) && is0(y))\n                return Point.ZERO;\n            return new Point(x, y, Fp.ONE);\n        }\n        get x() {\n            return this.toAffine().x;\n        }\n        get y() {\n            return this.toAffine().y;\n        }\n        /**\n         * Takes a bunch of Projective Points but executes only one\n         * inversion on all of them. Inversion is very slow operation,\n         * so this improves performance massively.\n         * Optimization: converts a list of projective points to a list of identical points with Z=1.\n         */\n        static normalizeZ(points) {\n            const toInv = Fp.invertBatch(points.map((p) => p.pz));\n            return points.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n        }\n        /**\n         * Converts hash string or Uint8Array to Point.\n         * @param hex short/long ECDSA hex\n         */\n        static fromHex(hex) {\n            const P = Point.fromAffine(fromBytes(ensureBytes('pointHex', hex)));\n            P.assertValidity();\n            return P;\n        }\n        // Multiplies generator point by privateKey.\n        static fromPrivateKey(privateKey) {\n            return Point.BASE.multiply(normPrivateKeyToScalar(privateKey));\n        }\n        // \"Private method\", don't use it directly\n        _setWindowSize(windowSize) {\n            this._WINDOW_SIZE = windowSize;\n            pointPrecomputes.delete(this);\n        }\n        // A point on curve is valid if it conforms to equation.\n        assertValidity() {\n            // Zero is valid point too!\n            if (this.is0()) {\n                if (CURVE.allowInfinityPoint)\n                    return;\n                throw new Error('bad point: ZERO');\n            }\n            // Some 3rd-party test vectors require different wording between here & `fromCompressedHex`\n            const { x, y } = this.toAffine();\n            // Check if x, y are valid field elements\n            if (!Fp.isValid(x) || !Fp.isValid(y))\n                throw new Error('bad point: x or y not FE');\n            const left = Fp.sqr(y); // y²\n            const right = weierstrassEquation(x); // x³ + ax + b\n            if (!Fp.eql(left, right))\n                throw new Error('bad point: equation left != right');\n            if (!this.isTorsionFree())\n                throw new Error('bad point: not in prime-order subgroup');\n        }\n        hasEvenY() {\n            const { y } = this.toAffine();\n            if (Fp.isOdd)\n                return !Fp.isOdd(y);\n            throw new Error(\"Field doesn't support isOdd\");\n        }\n        /**\n         * Compare one point to another.\n         */\n        equals(other) {\n            assertPrjPoint(other);\n            const { px: X1, py: Y1, pz: Z1 } = this;\n            const { px: X2, py: Y2, pz: Z2 } = other;\n            const U1 = Fp.eql(Fp.mul(X1, Z2), Fp.mul(X2, Z1));\n            const U2 = Fp.eql(Fp.mul(Y1, Z2), Fp.mul(Y2, Z1));\n            return U1 && U2;\n        }\n        /**\n         * Flips point to one corresponding to (x, -y) in Affine coordinates.\n         */\n        negate() {\n            return new Point(this.px, Fp.neg(this.py), this.pz);\n        }\n        // Renes-Costello-Batina exception-free doubling formula.\n        // There is 30% faster Jacobian formula, but it is not complete.\n        // https://eprint.iacr.org/2015/1060, algorithm 3\n        // Cost: 8M + 3S + 3*a + 2*b3 + 15add.\n        double() {\n            const { a, b } = CURVE;\n            const b3 = Fp.mul(b, _3n);\n            const { px: X1, py: Y1, pz: Z1 } = this;\n            let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n            let t0 = Fp.mul(X1, X1); // step 1\n            let t1 = Fp.mul(Y1, Y1);\n            let t2 = Fp.mul(Z1, Z1);\n            let t3 = Fp.mul(X1, Y1);\n            t3 = Fp.add(t3, t3); // step 5\n            Z3 = Fp.mul(X1, Z1);\n            Z3 = Fp.add(Z3, Z3);\n            X3 = Fp.mul(a, Z3);\n            Y3 = Fp.mul(b3, t2);\n            Y3 = Fp.add(X3, Y3); // step 10\n            X3 = Fp.sub(t1, Y3);\n            Y3 = Fp.add(t1, Y3);\n            Y3 = Fp.mul(X3, Y3);\n            X3 = Fp.mul(t3, X3);\n            Z3 = Fp.mul(b3, Z3); // step 15\n            t2 = Fp.mul(a, t2);\n            t3 = Fp.sub(t0, t2);\n            t3 = Fp.mul(a, t3);\n            t3 = Fp.add(t3, Z3);\n            Z3 = Fp.add(t0, t0); // step 20\n            t0 = Fp.add(Z3, t0);\n            t0 = Fp.add(t0, t2);\n            t0 = Fp.mul(t0, t3);\n            Y3 = Fp.add(Y3, t0);\n            t2 = Fp.mul(Y1, Z1); // step 25\n            t2 = Fp.add(t2, t2);\n            t0 = Fp.mul(t2, t3);\n            X3 = Fp.sub(X3, t0);\n            Z3 = Fp.mul(t2, t1);\n            Z3 = Fp.add(Z3, Z3); // step 30\n            Z3 = Fp.add(Z3, Z3);\n            return new Point(X3, Y3, Z3);\n        }\n        // Renes-Costello-Batina exception-free addition formula.\n        // There is 30% faster Jacobian formula, but it is not complete.\n        // https://eprint.iacr.org/2015/1060, algorithm 1\n        // Cost: 12M + 0S + 3*a + 3*b3 + 23add.\n        add(other) {\n            assertPrjPoint(other);\n            const { px: X1, py: Y1, pz: Z1 } = this;\n            const { px: X2, py: Y2, pz: Z2 } = other;\n            let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n            const a = CURVE.a;\n            const b3 = Fp.mul(CURVE.b, _3n);\n            let t0 = Fp.mul(X1, X2); // step 1\n            let t1 = Fp.mul(Y1, Y2);\n            let t2 = Fp.mul(Z1, Z2);\n            let t3 = Fp.add(X1, Y1);\n            let t4 = Fp.add(X2, Y2); // step 5\n            t3 = Fp.mul(t3, t4);\n            t4 = Fp.add(t0, t1);\n            t3 = Fp.sub(t3, t4);\n            t4 = Fp.add(X1, Z1);\n            let t5 = Fp.add(X2, Z2); // step 10\n            t4 = Fp.mul(t4, t5);\n            t5 = Fp.add(t0, t2);\n            t4 = Fp.sub(t4, t5);\n            t5 = Fp.add(Y1, Z1);\n            X3 = Fp.add(Y2, Z2); // step 15\n            t5 = Fp.mul(t5, X3);\n            X3 = Fp.add(t1, t2);\n            t5 = Fp.sub(t5, X3);\n            Z3 = Fp.mul(a, t4);\n            X3 = Fp.mul(b3, t2); // step 20\n            Z3 = Fp.add(X3, Z3);\n            X3 = Fp.sub(t1, Z3);\n            Z3 = Fp.add(t1, Z3);\n            Y3 = Fp.mul(X3, Z3);\n            t1 = Fp.add(t0, t0); // step 25\n            t1 = Fp.add(t1, t0);\n            t2 = Fp.mul(a, t2);\n            t4 = Fp.mul(b3, t4);\n            t1 = Fp.add(t1, t2);\n            t2 = Fp.sub(t0, t2); // step 30\n            t2 = Fp.mul(a, t2);\n            t4 = Fp.add(t4, t2);\n            t0 = Fp.mul(t1, t4);\n            Y3 = Fp.add(Y3, t0);\n            t0 = Fp.mul(t5, t4); // step 35\n            X3 = Fp.mul(t3, X3);\n            X3 = Fp.sub(X3, t0);\n            t0 = Fp.mul(t3, t1);\n            Z3 = Fp.mul(t5, Z3);\n            Z3 = Fp.add(Z3, t0); // step 40\n            return new Point(X3, Y3, Z3);\n        }\n        subtract(other) {\n            return this.add(other.negate());\n        }\n        is0() {\n            return this.equals(Point.ZERO);\n        }\n        wNAF(n) {\n            return wnaf.wNAFCached(this, pointPrecomputes, n, (comp) => {\n                const toInv = Fp.invertBatch(comp.map((p) => p.pz));\n                return comp.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n            });\n        }\n        /**\n         * Non-constant-time multiplication. Uses double-and-add algorithm.\n         * It's faster, but should only be used when you don't care about\n         * an exposed private key e.g. sig verification, which works over *public* keys.\n         */\n        multiplyUnsafe(n) {\n            const I = Point.ZERO;\n            if (n === _0n)\n                return I;\n            assertGE(n); // Will throw on 0\n            if (n === _1n)\n                return this;\n            const { endo } = CURVE;\n            if (!endo)\n                return wnaf.unsafeLadder(this, n);\n            // Apply endomorphism\n            let { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n            let k1p = I;\n            let k2p = I;\n            let d = this;\n            while (k1 > _0n || k2 > _0n) {\n                if (k1 & _1n)\n                    k1p = k1p.add(d);\n                if (k2 & _1n)\n                    k2p = k2p.add(d);\n                d = d.double();\n                k1 >>= _1n;\n                k2 >>= _1n;\n            }\n            if (k1neg)\n                k1p = k1p.negate();\n            if (k2neg)\n                k2p = k2p.negate();\n            k2p = new Point(Fp.mul(k2p.px, endo.beta), k2p.py, k2p.pz);\n            return k1p.add(k2p);\n        }\n        /**\n         * Constant time multiplication.\n         * Uses wNAF method. Windowed method may be 10% faster,\n         * but takes 2x longer to generate and consumes 2x memory.\n         * Uses precomputes when available.\n         * Uses endomorphism for Koblitz curves.\n         * @param scalar by which the point would be multiplied\n         * @returns New point\n         */\n        multiply(scalar) {\n            assertGE(scalar);\n            let n = scalar;\n            let point, fake; // Fake point is used to const-time mult\n            const { endo } = CURVE;\n            if (endo) {\n                const { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n                let { p: k1p, f: f1p } = this.wNAF(k1);\n                let { p: k2p, f: f2p } = this.wNAF(k2);\n                k1p = wnaf.constTimeNegate(k1neg, k1p);\n                k2p = wnaf.constTimeNegate(k2neg, k2p);\n                k2p = new Point(Fp.mul(k2p.px, endo.beta), k2p.py, k2p.pz);\n                point = k1p.add(k2p);\n                fake = f1p.add(f2p);\n            }\n            else {\n                const { p, f } = this.wNAF(n);\n                point = p;\n                fake = f;\n            }\n            // Normalize `z` for both points, but return only real one\n            return Point.normalizeZ([point, fake])[0];\n        }\n        /**\n         * Efficiently calculate `aP + bQ`. Unsafe, can expose private key, if used incorrectly.\n         * Not using Strauss-Shamir trick: precomputation tables are faster.\n         * The trick could be useful if both P and Q are not G (not in our case).\n         * @returns non-zero affine point\n         */\n        multiplyAndAddUnsafe(Q, a, b) {\n            const G = Point.BASE; // No Strauss-Shamir trick: we have 10% faster G precomputes\n            const mul = (P, a // Select faster multiply() method\n            ) => (a === _0n || a === _1n || !P.equals(G) ? P.multiplyUnsafe(a) : P.multiply(a));\n            const sum = mul(this, a).add(mul(Q, b));\n            return sum.is0() ? undefined : sum;\n        }\n        // Converts Projective point to affine (x, y) coordinates.\n        // Can accept precomputed Z^-1 - for example, from invertBatch.\n        // (x, y, z) ∋ (x=x/z, y=y/z)\n        toAffine(iz) {\n            const { px: x, py: y, pz: z } = this;\n            const is0 = this.is0();\n            // If invZ was 0, we return zero point. However we still want to execute\n            // all operations, so we replace invZ with a random number, 1.\n            if (iz == null)\n                iz = is0 ? Fp.ONE : Fp.inv(z);\n            const ax = Fp.mul(x, iz);\n            const ay = Fp.mul(y, iz);\n            const zz = Fp.mul(z, iz);\n            if (is0)\n                return { x: Fp.ZERO, y: Fp.ZERO };\n            if (!Fp.eql(zz, Fp.ONE))\n                throw new Error('invZ was invalid');\n            return { x: ax, y: ay };\n        }\n        isTorsionFree() {\n            const { h: cofactor, isTorsionFree } = CURVE;\n            if (cofactor === _1n)\n                return true; // No subgroups, always torsion-free\n            if (isTorsionFree)\n                return isTorsionFree(Point, this);\n            throw new Error('isTorsionFree() has not been declared for the elliptic curve');\n        }\n        clearCofactor() {\n            const { h: cofactor, clearCofactor } = CURVE;\n            if (cofactor === _1n)\n                return this; // Fast-path\n            if (clearCofactor)\n                return clearCofactor(Point, this);\n            return this.multiplyUnsafe(CURVE.h);\n        }\n        toRawBytes(isCompressed = true) {\n            this.assertValidity();\n            return toBytes(Point, this, isCompressed);\n        }\n        toHex(isCompressed = true) {\n            return ut.bytesToHex(this.toRawBytes(isCompressed));\n        }\n    }\n    Point.BASE = new Point(CURVE.Gx, CURVE.Gy, Fp.ONE);\n    Point.ZERO = new Point(Fp.ZERO, Fp.ONE, Fp.ZERO);\n    const _bits = CURVE.nBitLength;\n    const wnaf = wNAF(Point, CURVE.endo ? Math.ceil(_bits / 2) : _bits);\n    // Validate if generator point is on curve\n    return {\n        CURVE,\n        ProjectivePoint: Point,\n        normPrivateKeyToScalar,\n        weierstrassEquation,\n        isWithinCurveOrder,\n    };\n}\nfunction validateOpts(curve) {\n    const opts = validateBasic(curve);\n    ut.validateObject(opts, {\n        hash: 'hash',\n        hmac: 'function',\n        randomBytes: 'function',\n    }, {\n        bits2int: 'function',\n        bits2int_modN: 'function',\n        lowS: 'boolean',\n    });\n    return Object.freeze({ lowS: true, ...opts });\n}\nexport function weierstrass(curveDef) {\n    const CURVE = validateOpts(curveDef);\n    const { Fp, n: CURVE_ORDER } = CURVE;\n    const compressedLen = Fp.BYTES + 1; // e.g. 33 for 32\n    const uncompressedLen = 2 * Fp.BYTES + 1; // e.g. 65 for 32\n    function isValidFieldElement(num) {\n        return _0n < num && num < Fp.ORDER; // 0 is banned since it's not invertible FE\n    }\n    function modN(a) {\n        return mod.mod(a, CURVE_ORDER);\n    }\n    function invN(a) {\n        return mod.invert(a, CURVE_ORDER);\n    }\n    const { ProjectivePoint: Point, normPrivateKeyToScalar, weierstrassEquation, isWithinCurveOrder, } = weierstrassPoints({\n        ...CURVE,\n        toBytes(c, point, isCompressed) {\n            const a = point.toAffine();\n            const x = Fp.toBytes(a.x);\n            const cat = ut.concatBytes;\n            if (isCompressed) {\n                return cat(Uint8Array.from([point.hasEvenY() ? 0x02 : 0x03]), x);\n            }\n            else {\n                return cat(Uint8Array.from([0x04]), x, Fp.toBytes(a.y));\n            }\n        },\n        fromBytes(bytes) {\n            const len = bytes.length;\n            const head = bytes[0];\n            const tail = bytes.subarray(1);\n            // this.assertValidity() is done inside of fromHex\n            if (len === compressedLen && (head === 0x02 || head === 0x03)) {\n                const x = ut.bytesToNumberBE(tail);\n                if (!isValidFieldElement(x))\n                    throw new Error('Point is not on curve');\n                const y2 = weierstrassEquation(x); // y² = x³ + ax + b\n                let y = Fp.sqrt(y2); // y = y² ^ (p+1)/4\n                const isYOdd = (y & _1n) === _1n;\n                // ECDSA\n                const isHeadOdd = (head & 1) === 1;\n                if (isHeadOdd !== isYOdd)\n                    y = Fp.neg(y);\n                return { x, y };\n            }\n            else if (len === uncompressedLen && head === 0x04) {\n                const x = Fp.fromBytes(tail.subarray(0, Fp.BYTES));\n                const y = Fp.fromBytes(tail.subarray(Fp.BYTES, 2 * Fp.BYTES));\n                return { x, y };\n            }\n            else {\n                throw new Error(`Point of length ${len} was invalid. Expected ${compressedLen} compressed bytes or ${uncompressedLen} uncompressed bytes`);\n            }\n        },\n    });\n    const numToNByteStr = (num) => ut.bytesToHex(ut.numberToBytesBE(num, CURVE.nByteLength));\n    function isBiggerThanHalfOrder(number) {\n        const HALF = CURVE_ORDER >> _1n;\n        return number > HALF;\n    }\n    function normalizeS(s) {\n        return isBiggerThanHalfOrder(s) ? modN(-s) : s;\n    }\n    // slice bytes num\n    const slcNum = (b, from, to) => ut.bytesToNumberBE(b.slice(from, to));\n    /**\n     * ECDSA signature with its (r, s) properties. Supports DER & compact representations.\n     */\n    class Signature {\n        constructor(r, s, recovery) {\n            this.r = r;\n            this.s = s;\n            this.recovery = recovery;\n            this.assertValidity();\n        }\n        // pair (bytes of r, bytes of s)\n        static fromCompact(hex) {\n            const l = CURVE.nByteLength;\n            hex = ensureBytes('compactSignature', hex, l * 2);\n            return new Signature(slcNum(hex, 0, l), slcNum(hex, l, 2 * l));\n        }\n        // DER encoded ECDSA signature\n        // https://bitcoin.stackexchange.com/questions/57644/what-are-the-parts-of-a-bitcoin-transaction-input-script\n        static fromDER(hex) {\n            const { r, s } = DER.toSig(ensureBytes('DER', hex));\n            return new Signature(r, s);\n        }\n        assertValidity() {\n            // can use assertGE here\n            if (!isWithinCurveOrder(this.r))\n                throw new Error('r must be 0 < r < CURVE.n');\n            if (!isWithinCurveOrder(this.s))\n                throw new Error('s must be 0 < s < CURVE.n');\n        }\n        addRecoveryBit(recovery) {\n            return new Signature(this.r, this.s, recovery);\n        }\n        recoverPublicKey(msgHash) {\n            const { r, s, recovery: rec } = this;\n            const h = bits2int_modN(ensureBytes('msgHash', msgHash)); // Truncate hash\n            if (rec == null || ![0, 1, 2, 3].includes(rec))\n                throw new Error('recovery id invalid');\n            const radj = rec === 2 || rec === 3 ? r + CURVE.n : r;\n            if (radj >= Fp.ORDER)\n                throw new Error('recovery id 2 or 3 invalid');\n            const prefix = (rec & 1) === 0 ? '02' : '03';\n            const R = Point.fromHex(prefix + numToNByteStr(radj));\n            const ir = invN(radj); // r^-1\n            const u1 = modN(-h * ir); // -hr^-1\n            const u2 = modN(s * ir); // sr^-1\n            const Q = Point.BASE.multiplyAndAddUnsafe(R, u1, u2); // (sr^-1)R-(hr^-1)G = -(hr^-1)G + (sr^-1)\n            if (!Q)\n                throw new Error('point at infinify'); // unsafe is fine: no priv data leaked\n            Q.assertValidity();\n            return Q;\n        }\n        // Signatures should be low-s, to prevent malleability.\n        hasHighS() {\n            return isBiggerThanHalfOrder(this.s);\n        }\n        normalizeS() {\n            return this.hasHighS() ? new Signature(this.r, modN(-this.s), this.recovery) : this;\n        }\n        // DER-encoded\n        toDERRawBytes() {\n            return ut.hexToBytes(this.toDERHex());\n        }\n        toDERHex() {\n            return DER.hexFromSig({ r: this.r, s: this.s });\n        }\n        // padded bytes of r, then padded bytes of s\n        toCompactRawBytes() {\n            return ut.hexToBytes(this.toCompactHex());\n        }\n        toCompactHex() {\n            return numToNByteStr(this.r) + numToNByteStr(this.s);\n        }\n    }\n    const utils = {\n        isValidPrivateKey(privateKey) {\n            try {\n                normPrivateKeyToScalar(privateKey);\n                return true;\n            }\n            catch (error) {\n                return false;\n            }\n        },\n        normPrivateKeyToScalar: normPrivateKeyToScalar,\n        /**\n         * Produces cryptographically secure private key from random of size (nBitLength+64)\n         * as per FIPS 186 B.4.1 with modulo bias being neglible.\n         */\n        randomPrivateKey: () => {\n            const rand = CURVE.randomBytes(Fp.BYTES + 8);\n            const num = mod.hashToPrivateScalar(rand, CURVE_ORDER);\n            return ut.numberToBytesBE(num, CURVE.nByteLength);\n        },\n        /**\n         * Creates precompute table for an arbitrary EC point. Makes point \"cached\".\n         * Allows to massively speed-up `point.multiply(scalar)`.\n         * @returns cached point\n         * @example\n         * const fast = utils.precompute(8, ProjectivePoint.fromHex(someonesPubKey));\n         * fast.multiply(privKey); // much faster ECDH now\n         */\n        precompute(windowSize = 8, point = Point.BASE) {\n            point._setWindowSize(windowSize);\n            point.multiply(BigInt(3)); // 3 is arbitrary, just need any number here\n            return point;\n        },\n    };\n    /**\n     * Computes public key for a private key. Checks for validity of the private key.\n     * @param privateKey private key\n     * @param isCompressed whether to return compact (default), or full key\n     * @returns Public key, full when isCompressed=false; short when isCompressed=true\n     */\n    function getPublicKey(privateKey, isCompressed = true) {\n        return Point.fromPrivateKey(privateKey).toRawBytes(isCompressed);\n    }\n    /**\n     * Quick and dirty check for item being public key. Does not validate hex, or being on-curve.\n     */\n    function isProbPub(item) {\n        const arr = item instanceof Uint8Array;\n        const str = typeof item === 'string';\n        const len = (arr || str) && item.length;\n        if (arr)\n            return len === compressedLen || len === uncompressedLen;\n        if (str)\n            return len === 2 * compressedLen || len === 2 * uncompressedLen;\n        if (item instanceof Point)\n            return true;\n        return false;\n    }\n    /**\n     * ECDH (Elliptic Curve Diffie Hellman).\n     * Computes shared public key from private key and public key.\n     * Checks: 1) private key validity 2) shared key is on-curve.\n     * Does NOT hash the result.\n     * @param privateA private key\n     * @param publicB different public key\n     * @param isCompressed whether to return compact (default), or full key\n     * @returns shared public key\n     */\n    function getSharedSecret(privateA, publicB, isCompressed = true) {\n        if (isProbPub(privateA))\n            throw new Error('first arg must be private key');\n        if (!isProbPub(publicB))\n            throw new Error('second arg must be public key');\n        const b = Point.fromHex(publicB); // check for being on-curve\n        return b.multiply(normPrivateKeyToScalar(privateA)).toRawBytes(isCompressed);\n    }\n    // RFC6979: ensure ECDSA msg is X bytes and < N. RFC suggests optional truncating via bits2octets.\n    // FIPS 186-4 4.6 suggests the leftmost min(nBitLen, outLen) bits, which matches bits2int.\n    // bits2int can produce res>N, we can do mod(res, N) since the bitLen is the same.\n    // int2octets can't be used; pads small msgs with 0: unacceptatble for trunc as per RFC vectors\n    const bits2int = CURVE.bits2int ||\n        function (bytes) {\n            // For curves with nBitLength % 8 !== 0: bits2octets(bits2octets(m)) !== bits2octets(m)\n            // for some cases, since bytes.length * 8 is not actual bitLength.\n            const num = ut.bytesToNumberBE(bytes); // check for == u8 done here\n            const delta = bytes.length * 8 - CURVE.nBitLength; // truncate to nBitLength leftmost bits\n            return delta > 0 ? num >> BigInt(delta) : num;\n        };\n    const bits2int_modN = CURVE.bits2int_modN ||\n        function (bytes) {\n            return modN(bits2int(bytes)); // can't use bytesToNumberBE here\n        };\n    // NOTE: pads output with zero as per spec\n    const ORDER_MASK = ut.bitMask(CURVE.nBitLength);\n    /**\n     * Converts to bytes. Checks if num in `[0..ORDER_MASK-1]` e.g.: `[0..2^256-1]`.\n     */\n    function int2octets(num) {\n        if (typeof num !== 'bigint')\n            throw new Error('bigint expected');\n        if (!(_0n <= num && num < ORDER_MASK))\n            throw new Error(`bigint expected < 2^${CURVE.nBitLength}`);\n        // works with order, can have different size than numToField!\n        return ut.numberToBytesBE(num, CURVE.nByteLength);\n    }\n    // Steps A, D of RFC6979 3.2\n    // Creates RFC6979 seed; converts msg/privKey to numbers.\n    // Used only in sign, not in verify.\n    // NOTE: we cannot assume here that msgHash has same amount of bytes as curve order, this will be wrong at least for P521.\n    // Also it can be bigger for P224 + SHA256\n    function prepSig(msgHash, privateKey, opts = defaultSigOpts) {\n        if (['recovered', 'canonical'].some((k) => k in opts))\n            throw new Error('sign() legacy options not supported');\n        const { hash, randomBytes } = CURVE;\n        let { lowS, prehash, extraEntropy: ent } = opts; // generates low-s sigs by default\n        if (lowS == null)\n            lowS = true; // RFC6979 3.2: we skip step A, because we already provide hash\n        msgHash = ensureBytes('msgHash', msgHash);\n        if (prehash)\n            msgHash = ensureBytes('prehashed msgHash', hash(msgHash));\n        // We can't later call bits2octets, since nested bits2int is broken for curves\n        // with nBitLength % 8 !== 0. Because of that, we unwrap it here as int2octets call.\n        // const bits2octets = (bits) => int2octets(bits2int_modN(bits))\n        const h1int = bits2int_modN(msgHash);\n        const d = normPrivateKeyToScalar(privateKey); // validate private key, convert to bigint\n        const seedArgs = [int2octets(d), int2octets(h1int)];\n        // extraEntropy. RFC6979 3.6: additional k' (optional).\n        if (ent != null) {\n            // K = HMAC_K(V || 0x00 || int2octets(x) || bits2octets(h1) || k')\n            const e = ent === true ? randomBytes(Fp.BYTES) : ent; // generate random bytes OR pass as-is\n            seedArgs.push(ensureBytes('extraEntropy', e, Fp.BYTES)); // check for being of size BYTES\n        }\n        const seed = ut.concatBytes(...seedArgs); // Step D of RFC6979 3.2\n        const m = h1int; // NOTE: no need to call bits2int second time here, it is inside truncateHash!\n        // Converts signature params into point w r/s, checks result for validity.\n        function k2sig(kBytes) {\n            // RFC 6979 Section 3.2, step 3: k = bits2int(T)\n            const k = bits2int(kBytes); // Cannot use fields methods, since it is group element\n            if (!isWithinCurveOrder(k))\n                return; // Important: all mod() calls here must be done over N\n            const ik = invN(k); // k^-1 mod n\n            const q = Point.BASE.multiply(k).toAffine(); // q = Gk\n            const r = modN(q.x); // r = q.x mod n\n            if (r === _0n)\n                return;\n            // Can use scalar blinding b^-1(bm + bdr) where b ∈ [1,q−1] according to\n            // https://tches.iacr.org/index.php/TCHES/article/view/7337/6509. We've decided against it:\n            // a) dependency on CSPRNG b) 15% slowdown c) doesn't really help since bigints are not CT\n            const s = modN(ik * modN(m + r * d)); // Not using blinding here\n            if (s === _0n)\n                return;\n            let recovery = (q.x === r ? 0 : 2) | Number(q.y & _1n); // recovery bit (2 or 3, when q.x > n)\n            let normS = s;\n            if (lowS && isBiggerThanHalfOrder(s)) {\n                normS = normalizeS(s); // if lowS was passed, ensure s is always\n                recovery ^= 1; // // in the bottom half of N\n            }\n            return new Signature(r, normS, recovery); // use normS, not s\n        }\n        return { seed, k2sig };\n    }\n    const defaultSigOpts = { lowS: CURVE.lowS, prehash: false };\n    const defaultVerOpts = { lowS: CURVE.lowS, prehash: false };\n    /**\n     * Signs message hash (not message: you need to hash it by yourself).\n     * ```\n     * sign(m, d, k) where\n     *   (x, y) = G × k\n     *   r = x mod n\n     *   s = (m + dr)/k mod n\n     * ```\n     * @param opts `lowS, extraEntropy, prehash`\n     */\n    function sign(msgHash, privKey, opts = defaultSigOpts) {\n        const { seed, k2sig } = prepSig(msgHash, privKey, opts); // Steps A, D of RFC6979 3.2.\n        const drbg = ut.createHmacDrbg(CURVE.hash.outputLen, CURVE.nByteLength, CURVE.hmac);\n        return drbg(seed, k2sig); // Steps B, C, D, E, F, G\n    }\n    // Enable precomputes. Slows down first publicKey computation by 20ms.\n    Point.BASE._setWindowSize(8);\n    // utils.precompute(8, ProjectivePoint.BASE)\n    /**\n     * Verifies a signature against message hash and public key.\n     * Rejects lowS signatures by default: to override,\n     * specify option `{lowS: false}`. Implements section 4.1.4 from https://www.secg.org/sec1-v2.pdf:\n     *\n     * ```\n     * verify(r, s, h, P) where\n     *   U1 = hs^-1 mod n\n     *   U2 = rs^-1 mod n\n     *   R = U1⋅G - U2⋅P\n     *   mod(R.x, n) == r\n     * ```\n     */\n    function verify(signature, msgHash, publicKey, opts = defaultVerOpts) {\n        const sg = signature;\n        msgHash = ensureBytes('msgHash', msgHash);\n        publicKey = ensureBytes('publicKey', publicKey);\n        if ('strict' in opts)\n            throw new Error('options.strict was renamed to lowS');\n        const { lowS, prehash } = opts;\n        let _sig = undefined;\n        let P;\n        try {\n            if (typeof sg === 'string' || sg instanceof Uint8Array) {\n                // Signature can be represented in 2 ways: compact (2*nByteLength) & DER (variable-length).\n                // Since DER can also be 2*nByteLength bytes, we check for it first.\n                try {\n                    _sig = Signature.fromDER(sg);\n                }\n                catch (derError) {\n                    if (!(derError instanceof DER.Err))\n                        throw derError;\n                    _sig = Signature.fromCompact(sg);\n                }\n            }\n            else if (typeof sg === 'object' && typeof sg.r === 'bigint' && typeof sg.s === 'bigint') {\n                const { r, s } = sg;\n                _sig = new Signature(r, s);\n            }\n            else {\n                throw new Error('PARSE');\n            }\n            P = Point.fromHex(publicKey);\n        }\n        catch (error) {\n            if (error.message === 'PARSE')\n                throw new Error(`signature must be Signature instance, Uint8Array or hex string`);\n            return false;\n        }\n        if (lowS && _sig.hasHighS())\n            return false;\n        if (prehash)\n            msgHash = CURVE.hash(msgHash);\n        const { r, s } = _sig;\n        const h = bits2int_modN(msgHash); // Cannot use fields methods, since it is group element\n        const is = invN(s); // s^-1\n        const u1 = modN(h * is); // u1 = hs^-1 mod n\n        const u2 = modN(r * is); // u2 = rs^-1 mod n\n        const R = Point.BASE.multiplyAndAddUnsafe(P, u1, u2)?.toAffine(); // R = u1⋅G + u2⋅P\n        if (!R)\n            return false;\n        const v = modN(R.x);\n        return v === r;\n    }\n    return {\n        CURVE,\n        getPublicKey,\n        getSharedSecret,\n        sign,\n        verify,\n        ProjectivePoint: Point,\n        Signature,\n        utils,\n    };\n}\n// Implementation of the Shallue and van de Woestijne method for any Weierstrass curve\n// TODO: check if there is a way to merge this with uvRatio in Edwards && move to modular?\n// b = True and y = sqrt(u / v) if (u / v) is square in F, and\n// b = False and y = sqrt(Z * (u / v)) otherwise.\nexport function SWUFpSqrtRatio(Fp, Z) {\n    // Generic implementation\n    const q = Fp.ORDER;\n    let l = _0n;\n    for (let o = q - _1n; o % _2n === _0n; o /= _2n)\n        l += _1n;\n    const c1 = l; // 1. c1, the largest integer such that 2^c1 divides q - 1.\n    const c2 = (q - _1n) / _2n ** c1; // 2. c2 = (q - 1) / (2^c1)        # Integer arithmetic\n    const c3 = (c2 - _1n) / _2n; // 3. c3 = (c2 - 1) / 2            # Integer arithmetic\n    const c4 = _2n ** c1 - _1n; // 4. c4 = 2^c1 - 1                # Integer arithmetic\n    const c5 = _2n ** (c1 - _1n); // 5. c5 = 2^(c1 - 1)              # Integer arithmetic\n    const c6 = Fp.pow(Z, c2); // 6. c6 = Z^c2\n    const c7 = Fp.pow(Z, (c2 + _1n) / _2n); // 7. c7 = Z^((c2 + 1) / 2)\n    let sqrtRatio = (u, v) => {\n        let tv1 = c6; // 1. tv1 = c6\n        let tv2 = Fp.pow(v, c4); // 2. tv2 = v^c4\n        let tv3 = Fp.sqr(tv2); // 3. tv3 = tv2^2\n        tv3 = Fp.mul(tv3, v); // 4. tv3 = tv3 * v\n        let tv5 = Fp.mul(u, tv3); // 5. tv5 = u * tv3\n        tv5 = Fp.pow(tv5, c3); // 6. tv5 = tv5^c3\n        tv5 = Fp.mul(tv5, tv2); // 7. tv5 = tv5 * tv2\n        tv2 = Fp.mul(tv5, v); // 8. tv2 = tv5 * v\n        tv3 = Fp.mul(tv5, u); // 9. tv3 = tv5 * u\n        let tv4 = Fp.mul(tv3, tv2); // 10. tv4 = tv3 * tv2\n        tv5 = Fp.pow(tv4, c5); // 11. tv5 = tv4^c5\n        let isQR = Fp.eql(tv5, Fp.ONE); // 12. isQR = tv5 == 1\n        tv2 = Fp.mul(tv3, c7); // 13. tv2 = tv3 * c7\n        tv5 = Fp.mul(tv4, tv1); // 14. tv5 = tv4 * tv1\n        tv3 = Fp.cmov(tv2, tv3, isQR); // 15. tv3 = CMOV(tv2, tv3, isQR)\n        tv4 = Fp.cmov(tv5, tv4, isQR); // 16. tv4 = CMOV(tv5, tv4, isQR)\n        // 17. for i in (c1, c1 - 1, ..., 2):\n        for (let i = c1; i > _1n; i--) {\n            let tv5 = _2n ** (i - _2n); // 18.    tv5 = i - 2;    19.    tv5 = 2^tv5\n            let tvv5 = Fp.pow(tv4, tv5); // 20.    tv5 = tv4^tv5\n            const e1 = Fp.eql(tvv5, Fp.ONE); // 21.    e1 = tv5 == 1\n            tv2 = Fp.mul(tv3, tv1); // 22.    tv2 = tv3 * tv1\n            tv1 = Fp.mul(tv1, tv1); // 23.    tv1 = tv1 * tv1\n            tvv5 = Fp.mul(tv4, tv1); // 24.    tv5 = tv4 * tv1\n            tv3 = Fp.cmov(tv2, tv3, e1); // 25.    tv3 = CMOV(tv2, tv3, e1)\n            tv4 = Fp.cmov(tvv5, tv4, e1); // 26.    tv4 = CMOV(tv5, tv4, e1)\n        }\n        return { isValid: isQR, value: tv3 };\n    };\n    if (Fp.ORDER % _4n === _3n) {\n        // sqrt_ratio_3mod4(u, v)\n        const c1 = (Fp.ORDER - _3n) / _4n; // 1. c1 = (q - 3) / 4     # Integer arithmetic\n        const c2 = Fp.sqrt(Fp.neg(Z)); // 2. c2 = sqrt(-Z)\n        sqrtRatio = (u, v) => {\n            let tv1 = Fp.sqr(v); // 1. tv1 = v^2\n            const tv2 = Fp.mul(u, v); // 2. tv2 = u * v\n            tv1 = Fp.mul(tv1, tv2); // 3. tv1 = tv1 * tv2\n            let y1 = Fp.pow(tv1, c1); // 4. y1 = tv1^c1\n            y1 = Fp.mul(y1, tv2); // 5. y1 = y1 * tv2\n            const y2 = Fp.mul(y1, c2); // 6. y2 = y1 * c2\n            const tv3 = Fp.mul(Fp.sqr(y1), v); // 7. tv3 = y1^2; 8. tv3 = tv3 * v\n            const isQR = Fp.eql(tv3, u); // 9. isQR = tv3 == u\n            let y = Fp.cmov(y2, y1, isQR); // 10. y = CMOV(y2, y1, isQR)\n            return { isValid: isQR, value: y }; // 11. return (isQR, y) isQR ? y : y*c2\n        };\n    }\n    // No curves uses that\n    // if (Fp.ORDER % _8n === _5n) // sqrt_ratio_5mod8\n    return sqrtRatio;\n}\n// From draft-irtf-cfrg-hash-to-curve-16\nexport function mapToCurveSimpleSWU(Fp, opts) {\n    mod.validateField(Fp);\n    if (!Fp.isValid(opts.A) || !Fp.isValid(opts.B) || !Fp.isValid(opts.Z))\n        throw new Error('mapToCurveSimpleSWU: invalid opts');\n    const sqrtRatio = SWUFpSqrtRatio(Fp, opts.Z);\n    if (!Fp.isOdd)\n        throw new Error('Fp.isOdd is not implemented!');\n    // Input: u, an element of F.\n    // Output: (x, y), a point on E.\n    return (u) => {\n        // prettier-ignore\n        let tv1, tv2, tv3, tv4, tv5, tv6, x, y;\n        tv1 = Fp.sqr(u); // 1.  tv1 = u^2\n        tv1 = Fp.mul(tv1, opts.Z); // 2.  tv1 = Z * tv1\n        tv2 = Fp.sqr(tv1); // 3.  tv2 = tv1^2\n        tv2 = Fp.add(tv2, tv1); // 4.  tv2 = tv2 + tv1\n        tv3 = Fp.add(tv2, Fp.ONE); // 5.  tv3 = tv2 + 1\n        tv3 = Fp.mul(tv3, opts.B); // 6.  tv3 = B * tv3\n        tv4 = Fp.cmov(opts.Z, Fp.neg(tv2), !Fp.eql(tv2, Fp.ZERO)); // 7.  tv4 = CMOV(Z, -tv2, tv2 != 0)\n        tv4 = Fp.mul(tv4, opts.A); // 8.  tv4 = A * tv4\n        tv2 = Fp.sqr(tv3); // 9.  tv2 = tv3^2\n        tv6 = Fp.sqr(tv4); // 10. tv6 = tv4^2\n        tv5 = Fp.mul(tv6, opts.A); // 11. tv5 = A * tv6\n        tv2 = Fp.add(tv2, tv5); // 12. tv2 = tv2 + tv5\n        tv2 = Fp.mul(tv2, tv3); // 13. tv2 = tv2 * tv3\n        tv6 = Fp.mul(tv6, tv4); // 14. tv6 = tv6 * tv4\n        tv5 = Fp.mul(tv6, opts.B); // 15. tv5 = B * tv6\n        tv2 = Fp.add(tv2, tv5); // 16. tv2 = tv2 + tv5\n        x = Fp.mul(tv1, tv3); // 17.   x = tv1 * tv3\n        const { isValid, value } = sqrtRatio(tv2, tv6); // 18. (is_gx1_square, y1) = sqrt_ratio(tv2, tv6)\n        y = Fp.mul(tv1, u); // 19.   y = tv1 * u  -> Z * u^3 * y1\n        y = Fp.mul(y, value); // 20.   y = y * y1\n        x = Fp.cmov(x, tv3, isValid); // 21.   x = CMOV(x, tv3, is_gx1_square)\n        y = Fp.cmov(y, value, isValid); // 22.   y = CMOV(y, y1, is_gx1_square)\n        const e1 = Fp.isOdd(u) === Fp.isOdd(y); // 23.  e1 = sgn0(u) == sgn0(y)\n        y = Fp.cmov(Fp.neg(y), y, e1); // 24.   y = CMOV(-y, y, e1)\n        x = Fp.div(x, tv4); // 25.   x = x / tv4\n        return { x, y };\n    };\n}\n//# sourceMappingURL=weierstrass.js.map","import assert from './_assert.js';\nimport { Hash, toBytes } from './utils.js';\n// HMAC (RFC 2104)\nclass HMAC extends Hash {\n    constructor(hash, _key) {\n        super();\n        this.finished = false;\n        this.destroyed = false;\n        assert.hash(hash);\n        const key = toBytes(_key);\n        this.iHash = hash.create();\n        if (typeof this.iHash.update !== 'function')\n            throw new TypeError('Expected instance of class which extends utils.Hash');\n        this.blockLen = this.iHash.blockLen;\n        this.outputLen = this.iHash.outputLen;\n        const blockLen = this.blockLen;\n        const pad = new Uint8Array(blockLen);\n        // blockLen can be bigger than outputLen\n        pad.set(key.length > blockLen ? hash.create().update(key).digest() : key);\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36;\n        this.iHash.update(pad);\n        // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n        this.oHash = hash.create();\n        // Undo internal XOR && apply outer XOR\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36 ^ 0x5c;\n        this.oHash.update(pad);\n        pad.fill(0);\n    }\n    update(buf) {\n        assert.exists(this);\n        this.iHash.update(buf);\n        return this;\n    }\n    digestInto(out) {\n        assert.exists(this);\n        assert.bytes(out, this.outputLen);\n        this.finished = true;\n        this.iHash.digestInto(out);\n        this.oHash.update(out);\n        this.oHash.digestInto(out);\n        this.destroy();\n    }\n    digest() {\n        const out = new Uint8Array(this.oHash.outputLen);\n        this.digestInto(out);\n        return out;\n    }\n    _cloneInto(to) {\n        // Create new instance without calling constructor since key already in state and we don't know it.\n        to || (to = Object.create(Object.getPrototypeOf(this), {}));\n        const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n        to = to;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        to.blockLen = blockLen;\n        to.outputLen = outputLen;\n        to.oHash = oHash._cloneInto(to.oHash);\n        to.iHash = iHash._cloneInto(to.iHash);\n        return to;\n    }\n    destroy() {\n        this.destroyed = true;\n        this.oHash.destroy();\n        this.iHash.destroy();\n    }\n}\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n */\nexport const hmac = (hash, key, message) => new HMAC(hash, key).update(message).digest();\nhmac.create = (hash, key) => new HMAC(hash, key);\n//# sourceMappingURL=hmac.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { hmac } from '@noble/hashes/hmac';\nimport { concatBytes, randomBytes } from '@noble/hashes/utils';\nimport { weierstrass } from './abstract/weierstrass.js';\n// connects noble-curves to noble-hashes\nexport function getHash(hash) {\n    return {\n        hash,\n        hmac: (key, ...msgs) => hmac(hash, key, concatBytes(...msgs)),\n        randomBytes,\n    };\n}\nexport function createCurve(curveDef, defHash) {\n    const create = (hash) => weierstrass({ ...curveDef, ...getHash(hash) });\n    return Object.freeze({ ...create(defHash), create });\n}\n//# sourceMappingURL=_shortw_utils.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { sha256 } from '@noble/hashes/sha256';\nimport { randomBytes } from '@noble/hashes/utils';\nimport { Field, mod, pow2 } from './abstract/modular.js';\nimport { mapToCurveSimpleSWU } from './abstract/weierstrass.js';\nimport { bytesToNumberBE, concatBytes, ensureBytes, numberToBytesBE } from './abstract/utils.js';\nimport * as htf from './abstract/hash-to-curve.js';\nimport { createCurve } from './_shortw_utils.js';\nconst secp256k1P = BigInt('0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f');\nconst secp256k1N = BigInt('0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141');\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst divNearest = (a, b) => (a + b / _2n) / b;\n/**\n * √n = n^((p+1)/4) for fields p = 3 mod 4. We unwrap the loop and multiply bit-by-bit.\n * (P+1n/4n).toString(2) would produce bits [223x 1, 0, 22x 1, 4x 0, 11, 00]\n */\nfunction sqrtMod(y) {\n    const P = secp256k1P;\n    // prettier-ignore\n    const _3n = BigInt(3), _6n = BigInt(6), _11n = BigInt(11), _22n = BigInt(22);\n    // prettier-ignore\n    const _23n = BigInt(23), _44n = BigInt(44), _88n = BigInt(88);\n    const b2 = (y * y * y) % P; // x^3, 11\n    const b3 = (b2 * b2 * y) % P; // x^7\n    const b6 = (pow2(b3, _3n, P) * b3) % P;\n    const b9 = (pow2(b6, _3n, P) * b3) % P;\n    const b11 = (pow2(b9, _2n, P) * b2) % P;\n    const b22 = (pow2(b11, _11n, P) * b11) % P;\n    const b44 = (pow2(b22, _22n, P) * b22) % P;\n    const b88 = (pow2(b44, _44n, P) * b44) % P;\n    const b176 = (pow2(b88, _88n, P) * b88) % P;\n    const b220 = (pow2(b176, _44n, P) * b44) % P;\n    const b223 = (pow2(b220, _3n, P) * b3) % P;\n    const t1 = (pow2(b223, _23n, P) * b22) % P;\n    const t2 = (pow2(t1, _6n, P) * b2) % P;\n    const root = pow2(t2, _2n, P);\n    if (!Fp.eql(Fp.sqr(root), y))\n        throw new Error('Cannot find square root');\n    return root;\n}\nconst Fp = Field(secp256k1P, undefined, undefined, { sqrt: sqrtMod });\nexport const secp256k1 = createCurve({\n    a: BigInt(0),\n    b: BigInt(7),\n    Fp,\n    n: secp256k1N,\n    // Base point (x, y) aka generator point\n    Gx: BigInt('55066263022277343669578718895168534326250603453777594175500187360389116729240'),\n    Gy: BigInt('32670510020758816978083085130507043184471273380659243275938904335757337482424'),\n    h: BigInt(1),\n    lowS: true,\n    /**\n     * secp256k1 belongs to Koblitz curves: it has efficiently computable endomorphism.\n     * Endomorphism uses 2x less RAM, speeds up precomputation by 2x and ECDH / key recovery by 20%.\n     * For precomputed wNAF it trades off 1/2 init time & 1/3 ram for 20% perf hit.\n     * Explanation: https://gist.github.com/paulmillr/eb670806793e84df628a7c434a873066\n     */\n    endo: {\n        beta: BigInt('0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee'),\n        splitScalar: (k) => {\n            const n = secp256k1N;\n            const a1 = BigInt('0x3086d221a7d46bcde86c90e49284eb15');\n            const b1 = -_1n * BigInt('0xe4437ed6010e88286f547fa90abfe4c3');\n            const a2 = BigInt('0x114ca50f7a8e2f3f657c1108d9d44cfd8');\n            const b2 = a1;\n            const POW_2_128 = BigInt('0x100000000000000000000000000000000'); // (2n**128n).toString(16)\n            const c1 = divNearest(b2 * k, n);\n            const c2 = divNearest(-b1 * k, n);\n            let k1 = mod(k - c1 * a1 - c2 * a2, n);\n            let k2 = mod(-c1 * b1 - c2 * b2, n);\n            const k1neg = k1 > POW_2_128;\n            const k2neg = k2 > POW_2_128;\n            if (k1neg)\n                k1 = n - k1;\n            if (k2neg)\n                k2 = n - k2;\n            if (k1 > POW_2_128 || k2 > POW_2_128) {\n                throw new Error('splitScalar: Endomorphism failed, k=' + k);\n            }\n            return { k1neg, k1, k2neg, k2 };\n        },\n    },\n}, sha256);\n// Schnorr signatures are superior to ECDSA from above. Below is Schnorr-specific BIP0340 code.\n// https://github.com/bitcoin/bips/blob/master/bip-0340.mediawiki\nconst _0n = BigInt(0);\nconst fe = (x) => typeof x === 'bigint' && _0n < x && x < secp256k1P;\nconst ge = (x) => typeof x === 'bigint' && _0n < x && x < secp256k1N;\n/** An object mapping tags to their tagged hash prefix of [SHA256(tag) | SHA256(tag)] */\nconst TAGGED_HASH_PREFIXES = {};\nfunction taggedHash(tag, ...messages) {\n    let tagP = TAGGED_HASH_PREFIXES[tag];\n    if (tagP === undefined) {\n        const tagH = sha256(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n        tagP = concatBytes(tagH, tagH);\n        TAGGED_HASH_PREFIXES[tag] = tagP;\n    }\n    return sha256(concatBytes(tagP, ...messages));\n}\n// ECDSA compact points are 33-byte. Schnorr is 32: we strip first byte 0x02 or 0x03\nconst pointToBytes = (point) => point.toRawBytes(true).slice(1);\nconst numTo32b = (n) => numberToBytesBE(n, 32);\nconst modP = (x) => mod(x, secp256k1P);\nconst modN = (x) => mod(x, secp256k1N);\nconst Point = secp256k1.ProjectivePoint;\nconst GmulAdd = (Q, a, b) => Point.BASE.multiplyAndAddUnsafe(Q, a, b);\n// Calculate point, scalar and bytes\nfunction schnorrGetExtPubKey(priv) {\n    let d_ = secp256k1.utils.normPrivateKeyToScalar(priv); // same method executed in fromPrivateKey\n    let p = Point.fromPrivateKey(d_); // P = d'⋅G; 0 < d' < n check is done inside\n    const scalar = p.hasEvenY() ? d_ : modN(-d_);\n    return { scalar: scalar, bytes: pointToBytes(p) };\n}\n/**\n * lift_x from BIP340. Convert 32-byte x coordinate to elliptic curve point.\n * @returns valid point checked for being on-curve\n */\nfunction lift_x(x) {\n    if (!fe(x))\n        throw new Error('bad x: need 0 < x < p'); // Fail if x ≥ p.\n    const xx = modP(x * x);\n    const c = modP(xx * x + BigInt(7)); // Let c = x³ + 7 mod p.\n    let y = sqrtMod(c); // Let y = c^(p+1)/4 mod p.\n    if (y % _2n !== _0n)\n        y = modP(-y); // Return the unique point P such that x(P) = x and\n    const p = new Point(x, y, _1n); // y(P) = y if y mod 2 = 0 or y(P) = p-y otherwise.\n    p.assertValidity();\n    return p;\n}\n/**\n * Create tagged hash, convert it to bigint, reduce modulo-n.\n */\nfunction challenge(...args) {\n    return modN(bytesToNumberBE(taggedHash('BIP0340/challenge', ...args)));\n}\n/**\n * Schnorr public key is just `x` coordinate of Point as per BIP340.\n */\nfunction schnorrGetPublicKey(privateKey) {\n    return schnorrGetExtPubKey(privateKey).bytes; // d'=int(sk). Fail if d'=0 or d'≥n. Ret bytes(d'⋅G)\n}\n/**\n * Creates Schnorr signature as per BIP340. Verifies itself before returning anything.\n * auxRand is optional and is not the sole source of k generation: bad CSPRNG won't be dangerous.\n */\nfunction schnorrSign(message, privateKey, auxRand = randomBytes(32)) {\n    const m = ensureBytes('message', message);\n    const { bytes: px, scalar: d } = schnorrGetExtPubKey(privateKey); // checks for isWithinCurveOrder\n    const a = ensureBytes('auxRand', auxRand, 32); // Auxiliary random data a: a 32-byte array\n    const t = numTo32b(d ^ bytesToNumberBE(taggedHash('BIP0340/aux', a))); // Let t be the byte-wise xor of bytes(d) and hash/aux(a)\n    const rand = taggedHash('BIP0340/nonce', t, px, m); // Let rand = hash/nonce(t || bytes(P) || m)\n    const k_ = modN(bytesToNumberBE(rand)); // Let k' = int(rand) mod n\n    if (k_ === _0n)\n        throw new Error('sign failed: k is zero'); // Fail if k' = 0.\n    const { bytes: rx, scalar: k } = schnorrGetExtPubKey(k_); // Let R = k'⋅G.\n    const e = challenge(rx, px, m); // Let e = int(hash/challenge(bytes(R) || bytes(P) || m)) mod n.\n    const sig = new Uint8Array(64); // Let sig = bytes(R) || bytes((k + ed) mod n).\n    sig.set(rx, 0);\n    sig.set(numTo32b(modN(k + e * d)), 32);\n    // If Verify(bytes(P), m, sig) (see below) returns failure, abort\n    if (!schnorrVerify(sig, m, px))\n        throw new Error('sign: Invalid signature produced');\n    return sig;\n}\n/**\n * Verifies Schnorr signature.\n * Will swallow errors & return false except for initial type validation of arguments.\n */\nfunction schnorrVerify(signature, message, publicKey) {\n    const sig = ensureBytes('signature', signature, 64);\n    const m = ensureBytes('message', message);\n    const pub = ensureBytes('publicKey', publicKey, 32);\n    try {\n        const P = lift_x(bytesToNumberBE(pub)); // P = lift_x(int(pk)); fail if that fails\n        const r = bytesToNumberBE(sig.subarray(0, 32)); // Let r = int(sig[0:32]); fail if r ≥ p.\n        if (!fe(r))\n            return false;\n        const s = bytesToNumberBE(sig.subarray(32, 64)); // Let s = int(sig[32:64]); fail if s ≥ n.\n        if (!ge(s))\n            return false;\n        const e = challenge(numTo32b(r), pointToBytes(P), m); // int(challenge(bytes(r)||bytes(P)||m))%n\n        const R = GmulAdd(P, s, modN(-e)); // R = s⋅G - e⋅P\n        if (!R || !R.hasEvenY() || R.toAffine().x !== r)\n            return false; // -eP == (n-e)P\n        return true; // Fail if is_infinite(R) / not has_even_y(R) / x(R) ≠ r.\n    }\n    catch (error) {\n        return false;\n    }\n}\nexport const schnorr = {\n    getPublicKey: schnorrGetPublicKey,\n    sign: schnorrSign,\n    verify: schnorrVerify,\n    utils: {\n        randomPrivateKey: secp256k1.utils.randomPrivateKey,\n        lift_x,\n        pointToBytes,\n        numberToBytesBE,\n        bytesToNumberBE,\n        taggedHash,\n        mod,\n    },\n};\nconst isoMap = htf.isogenyMap(Fp, [\n    // xNum\n    [\n        '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa8c7',\n        '0x7d3d4c80bc321d5b9f315cea7fd44c5d595d2fc0bf63b92dfff1044f17c6581',\n        '0x534c328d23f234e6e2a413deca25caece4506144037c40314ecbd0b53d9dd262',\n        '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa88c',\n    ],\n    // xDen\n    [\n        '0xd35771193d94918a9ca34ccbb7b640dd86cd409542f8487d9fe6b745781eb49b',\n        '0xedadc6f64383dc1df7c4b2d51b54225406d36b641f5e41bbc52a56612a8c6d14',\n        '0x0000000000000000000000000000000000000000000000000000000000000001', // LAST 1\n    ],\n    // yNum\n    [\n        '0x4bda12f684bda12f684bda12f684bda12f684bda12f684bda12f684b8e38e23c',\n        '0xc75e0c32d5cb7c0fa9d0a54b12a0a6d5647ab046d686da6fdffc90fc201d71a3',\n        '0x29a6194691f91a73715209ef6512e576722830a201be2018a765e85a9ecee931',\n        '0x2f684bda12f684bda12f684bda12f684bda12f684bda12f684bda12f38e38d84',\n    ],\n    // yDen\n    [\n        '0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffff93b',\n        '0x7a06534bb8bdb49fd5e9e6632722c2989467c1bfc8e8d978dfb425d2685c2573',\n        '0x6484aa716545ca2cf3a70c3fa8fe337e0a3d21162f0d6299a7bf8192bfd2a76f',\n        '0x0000000000000000000000000000000000000000000000000000000000000001', // LAST 1\n    ],\n].map((i) => i.map((j) => BigInt(j))));\nconst mapSWU = mapToCurveSimpleSWU(Fp, {\n    A: BigInt('0x3f8731abdd661adca08a5558f0f5d272e953d363cb6f0e5d405447c01a444533'),\n    B: BigInt('1771'),\n    Z: Fp.create(BigInt('-11')),\n});\nexport const { hashToCurve, encodeToCurve } = htf.createHasher(secp256k1.ProjectivePoint, (scalars) => {\n    const { x, y } = mapSWU(Fp.create(scalars[0]));\n    return isoMap(x, y);\n}, {\n    DST: 'secp256k1_XMD:SHA-256_SSWU_RO_',\n    encodeDST: 'secp256k1_XMD:SHA-256_SSWU_NU_',\n    p: Fp.ORDER,\n    m: 1,\n    k: 128,\n    expand: 'xmd',\n    hash: sha256,\n});\n//# sourceMappingURL=secp256k1.js.map","import {secp256k1} from '@noble/curves/secp256k1';\n\nexport const ecdsaSign = (\n  msgHash: Parameters<typeof secp256k1.sign>[0],\n  privKey: Parameters<typeof secp256k1.sign>[1],\n) => {\n  const signature = secp256k1.sign(msgHash, privKey);\n  return [signature.toCompactRawBytes(), signature.recovery!] as const;\n};\nexport const isValidPrivateKey = secp256k1.utils.isValidPrivateKey;\nexport const publicKeyCreate = secp256k1.getPublicKey;\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\nimport {keccak_256} from '@noble/hashes/sha3';\n\nimport {PublicKey} from '../publickey';\nimport {TransactionInstruction} from '../transaction';\nimport assert from '../utils/assert';\nimport {publicKeyCreate, ecdsaSign} from '../utils/secp256k1';\nimport {toBuffer} from '../utils/to-buffer';\n\nconst PRIVATE_KEY_BYTES = 32;\nconst ETHEREUM_ADDRESS_BYTES = 20;\nconst PUBLIC_KEY_BYTES = 64;\nconst SIGNATURE_OFFSETS_SERIALIZED_SIZE = 11;\n\n/**\n * Params for creating an secp256k1 instruction using a public key\n */\nexport type CreateSecp256k1InstructionWithPublicKeyParams = {\n  publicKey: Buffer | Uint8Array | Array<number>;\n  message: Buffer | Uint8Array | Array<number>;\n  signature: Buffer | Uint8Array | Array<number>;\n  recoveryId: number;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an secp256k1 instruction using an Ethereum address\n */\nexport type CreateSecp256k1InstructionWithEthAddressParams = {\n  ethAddress: Buffer | Uint8Array | Array<number> | string;\n  message: Buffer | Uint8Array | Array<number>;\n  signature: Buffer | Uint8Array | Array<number>;\n  recoveryId: number;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an secp256k1 instruction using a private key\n */\nexport type CreateSecp256k1InstructionWithPrivateKeyParams = {\n  privateKey: Buffer | Uint8Array | Array<number>;\n  message: Buffer | Uint8Array | Array<number>;\n  instructionIndex?: number;\n};\n\nconst SECP256K1_INSTRUCTION_LAYOUT = BufferLayout.struct<\n  Readonly<{\n    ethAddress: Uint8Array;\n    ethAddressInstructionIndex: number;\n    ethAddressOffset: number;\n    messageDataOffset: number;\n    messageDataSize: number;\n    messageInstructionIndex: number;\n    numSignatures: number;\n    recoveryId: number;\n    signature: Uint8Array;\n    signatureInstructionIndex: number;\n    signatureOffset: number;\n  }>\n>([\n  BufferLayout.u8('numSignatures'),\n  BufferLayout.u16('signatureOffset'),\n  BufferLayout.u8('signatureInstructionIndex'),\n  BufferLayout.u16('ethAddressOffset'),\n  BufferLayout.u8('ethAddressInstructionIndex'),\n  BufferLayout.u16('messageDataOffset'),\n  BufferLayout.u16('messageDataSize'),\n  BufferLayout.u8('messageInstructionIndex'),\n  BufferLayout.blob(20, 'ethAddress'),\n  BufferLayout.blob(64, 'signature'),\n  BufferLayout.u8('recoveryId'),\n]);\n\nexport class Secp256k1Program {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the secp256k1 program\n   */\n  static programId: PublicKey = new PublicKey(\n    'KeccakSecp256k11111111111111111111111111111',\n  );\n\n  /**\n   * Construct an Ethereum address from a secp256k1 public key buffer.\n   * @param {Buffer} publicKey a 64 byte secp256k1 public key buffer\n   */\n  static publicKeyToEthAddress(\n    publicKey: Buffer | Uint8Array | Array<number>,\n  ): Buffer {\n    assert(\n      publicKey.length === PUBLIC_KEY_BYTES,\n      `Public key must be ${PUBLIC_KEY_BYTES} bytes but received ${publicKey.length} bytes`,\n    );\n\n    try {\n      return Buffer.from(keccak_256(toBuffer(publicKey))).slice(\n        -ETHEREUM_ADDRESS_BYTES,\n      );\n    } catch (error) {\n      throw new Error(`Error constructing Ethereum address: ${error}`);\n    }\n  }\n\n  /**\n   * Create an secp256k1 instruction with a public key. The public key\n   * must be a buffer that is 64 bytes long.\n   */\n  static createInstructionWithPublicKey(\n    params: CreateSecp256k1InstructionWithPublicKeyParams,\n  ): TransactionInstruction {\n    const {publicKey, message, signature, recoveryId, instructionIndex} =\n      params;\n    return Secp256k1Program.createInstructionWithEthAddress({\n      ethAddress: Secp256k1Program.publicKeyToEthAddress(publicKey),\n      message,\n      signature,\n      recoveryId,\n      instructionIndex,\n    });\n  }\n\n  /**\n   * Create an secp256k1 instruction with an Ethereum address. The address\n   * must be a hex string or a buffer that is 20 bytes long.\n   */\n  static createInstructionWithEthAddress(\n    params: CreateSecp256k1InstructionWithEthAddressParams,\n  ): TransactionInstruction {\n    const {\n      ethAddress: rawAddress,\n      message,\n      signature,\n      recoveryId,\n      instructionIndex = 0,\n    } = params;\n\n    let ethAddress;\n    if (typeof rawAddress === 'string') {\n      if (rawAddress.startsWith('0x')) {\n        ethAddress = Buffer.from(rawAddress.substr(2), 'hex');\n      } else {\n        ethAddress = Buffer.from(rawAddress, 'hex');\n      }\n    } else {\n      ethAddress = rawAddress;\n    }\n\n    assert(\n      ethAddress.length === ETHEREUM_ADDRESS_BYTES,\n      `Address must be ${ETHEREUM_ADDRESS_BYTES} bytes but received ${ethAddress.length} bytes`,\n    );\n\n    const dataStart = 1 + SIGNATURE_OFFSETS_SERIALIZED_SIZE;\n    const ethAddressOffset = dataStart;\n    const signatureOffset = dataStart + ethAddress.length;\n    const messageDataOffset = signatureOffset + signature.length + 1;\n    const numSignatures = 1;\n\n    const instructionData = Buffer.alloc(\n      SECP256K1_INSTRUCTION_LAYOUT.span + message.length,\n    );\n\n    SECP256K1_INSTRUCTION_LAYOUT.encode(\n      {\n        numSignatures,\n        signatureOffset,\n        signatureInstructionIndex: instructionIndex,\n        ethAddressOffset,\n        ethAddressInstructionIndex: instructionIndex,\n        messageDataOffset,\n        messageDataSize: message.length,\n        messageInstructionIndex: instructionIndex,\n        signature: toBuffer(signature),\n        ethAddress: toBuffer(ethAddress),\n        recoveryId,\n      },\n      instructionData,\n    );\n\n    instructionData.fill(toBuffer(message), SECP256K1_INSTRUCTION_LAYOUT.span);\n\n    return new TransactionInstruction({\n      keys: [],\n      programId: Secp256k1Program.programId,\n      data: instructionData,\n    });\n  }\n\n  /**\n   * Create an secp256k1 instruction with a private key. The private key\n   * must be a buffer that is 32 bytes long.\n   */\n  static createInstructionWithPrivateKey(\n    params: CreateSecp256k1InstructionWithPrivateKeyParams,\n  ): TransactionInstruction {\n    const {privateKey: pkey, message, instructionIndex} = params;\n\n    assert(\n      pkey.length === PRIVATE_KEY_BYTES,\n      `Private key must be ${PRIVATE_KEY_BYTES} bytes but received ${pkey.length} bytes`,\n    );\n\n    try {\n      const privateKey = toBuffer(pkey);\n      const publicKey = publicKeyCreate(\n        privateKey,\n        false /* isCompressed */,\n      ).slice(1); // throw away leading byte\n      const messageHash = Buffer.from(keccak_256(toBuffer(message)));\n      const [signature, recoveryId] = ecdsaSign(messageHash, privateKey);\n\n      return this.createInstructionWithPublicKey({\n        publicKey,\n        message,\n        signature,\n        recoveryId,\n        instructionIndex,\n      });\n    } catch (error) {\n      throw new Error(`Error creating instruction; ${error}`);\n    }\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from '../instruction';\nimport * as Layout from '../layout';\nimport {PublicKey} from '../publickey';\nimport {SystemProgram} from './system';\nimport {\n  SYSVAR_CLOCK_PUBKEY,\n  SYSVAR_RENT_PUBKEY,\n  SYSVAR_STAKE_HISTORY_PUBKEY,\n} from '../sysvar';\nimport {Transaction, TransactionInstruction} from '../transaction';\nimport {toBuffer} from '../utils/to-buffer';\n\n/**\n * Address of the stake config account which configures the rate\n * of stake warmup and cooldown as well as the slashing penalty.\n */\nexport const STAKE_CONFIG_ID = new PublicKey(\n  'StakeConfig11111111111111111111111111111111',\n);\n\n/**\n * Stake account authority info\n */\nexport class Authorized {\n  /** stake authority */\n  staker: PublicKey;\n  /** withdraw authority */\n  withdrawer: PublicKey;\n\n  /**\n   * Create a new Authorized object\n   * @param staker the stake authority\n   * @param withdrawer the withdraw authority\n   */\n  constructor(staker: PublicKey, withdrawer: PublicKey) {\n    this.staker = staker;\n    this.withdrawer = withdrawer;\n  }\n}\n\ntype AuthorizedRaw = Readonly<{\n  staker: Uint8Array;\n  withdrawer: Uint8Array;\n}>;\n\n/**\n * Stake account lockup info\n */\nexport class Lockup {\n  /** Unix timestamp of lockup expiration */\n  unixTimestamp: number;\n  /** Epoch of lockup expiration */\n  epoch: number;\n  /** Lockup custodian authority */\n  custodian: PublicKey;\n\n  /**\n   * Create a new Lockup object\n   */\n  constructor(unixTimestamp: number, epoch: number, custodian: PublicKey) {\n    this.unixTimestamp = unixTimestamp;\n    this.epoch = epoch;\n    this.custodian = custodian;\n  }\n\n  /**\n   * Default, inactive Lockup value\n   */\n  static default: Lockup = new Lockup(0, 0, PublicKey.default);\n}\n\ntype LockupRaw = Readonly<{\n  custodian: Uint8Array;\n  epoch: number;\n  unixTimestamp: number;\n}>;\n\n/**\n * Create stake account transaction params\n */\nexport type CreateStakeAccountParams = {\n  /** Address of the account which will fund creation */\n  fromPubkey: PublicKey;\n  /** Address of the new stake account */\n  stakePubkey: PublicKey;\n  /** Authorities of the new stake account */\n  authorized: Authorized;\n  /** Lockup of the new stake account */\n  lockup?: Lockup;\n  /** Funding amount */\n  lamports: number;\n};\n\n/**\n * Create stake account with seed transaction params\n */\nexport type CreateStakeAccountWithSeedParams = {\n  fromPubkey: PublicKey;\n  stakePubkey: PublicKey;\n  basePubkey: PublicKey;\n  seed: string;\n  authorized: Authorized;\n  lockup?: Lockup;\n  lamports: number;\n};\n\n/**\n * Initialize stake instruction params\n */\nexport type InitializeStakeParams = {\n  stakePubkey: PublicKey;\n  authorized: Authorized;\n  lockup?: Lockup;\n};\n\n/**\n * Delegate stake instruction params\n */\nexport type DelegateStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  votePubkey: PublicKey;\n};\n\n/**\n * Authorize stake instruction params\n */\nexport type AuthorizeStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  newAuthorizedPubkey: PublicKey;\n  stakeAuthorizationType: StakeAuthorizationType;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Authorize stake instruction params using a derived key\n */\nexport type AuthorizeWithSeedStakeParams = {\n  stakePubkey: PublicKey;\n  authorityBase: PublicKey;\n  authoritySeed: string;\n  authorityOwner: PublicKey;\n  newAuthorizedPubkey: PublicKey;\n  stakeAuthorizationType: StakeAuthorizationType;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Split stake instruction params\n */\nexport type SplitStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  splitStakePubkey: PublicKey;\n  lamports: number;\n};\n\n/**\n * Split with seed transaction params\n */\nexport type SplitStakeWithSeedParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  splitStakePubkey: PublicKey;\n  basePubkey: PublicKey;\n  seed: string;\n  lamports: number;\n};\n\n/**\n * Withdraw stake instruction params\n */\nexport type WithdrawStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  toPubkey: PublicKey;\n  lamports: number;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Deactivate stake instruction params\n */\nexport type DeactivateStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Merge stake instruction params\n */\nexport type MergeStakeParams = {\n  stakePubkey: PublicKey;\n  sourceStakePubKey: PublicKey;\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Stake Instruction class\n */\nexport class StakeInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a stake instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): StakeInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: StakeInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(STAKE_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType as StakeInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a StakeInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode a initialize stake instruction and retrieve the instruction params.\n   */\n  static decodeInitialize(\n    instruction: TransactionInstruction,\n  ): InitializeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {authorized, lockup} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Initialize,\n      instruction.data,\n    );\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorized: new Authorized(\n        new PublicKey(authorized.staker),\n        new PublicKey(authorized.withdrawer),\n      ),\n      lockup: new Lockup(\n        lockup.unixTimestamp,\n        lockup.epoch,\n        new PublicKey(lockup.custodian),\n      ),\n    };\n  }\n\n  /**\n   * Decode a delegate stake instruction and retrieve the instruction params.\n   */\n  static decodeDelegate(\n    instruction: TransactionInstruction,\n  ): DelegateStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 6);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Delegate, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      votePubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[5].pubkey,\n    };\n  }\n\n  /**\n   * Decode an authorize stake instruction and retrieve the instruction params.\n   */\n  static decodeAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {newAuthorized, stakeAuthorizationType} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Authorize,\n      instruction.data,\n    );\n\n    const o: AuthorizeStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      stakeAuthorizationType: {\n        index: stakeAuthorizationType,\n      },\n    };\n    if (instruction.keys.length > 3) {\n      o.custodianPubkey = instruction.keys[3].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode an authorize-with-seed stake instruction and retrieve the instruction params.\n   */\n  static decodeAuthorizeWithSeed(\n    instruction: TransactionInstruction,\n  ): AuthorizeWithSeedStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {\n      newAuthorized,\n      stakeAuthorizationType,\n      authoritySeed,\n      authorityOwner,\n    } = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed,\n      instruction.data,\n    );\n\n    const o: AuthorizeWithSeedStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorityBase: instruction.keys[1].pubkey,\n      authoritySeed: authoritySeed,\n      authorityOwner: new PublicKey(authorityOwner),\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      stakeAuthorizationType: {\n        index: stakeAuthorizationType,\n      },\n    };\n    if (instruction.keys.length > 3) {\n      o.custodianPubkey = instruction.keys[3].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode a split stake instruction and retrieve the instruction params.\n   */\n  static decodeSplit(instruction: TransactionInstruction): SplitStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {lamports} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Split,\n      instruction.data,\n    );\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      splitStakePubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a merge stake instruction and retrieve the instruction params.\n   */\n  static decodeMerge(instruction: TransactionInstruction): MergeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Merge, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      sourceStakePubKey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n    };\n  }\n\n  /**\n   * Decode a withdraw stake instruction and retrieve the instruction params.\n   */\n  static decodeWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 5);\n    const {lamports} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Withdraw,\n      instruction.data,\n    );\n\n    const o: WithdrawStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n      lamports,\n    };\n    if (instruction.keys.length > 5) {\n      o.custodianPubkey = instruction.keys[5].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode a deactivate stake instruction and retrieve the instruction params.\n   */\n  static decodeDeactivate(\n    instruction: TransactionInstruction,\n  ): DeactivateStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Deactivate, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(StakeProgram.programId)) {\n      throw new Error('invalid instruction; programId is not StakeProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid StakeInstructionType's\n */\nexport type StakeInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof StakeInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  | 'Authorize'\n  | 'AuthorizeWithSeed'\n  | 'Deactivate'\n  | 'Delegate'\n  | 'Initialize'\n  | 'Merge'\n  | 'Split'\n  | 'Withdraw';\n\ntype StakeInstructionInputData = {\n  Authorize: IInstructionInputData &\n    Readonly<{\n      newAuthorized: Uint8Array;\n      stakeAuthorizationType: number;\n    }>;\n  AuthorizeWithSeed: IInstructionInputData &\n    Readonly<{\n      authorityOwner: Uint8Array;\n      authoritySeed: string;\n      instruction: number;\n      newAuthorized: Uint8Array;\n      stakeAuthorizationType: number;\n    }>;\n  Deactivate: IInstructionInputData;\n  Delegate: IInstructionInputData;\n  Initialize: IInstructionInputData &\n    Readonly<{\n      authorized: AuthorizedRaw;\n      lockup: LockupRaw;\n    }>;\n  Merge: IInstructionInputData;\n  Split: IInstructionInputData &\n    Readonly<{\n      lamports: number;\n    }>;\n  Withdraw: IInstructionInputData &\n    Readonly<{\n      lamports: number;\n    }>;\n};\n\n/**\n * An enumeration of valid stake InstructionType's\n * @internal\n */\nexport const STAKE_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in StakeInstructionType]: InstructionType<\n    StakeInstructionInputData[Instruction]\n  >;\n}>({\n  Initialize: {\n    index: 0,\n    layout: BufferLayout.struct<StakeInstructionInputData['Initialize']>([\n      BufferLayout.u32('instruction'),\n      Layout.authorized(),\n      Layout.lockup(),\n    ]),\n  },\n  Authorize: {\n    index: 1,\n    layout: BufferLayout.struct<StakeInstructionInputData['Authorize']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('newAuthorized'),\n      BufferLayout.u32('stakeAuthorizationType'),\n    ]),\n  },\n  Delegate: {\n    index: 2,\n    layout: BufferLayout.struct<StakeInstructionInputData['Delegate']>([\n      BufferLayout.u32('instruction'),\n    ]),\n  },\n  Split: {\n    index: 3,\n    layout: BufferLayout.struct<StakeInstructionInputData['Split']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  Withdraw: {\n    index: 4,\n    layout: BufferLayout.struct<StakeInstructionInputData['Withdraw']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  Deactivate: {\n    index: 5,\n    layout: BufferLayout.struct<StakeInstructionInputData['Deactivate']>([\n      BufferLayout.u32('instruction'),\n    ]),\n  },\n  Merge: {\n    index: 7,\n    layout: BufferLayout.struct<StakeInstructionInputData['Merge']>([\n      BufferLayout.u32('instruction'),\n    ]),\n  },\n  AuthorizeWithSeed: {\n    index: 8,\n    layout: BufferLayout.struct<StakeInstructionInputData['AuthorizeWithSeed']>(\n      [\n        BufferLayout.u32('instruction'),\n        Layout.publicKey('newAuthorized'),\n        BufferLayout.u32('stakeAuthorizationType'),\n        Layout.rustString('authoritySeed'),\n        Layout.publicKey('authorityOwner'),\n      ],\n    ),\n  },\n});\n\n/**\n * Stake authorization type\n */\nexport type StakeAuthorizationType = {\n  /** The Stake Authorization index (from solana-stake-program) */\n  index: number;\n};\n\n/**\n * An enumeration of valid StakeAuthorizationLayout's\n */\nexport const StakeAuthorizationLayout = Object.freeze({\n  Staker: {\n    index: 0,\n  },\n  Withdrawer: {\n    index: 1,\n  },\n});\n\n/**\n * Factory class for transactions to interact with the Stake program\n */\nexport class StakeProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Stake program\n   */\n  static programId: PublicKey = new PublicKey(\n    'Stake11111111111111111111111111111111111111',\n  );\n\n  /**\n   * Max space of a Stake account\n   *\n   * This is generated from the solana-stake-program StakeState struct as\n   * `StakeState::size_of()`:\n   * https://docs.rs/solana-stake-program/latest/solana_stake_program/stake_state/enum.StakeState.html\n   */\n  static space: number = 200;\n\n  /**\n   * Generate an Initialize instruction to add to a Stake Create transaction\n   */\n  static initialize(params: InitializeStakeParams): TransactionInstruction {\n    const {stakePubkey, authorized, lockup: maybeLockup} = params;\n    const lockup: Lockup = maybeLockup || Lockup.default;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Initialize;\n    const data = encodeData(type, {\n      authorized: {\n        staker: toBuffer(authorized.staker.toBuffer()),\n        withdrawer: toBuffer(authorized.withdrawer.toBuffer()),\n      },\n      lockup: {\n        unixTimestamp: lockup.unixTimestamp,\n        epoch: lockup.epoch,\n        custodian: toBuffer(lockup.custodian.toBuffer()),\n      },\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a Transaction that creates a new Stake account at\n   *   an address generated with `from`, a seed, and the Stake programId\n   */\n  static createAccountWithSeed(\n    params: CreateStakeAccountWithSeedParams,\n  ): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccountWithSeed({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.stakePubkey,\n        basePubkey: params.basePubkey,\n        seed: params.seed,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    const {stakePubkey, authorized, lockup} = params;\n    return transaction.add(this.initialize({stakePubkey, authorized, lockup}));\n  }\n\n  /**\n   * Generate a Transaction that creates a new Stake account\n   */\n  static createAccount(params: CreateStakeAccountParams): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.stakePubkey,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    const {stakePubkey, authorized, lockup} = params;\n    return transaction.add(this.initialize({stakePubkey, authorized, lockup}));\n  }\n\n  /**\n   * Generate a Transaction that delegates Stake tokens to a validator\n   * Vote PublicKey. This transaction can also be used to redelegate Stake\n   * to a new validator Vote PublicKey.\n   */\n  static delegate(params: DelegateStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey, votePubkey} = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.Delegate;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: votePubkey, isSigner: false, isWritable: false},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {\n          pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: STAKE_CONFIG_ID, isSigner: false, isWritable: false},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that authorizes a new PublicKey as Staker\n   * or Withdrawer on the Stake account.\n   */\n  static authorize(params: AuthorizeStakeParams): Transaction {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      newAuthorizedPubkey,\n      stakeAuthorizationType,\n      custodianPubkey,\n    } = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.Authorize;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      stakeAuthorizationType: stakeAuthorizationType.index,\n    });\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: true},\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({\n        pubkey: custodianPubkey,\n        isSigner: false,\n        isWritable: false,\n      });\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that authorizes a new PublicKey as Staker\n   * or Withdrawer on the Stake account.\n   */\n  static authorizeWithSeed(params: AuthorizeWithSeedStakeParams): Transaction {\n    const {\n      stakePubkey,\n      authorityBase,\n      authoritySeed,\n      authorityOwner,\n      newAuthorizedPubkey,\n      stakeAuthorizationType,\n      custodianPubkey,\n    } = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      stakeAuthorizationType: stakeAuthorizationType.index,\n      authoritySeed: authoritySeed,\n      authorityOwner: toBuffer(authorityOwner.toBuffer()),\n    });\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: authorityBase, isSigner: true, isWritable: false},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({\n        pubkey: custodianPubkey,\n        isSigner: false,\n        isWritable: false,\n      });\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * @internal\n   */\n  static splitInstruction(params: SplitStakeParams): TransactionInstruction {\n    const {stakePubkey, authorizedPubkey, splitStakePubkey, lamports} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Split;\n    const data = encodeData(type, {lamports});\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: splitStakePubkey, isSigner: false, isWritable: true},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that splits Stake tokens into another stake account\n   */\n  static split(params: SplitStakeParams): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: params.authorizedPubkey,\n        newAccountPubkey: params.splitStakePubkey,\n        lamports: 0,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n    return transaction.add(this.splitInstruction(params));\n  }\n\n  /**\n   * Generate a Transaction that splits Stake tokens into another account\n   * derived from a base public key and seed\n   */\n  static splitWithSeed(params: SplitStakeWithSeedParams): Transaction {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      splitStakePubkey,\n      basePubkey,\n      seed,\n      lamports,\n    } = params;\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.allocate({\n        accountPubkey: splitStakePubkey,\n        basePubkey,\n        seed,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n    return transaction.add(\n      this.splitInstruction({\n        stakePubkey,\n        authorizedPubkey,\n        splitStakePubkey,\n        lamports,\n      }),\n    );\n  }\n\n  /**\n   * Generate a Transaction that merges Stake accounts.\n   */\n  static merge(params: MergeStakeParams): Transaction {\n    const {stakePubkey, sourceStakePubKey, authorizedPubkey} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Merge;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: sourceStakePubKey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {\n          pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that withdraws deactivated Stake tokens.\n   */\n  static withdraw(params: WithdrawStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey, toPubkey, lamports, custodianPubkey} =\n      params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Withdraw;\n    const data = encodeData(type, {lamports});\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: toPubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n      {\n        pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n        isSigner: false,\n        isWritable: false,\n      },\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({\n        pubkey: custodianPubkey,\n        isSigner: false,\n        isWritable: false,\n      });\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that deactivates Stake tokens.\n   */\n  static deactivate(params: DeactivateStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Deactivate;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from '../instruction';\nimport * as Layout from '../layout';\nimport {PublicKey} from '../publickey';\nimport {SystemProgram} from './system';\nimport {SYSVAR_CLOCK_PUBKEY, SYSVAR_RENT_PUBKEY} from '../sysvar';\nimport {Transaction, TransactionInstruction} from '../transaction';\nimport {toBuffer} from '../utils/to-buffer';\n\n/**\n * Vote account info\n */\nexport class VoteInit {\n  nodePubkey: PublicKey;\n  authorizedVoter: PublicKey;\n  authorizedWithdrawer: PublicKey;\n  commission: number; /** [0, 100] */\n\n  constructor(\n    nodePubkey: PublicKey,\n    authorizedVoter: PublicKey,\n    authorizedWithdrawer: PublicKey,\n    commission: number,\n  ) {\n    this.nodePubkey = nodePubkey;\n    this.authorizedVoter = authorizedVoter;\n    this.authorizedWithdrawer = authorizedWithdrawer;\n    this.commission = commission;\n  }\n}\n\n/**\n * Create vote account transaction params\n */\nexport type CreateVoteAccountParams = {\n  fromPubkey: PublicKey;\n  votePubkey: PublicKey;\n  voteInit: VoteInit;\n  lamports: number;\n};\n\n/**\n * InitializeAccount instruction params\n */\nexport type InitializeAccountParams = {\n  votePubkey: PublicKey;\n  nodePubkey: PublicKey;\n  voteInit: VoteInit;\n};\n\n/**\n * Authorize instruction params\n */\nexport type AuthorizeVoteParams = {\n  votePubkey: PublicKey;\n  /** Current vote or withdraw authority, depending on `voteAuthorizationType` */\n  authorizedPubkey: PublicKey;\n  newAuthorizedPubkey: PublicKey;\n  voteAuthorizationType: VoteAuthorizationType;\n};\n\n/**\n * AuthorizeWithSeed instruction params\n */\nexport type AuthorizeVoteWithSeedParams = {\n  currentAuthorityDerivedKeyBasePubkey: PublicKey;\n  currentAuthorityDerivedKeyOwnerPubkey: PublicKey;\n  currentAuthorityDerivedKeySeed: string;\n  newAuthorizedPubkey: PublicKey;\n  voteAuthorizationType: VoteAuthorizationType;\n  votePubkey: PublicKey;\n};\n\n/**\n * Withdraw from vote account transaction params\n */\nexport type WithdrawFromVoteAccountParams = {\n  votePubkey: PublicKey;\n  authorizedWithdrawerPubkey: PublicKey;\n  lamports: number;\n  toPubkey: PublicKey;\n};\n\n/**\n * Vote Instruction class\n */\nexport class VoteInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a vote instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): VoteInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: VoteInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(VOTE_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType as VoteInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a VoteInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode an initialize vote instruction and retrieve the instruction params.\n   */\n  static decodeInitializeAccount(\n    instruction: TransactionInstruction,\n  ): InitializeAccountParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 4);\n\n    const {voteInit} = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.InitializeAccount,\n      instruction.data,\n    );\n\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      nodePubkey: instruction.keys[3].pubkey,\n      voteInit: new VoteInit(\n        new PublicKey(voteInit.nodePubkey),\n        new PublicKey(voteInit.authorizedVoter),\n        new PublicKey(voteInit.authorizedWithdrawer),\n        voteInit.commission,\n      ),\n    };\n  }\n\n  /**\n   * Decode an authorize instruction and retrieve the instruction params.\n   */\n  static decodeAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeVoteParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {newAuthorized, voteAuthorizationType} = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.Authorize,\n      instruction.data,\n    );\n\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      voteAuthorizationType: {\n        index: voteAuthorizationType,\n      },\n    };\n  }\n\n  /**\n   * Decode an authorize instruction and retrieve the instruction params.\n   */\n  static decodeAuthorizeWithSeed(\n    instruction: TransactionInstruction,\n  ): AuthorizeVoteWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {\n      voteAuthorizeWithSeedArgs: {\n        currentAuthorityDerivedKeyOwnerPubkey,\n        currentAuthorityDerivedKeySeed,\n        newAuthorized,\n        voteAuthorizationType,\n      },\n    } = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed,\n      instruction.data,\n    );\n\n    return {\n      currentAuthorityDerivedKeyBasePubkey: instruction.keys[2].pubkey,\n      currentAuthorityDerivedKeyOwnerPubkey: new PublicKey(\n        currentAuthorityDerivedKeyOwnerPubkey,\n      ),\n      currentAuthorityDerivedKeySeed: currentAuthorityDerivedKeySeed,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      voteAuthorizationType: {\n        index: voteAuthorizationType,\n      },\n      votePubkey: instruction.keys[0].pubkey,\n    };\n  }\n\n  /**\n   * Decode a withdraw instruction and retrieve the instruction params.\n   */\n  static decodeWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawFromVoteAccountParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {lamports} = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.Withdraw,\n      instruction.data,\n    );\n\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      authorizedWithdrawerPubkey: instruction.keys[2].pubkey,\n      lamports,\n      toPubkey: instruction.keys[1].pubkey,\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(VoteProgram.programId)) {\n      throw new Error('invalid instruction; programId is not VoteProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid VoteInstructionType's\n */\nexport type VoteInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof VoteInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  'Authorize' | 'AuthorizeWithSeed' | 'InitializeAccount' | 'Withdraw';\n\n/** @internal */\nexport type VoteAuthorizeWithSeedArgs = Readonly<{\n  currentAuthorityDerivedKeyOwnerPubkey: Uint8Array;\n  currentAuthorityDerivedKeySeed: string;\n  newAuthorized: Uint8Array;\n  voteAuthorizationType: number;\n}>;\ntype VoteInstructionInputData = {\n  Authorize: IInstructionInputData & {\n    newAuthorized: Uint8Array;\n    voteAuthorizationType: number;\n  };\n  AuthorizeWithSeed: IInstructionInputData & {\n    voteAuthorizeWithSeedArgs: VoteAuthorizeWithSeedArgs;\n  };\n  InitializeAccount: IInstructionInputData & {\n    voteInit: Readonly<{\n      authorizedVoter: Uint8Array;\n      authorizedWithdrawer: Uint8Array;\n      commission: number;\n      nodePubkey: Uint8Array;\n    }>;\n  };\n  Withdraw: IInstructionInputData & {\n    lamports: number;\n  };\n};\n\nconst VOTE_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in VoteInstructionType]: InstructionType<\n    VoteInstructionInputData[Instruction]\n  >;\n}>({\n  InitializeAccount: {\n    index: 0,\n    layout: BufferLayout.struct<VoteInstructionInputData['InitializeAccount']>([\n      BufferLayout.u32('instruction'),\n      Layout.voteInit(),\n    ]),\n  },\n  Authorize: {\n    index: 1,\n    layout: BufferLayout.struct<VoteInstructionInputData['Authorize']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('newAuthorized'),\n      BufferLayout.u32('voteAuthorizationType'),\n    ]),\n  },\n  Withdraw: {\n    index: 3,\n    layout: BufferLayout.struct<VoteInstructionInputData['Withdraw']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  AuthorizeWithSeed: {\n    index: 10,\n    layout: BufferLayout.struct<VoteInstructionInputData['AuthorizeWithSeed']>([\n      BufferLayout.u32('instruction'),\n      Layout.voteAuthorizeWithSeedArgs(),\n    ]),\n  },\n});\n\n/**\n * VoteAuthorize type\n */\nexport type VoteAuthorizationType = {\n  /** The VoteAuthorize index (from solana-vote-program) */\n  index: number;\n};\n\n/**\n * An enumeration of valid VoteAuthorization layouts.\n */\nexport const VoteAuthorizationLayout = Object.freeze({\n  Voter: {\n    index: 0,\n  },\n  Withdrawer: {\n    index: 1,\n  },\n});\n\n/**\n * Factory class for transactions to interact with the Vote program\n */\nexport class VoteProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Vote program\n   */\n  static programId: PublicKey = new PublicKey(\n    'Vote111111111111111111111111111111111111111',\n  );\n\n  /**\n   * Max space of a Vote account\n   *\n   * This is generated from the solana-vote-program VoteState struct as\n   * `VoteState::size_of()`:\n   * https://docs.rs/solana-vote-program/1.9.5/solana_vote_program/vote_state/struct.VoteState.html#method.size_of\n   *\n   * KEEP IN SYNC WITH `VoteState::size_of()` in https://github.com/solana-labs/solana/blob/a474cb24b9238f5edcc982f65c0b37d4a1046f7e/sdk/program/src/vote/state/mod.rs#L340-L342\n   */\n  static space: number = process.env.TEST_LIVE ? 3762 : 3731;\n\n  /**\n   * Generate an Initialize instruction.\n   */\n  static initializeAccount(\n    params: InitializeAccountParams,\n  ): TransactionInstruction {\n    const {votePubkey, nodePubkey, voteInit} = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.InitializeAccount;\n    const data = encodeData(type, {\n      voteInit: {\n        nodePubkey: toBuffer(voteInit.nodePubkey.toBuffer()),\n        authorizedVoter: toBuffer(voteInit.authorizedVoter.toBuffer()),\n        authorizedWithdrawer: toBuffer(\n          voteInit.authorizedWithdrawer.toBuffer(),\n        ),\n        commission: voteInit.commission,\n      },\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: votePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {pubkey: nodePubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a transaction that creates a new Vote account.\n   */\n  static createAccount(params: CreateVoteAccountParams): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.votePubkey,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    return transaction.add(\n      this.initializeAccount({\n        votePubkey: params.votePubkey,\n        nodePubkey: params.voteInit.nodePubkey,\n        voteInit: params.voteInit,\n      }),\n    );\n  }\n\n  /**\n   * Generate a transaction that authorizes a new Voter or Withdrawer on the Vote account.\n   */\n  static authorize(params: AuthorizeVoteParams): Transaction {\n    const {\n      votePubkey,\n      authorizedPubkey,\n      newAuthorizedPubkey,\n      voteAuthorizationType,\n    } = params;\n\n    const type = VOTE_INSTRUCTION_LAYOUTS.Authorize;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      voteAuthorizationType: voteAuthorizationType.index,\n    });\n\n    const keys = [\n      {pubkey: votePubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction that authorizes a new Voter or Withdrawer on the Vote account\n   * where the current Voter or Withdrawer authority is a derived key.\n   */\n  static authorizeWithSeed(params: AuthorizeVoteWithSeedParams): Transaction {\n    const {\n      currentAuthorityDerivedKeyBasePubkey,\n      currentAuthorityDerivedKeyOwnerPubkey,\n      currentAuthorityDerivedKeySeed,\n      newAuthorizedPubkey,\n      voteAuthorizationType,\n      votePubkey,\n    } = params;\n\n    const type = VOTE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed;\n    const data = encodeData(type, {\n      voteAuthorizeWithSeedArgs: {\n        currentAuthorityDerivedKeyOwnerPubkey: toBuffer(\n          currentAuthorityDerivedKeyOwnerPubkey.toBuffer(),\n        ),\n        currentAuthorityDerivedKeySeed: currentAuthorityDerivedKeySeed,\n        newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n        voteAuthorizationType: voteAuthorizationType.index,\n      },\n    });\n\n    const keys = [\n      {pubkey: votePubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n      {\n        pubkey: currentAuthorityDerivedKeyBasePubkey,\n        isSigner: true,\n        isWritable: false,\n      },\n    ];\n\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction to withdraw from a Vote account.\n   */\n  static withdraw(params: WithdrawFromVoteAccountParams): Transaction {\n    const {votePubkey, authorizedWithdrawerPubkey, lamports, toPubkey} = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.Withdraw;\n    const data = encodeData(type, {lamports});\n\n    const keys = [\n      {pubkey: votePubkey, isSigner: false, isWritable: true},\n      {pubkey: toPubkey, isSigner: false, isWritable: true},\n      {pubkey: authorizedWithdrawerPubkey, isSigner: true, isWritable: false},\n    ];\n\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction to withdraw safely from a Vote account.\n   *\n   * This function was created as a safeguard for vote accounts running validators, `safeWithdraw`\n   * checks that the withdraw amount will not exceed the specified balance while leaving enough left\n   * to cover rent. If you wish to close the vote account by withdrawing the full amount, call the\n   * `withdraw` method directly.\n   */\n  static safeWithdraw(\n    params: WithdrawFromVoteAccountParams,\n    currentVoteAccountBalance: number,\n    rentExemptMinimum: number,\n  ): Transaction {\n    if (params.lamports > currentVoteAccountBalance - rentExemptMinimum) {\n      throw new Error(\n        'Withdraw will leave vote account with insuffcient funds.',\n      );\n    }\n    return VoteProgram.withdraw(params);\n  }\n}\n","import {Buffer} from 'buffer';\nimport {\n  assert as assertType,\n  optional,\n  string,\n  type as pick,\n} from 'superstruct';\n\nimport * as Layout from './layout';\nimport * as shortvec from './utils/shortvec-encoding';\nimport {PublicKey, PUBLIC_KEY_LENGTH} from './publickey';\n\nexport const VALIDATOR_INFO_KEY = new PublicKey(\n  'Va1idator1nfo111111111111111111111111111111',\n);\n\n/**\n * @internal\n */\ntype ConfigKey = {\n  publicKey: PublicKey;\n  isSigner: boolean;\n};\n\n/**\n * Info used to identity validators.\n */\nexport type Info = {\n  /** validator name */\n  name: string;\n  /** optional, validator website */\n  website?: string;\n  /** optional, extra information the validator chose to share */\n  details?: string;\n  /** optional, used to identify validators on keybase.io */\n  keybaseUsername?: string;\n};\n\nconst InfoString = pick({\n  name: string(),\n  website: optional(string()),\n  details: optional(string()),\n  keybaseUsername: optional(string()),\n});\n\n/**\n * ValidatorInfo class\n */\nexport class ValidatorInfo {\n  /**\n   * validator public key\n   */\n  key: PublicKey;\n  /**\n   * validator information\n   */\n  info: Info;\n\n  /**\n   * Construct a valid ValidatorInfo\n   *\n   * @param key validator public key\n   * @param info validator information\n   */\n  constructor(key: PublicKey, info: Info) {\n    this.key = key;\n    this.info = info;\n  }\n\n  /**\n   * Deserialize ValidatorInfo from the config account data. Exactly two config\n   * keys are required in the data.\n   *\n   * @param buffer config account data\n   * @return null if info was not found\n   */\n  static fromConfigData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): ValidatorInfo | null {\n    let byteArray = [...buffer];\n    const configKeyCount = shortvec.decodeLength(byteArray);\n    if (configKeyCount !== 2) return null;\n\n    const configKeys: Array<ConfigKey> = [];\n    for (let i = 0; i < 2; i++) {\n      const publicKey = new PublicKey(byteArray.slice(0, PUBLIC_KEY_LENGTH));\n      byteArray = byteArray.slice(PUBLIC_KEY_LENGTH);\n      const isSigner = byteArray.slice(0, 1)[0] === 1;\n      byteArray = byteArray.slice(1);\n      configKeys.push({publicKey, isSigner});\n    }\n\n    if (configKeys[0].publicKey.equals(VALIDATOR_INFO_KEY)) {\n      if (configKeys[1].isSigner) {\n        const rawInfo: any = Layout.rustString().decode(Buffer.from(byteArray));\n        const info = JSON.parse(rawInfo as string);\n        assertType(info, InfoString);\n        return new ValidatorInfo(configKeys[1].publicKey, info);\n      }\n    }\n\n    return null;\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\nimport type {Buffer} from 'buffer';\n\nimport * as Layout from './layout';\nimport {PublicKey} from './publickey';\nimport {toBuffer} from './utils/to-buffer';\n\nexport const VOTE_PROGRAM_ID = new PublicKey(\n  'Vote111111111111111111111111111111111111111',\n);\n\nexport type Lockout = {\n  slot: number;\n  confirmationCount: number;\n};\n\n/**\n * History of how many credits earned by the end of each epoch\n */\nexport type EpochCredits = Readonly<{\n  epoch: number;\n  credits: number;\n  prevCredits: number;\n}>;\n\nexport type AuthorizedVoter = Readonly<{\n  epoch: number;\n  authorizedVoter: PublicKey;\n}>;\n\ntype AuthorizedVoterRaw = Readonly<{\n  authorizedVoter: Uint8Array;\n  epoch: number;\n}>;\n\ntype PriorVoters = Readonly<{\n  buf: PriorVoterRaw[];\n  idx: number;\n  isEmpty: number;\n}>;\n\nexport type PriorVoter = Readonly<{\n  authorizedPubkey: PublicKey;\n  epochOfLastAuthorizedSwitch: number;\n  targetEpoch: number;\n}>;\n\ntype PriorVoterRaw = Readonly<{\n  authorizedPubkey: Uint8Array;\n  epochOfLastAuthorizedSwitch: number;\n  targetEpoch: number;\n}>;\n\nexport type BlockTimestamp = Readonly<{\n  slot: number;\n  timestamp: number;\n}>;\n\ntype VoteAccountData = Readonly<{\n  authorizedVoters: AuthorizedVoterRaw[];\n  authorizedWithdrawer: Uint8Array;\n  commission: number;\n  epochCredits: EpochCredits[];\n  lastTimestamp: BlockTimestamp;\n  nodePubkey: Uint8Array;\n  priorVoters: PriorVoters;\n  rootSlot: number;\n  rootSlotValid: number;\n  votes: Lockout[];\n}>;\n\n/**\n * See https://github.com/solana-labs/solana/blob/8a12ed029cfa38d4a45400916c2463fb82bbec8c/programs/vote_api/src/vote_state.rs#L68-L88\n *\n * @internal\n */\nconst VoteAccountLayout = BufferLayout.struct<VoteAccountData>([\n  Layout.publicKey('nodePubkey'),\n  Layout.publicKey('authorizedWithdrawer'),\n  BufferLayout.u8('commission'),\n  BufferLayout.nu64(), // votes.length\n  BufferLayout.seq<Lockout>(\n    BufferLayout.struct([\n      BufferLayout.nu64('slot'),\n      BufferLayout.u32('confirmationCount'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'votes',\n  ),\n  BufferLayout.u8('rootSlotValid'),\n  BufferLayout.nu64('rootSlot'),\n  BufferLayout.nu64(), // authorizedVoters.length\n  BufferLayout.seq<AuthorizedVoterRaw>(\n    BufferLayout.struct([\n      BufferLayout.nu64('epoch'),\n      Layout.publicKey('authorizedVoter'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'authorizedVoters',\n  ),\n  BufferLayout.struct<PriorVoters>(\n    [\n      BufferLayout.seq(\n        BufferLayout.struct([\n          Layout.publicKey('authorizedPubkey'),\n          BufferLayout.nu64('epochOfLastAuthorizedSwitch'),\n          BufferLayout.nu64('targetEpoch'),\n        ]),\n        32,\n        'buf',\n      ),\n      BufferLayout.nu64('idx'),\n      BufferLayout.u8('isEmpty'),\n    ],\n    'priorVoters',\n  ),\n  BufferLayout.nu64(), // epochCredits.length\n  BufferLayout.seq<EpochCredits>(\n    BufferLayout.struct([\n      BufferLayout.nu64('epoch'),\n      BufferLayout.nu64('credits'),\n      BufferLayout.nu64('prevCredits'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'epochCredits',\n  ),\n  BufferLayout.struct<BlockTimestamp>(\n    [BufferLayout.nu64('slot'), BufferLayout.nu64('timestamp')],\n    'lastTimestamp',\n  ),\n]);\n\ntype VoteAccountArgs = {\n  nodePubkey: PublicKey;\n  authorizedWithdrawer: PublicKey;\n  commission: number;\n  rootSlot: number | null;\n  votes: Lockout[];\n  authorizedVoters: AuthorizedVoter[];\n  priorVoters: PriorVoter[];\n  epochCredits: EpochCredits[];\n  lastTimestamp: BlockTimestamp;\n};\n\n/**\n * VoteAccount class\n */\nexport class VoteAccount {\n  nodePubkey: PublicKey;\n  authorizedWithdrawer: PublicKey;\n  commission: number;\n  rootSlot: number | null;\n  votes: Lockout[];\n  authorizedVoters: AuthorizedVoter[];\n  priorVoters: PriorVoter[];\n  epochCredits: EpochCredits[];\n  lastTimestamp: BlockTimestamp;\n\n  /**\n   * @internal\n   */\n  constructor(args: VoteAccountArgs) {\n    this.nodePubkey = args.nodePubkey;\n    this.authorizedWithdrawer = args.authorizedWithdrawer;\n    this.commission = args.commission;\n    this.rootSlot = args.rootSlot;\n    this.votes = args.votes;\n    this.authorizedVoters = args.authorizedVoters;\n    this.priorVoters = args.priorVoters;\n    this.epochCredits = args.epochCredits;\n    this.lastTimestamp = args.lastTimestamp;\n  }\n\n  /**\n   * Deserialize VoteAccount from the account data.\n   *\n   * @param buffer account data\n   * @return VoteAccount\n   */\n  static fromAccountData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): VoteAccount {\n    const versionOffset = 4;\n    const va = VoteAccountLayout.decode(toBuffer(buffer), versionOffset);\n\n    let rootSlot: number | null = va.rootSlot;\n    if (!va.rootSlotValid) {\n      rootSlot = null;\n    }\n\n    return new VoteAccount({\n      nodePubkey: new PublicKey(va.nodePubkey),\n      authorizedWithdrawer: new PublicKey(va.authorizedWithdrawer),\n      commission: va.commission,\n      votes: va.votes,\n      rootSlot,\n      authorizedVoters: va.authorizedVoters.map(parseAuthorizedVoter),\n      priorVoters: getPriorVoters(va.priorVoters),\n      epochCredits: va.epochCredits,\n      lastTimestamp: va.lastTimestamp,\n    });\n  }\n}\n\nfunction parseAuthorizedVoter({\n  authorizedVoter,\n  epoch,\n}: AuthorizedVoterRaw): AuthorizedVoter {\n  return {\n    epoch,\n    authorizedVoter: new PublicKey(authorizedVoter),\n  };\n}\n\nfunction parsePriorVoters({\n  authorizedPubkey,\n  epochOfLastAuthorizedSwitch,\n  targetEpoch,\n}: PriorVoterRaw): PriorVoter {\n  return {\n    authorizedPubkey: new PublicKey(authorizedPubkey),\n    epochOfLastAuthorizedSwitch,\n    targetEpoch,\n  };\n}\n\nfunction getPriorVoters({buf, idx, isEmpty}: PriorVoters): PriorVoter[] {\n  if (isEmpty) {\n    return [];\n  }\n\n  return [\n    ...buf.slice(idx + 1).map(parsePriorVoters),\n    ...buf.slice(0, idx).map(parsePriorVoters),\n  ];\n}\n","const endpoint = {\n  http: {\n    devnet: 'http://api.devnet.solana.com',\n    testnet: 'http://api.testnet.solana.com',\n    'mainnet-beta': 'http://api.mainnet-beta.solana.com/',\n  },\n  https: {\n    devnet: 'https://api.devnet.solana.com',\n    testnet: 'https://api.testnet.solana.com',\n    'mainnet-beta': 'https://api.mainnet-beta.solana.com/',\n  },\n};\n\nexport type Cluster = 'devnet' | 'testnet' | 'mainnet-beta';\n\n/**\n * Retrieves the RPC API URL for the specified cluster\n */\nexport function clusterApiUrl(cluster?: Cluster, tls?: boolean): string {\n  const key = tls === false ? 'http' : 'https';\n\n  if (!cluster) {\n    return endpoint[key]['devnet'];\n  }\n\n  const url = endpoint[key][cluster];\n  if (!url) {\n    throw new Error(`Unknown ${key} cluster: ${cluster}`);\n  }\n  return url;\n}\n","import type {Buffer} from 'buffer';\n\nimport {\n  BlockheightBasedTransactionConfirmationStrategy,\n  Connection,\n  DurableNonceTransactionConfirmationStrategy,\n  TransactionConfirmationStrategy,\n} from '../connection';\nimport type {TransactionSignature} from '../transaction';\nimport type {ConfirmOptions} from '../connection';\n\n/**\n * Send and confirm a raw transaction\n *\n * If `commitment` option is not specified, defaults to 'max' commitment.\n *\n * @param {Connection} connection\n * @param {Buffer} rawTransaction\n * @param {TransactionConfirmationStrategy} confirmationStrategy\n * @param {ConfirmOptions} [options]\n * @returns {Promise<TransactionSignature>}\n */\nexport async function sendAndConfirmRawTransaction(\n  connection: Connection,\n  rawTransaction: Buffer,\n  confirmationStrategy: TransactionConfirmationStrategy,\n  options?: ConfirmOptions,\n): Promise<TransactionSignature>;\n\n/**\n * @deprecated Calling `sendAndConfirmRawTransaction()` without a `confirmationStrategy`\n * is no longer supported and will be removed in a future version.\n */\n// eslint-disable-next-line no-redeclare\nexport async function sendAndConfirmRawTransaction(\n  connection: Connection,\n  rawTransaction: Buffer,\n  options?: ConfirmOptions,\n): Promise<TransactionSignature>;\n\n// eslint-disable-next-line no-redeclare\nexport async function sendAndConfirmRawTransaction(\n  connection: Connection,\n  rawTransaction: Buffer,\n  confirmationStrategyOrConfirmOptions:\n    | TransactionConfirmationStrategy\n    | ConfirmOptions\n    | undefined,\n  maybeConfirmOptions?: ConfirmOptions,\n): Promise<TransactionSignature> {\n  let confirmationStrategy: TransactionConfirmationStrategy | undefined;\n  let options: ConfirmOptions | undefined;\n  if (\n    confirmationStrategyOrConfirmOptions &&\n    Object.prototype.hasOwnProperty.call(\n      confirmationStrategyOrConfirmOptions,\n      'lastValidBlockHeight',\n    )\n  ) {\n    confirmationStrategy =\n      confirmationStrategyOrConfirmOptions as BlockheightBasedTransactionConfirmationStrategy;\n    options = maybeConfirmOptions;\n  } else if (\n    confirmationStrategyOrConfirmOptions &&\n    Object.prototype.hasOwnProperty.call(\n      confirmationStrategyOrConfirmOptions,\n      'nonceValue',\n    )\n  ) {\n    confirmationStrategy =\n      confirmationStrategyOrConfirmOptions as DurableNonceTransactionConfirmationStrategy;\n    options = maybeConfirmOptions;\n  } else {\n    options = confirmationStrategyOrConfirmOptions as\n      | ConfirmOptions\n      | undefined;\n  }\n  const sendOptions = options && {\n    skipPreflight: options.skipPreflight,\n    preflightCommitment: options.preflightCommitment || options.commitment,\n    minContextSlot: options.minContextSlot,\n  };\n\n  const signature = await connection.sendRawTransaction(\n    rawTransaction,\n    sendOptions,\n  );\n\n  const commitment = options && options.commitment;\n  const confirmationPromise = confirmationStrategy\n    ? connection.confirmTransaction(confirmationStrategy, commitment)\n    : connection.confirmTransaction(signature, commitment);\n  const status = (await confirmationPromise).value;\n\n  if (status.err) {\n    throw new Error(\n      `Raw transaction ${signature} failed (${JSON.stringify(status)})`,\n    );\n  }\n\n  return signature;\n}\n","export * from './account';\nexport * from './blockhash';\nexport * from './bpf-loader-deprecated';\nexport * from './bpf-loader';\nexport * from './connection';\nexport * from './epoch-schedule';\nexport * from './errors';\nexport * from './fee-calculator';\nexport * from './keypair';\nexport * from './loader';\nexport * from './message';\nexport * from './nonce-account';\nexport * from './programs';\nexport * from './publickey';\nexport * from './transaction';\nexport * from './validator-info';\nexport * from './vote-account';\nexport * from './sysvar';\nexport * from './utils';\n\n/**\n * There are 1-billion lamports in one SOL\n */\nexport const LAMPORTS_PER_SOL = 1000000000;\n"],"names":["i","require$$0","ieee754","require$$1","number","assert","crypto","u32","utf8ToBytes","concatBytes","u64","_0n","_1n","_2n","_3n","_4n","_5n","_8n","validateOpts","ut.validateObject","ut.bytesToNumberLE","ut.numberToBytesLE","ut.bytesToHex","ut.concatBytes","Fp","htf.createHasher","generatePrivateKey","ed25519","utils","randomPrivateKey","generateKeypair","privateScalar","publicKey","getPublicKey","secretKey","Uint8Array","set","isOnCurve","ExtendedPoint","fromHex","sign","message","slice","verify","toBuffer","arr","Buffer","isBuffer","from","buffer","byteOffset","byteLength","this","TextDecoder","TextEncoder","require$$2","Struct","constructor","properties","Object","assign","encode","serialize","SOLANA_SCHEMA","decode","data","deserialize","decodeUnchecked","deserializeUnchecked","Enum","enum","keys","length","Error","map","key","Map","MAX_SEED_LENGTH","PUBLIC_KEY_LENGTH","isPublicKeyData","value","_bn","undefined","uniquePublicKeyCounter","Symbol","toStringTag","PublicKey","decoded","bs58","BN","unique","equals","eq","toBase58","toBytes","toJSON","buf","b","toArrayLike","zeroPad","alloc","copy","toString","createWithSeed","fromPublicKey","seed","programId","concat","publicKeyBytes","sha256","createProgramAddressSync","seeds","forEach","TypeError","createProgramAddress","findProgramAddressSync","nonce","address","seedsWithNonce","err","findProgramAddress","pubkeyData","pubkey","default","kind","fields","Account","_publicKey","_secretKey","secretKeyBuffer","BPF_LOADER_DEPRECATED_PROGRAM_ID","Layout_1","Boolean","PACKET_DATA_SIZE","VERSION_PREFIX_MASK","SIGNATURE_LENGTH_IN_BYTES","TransactionExpiredBlockheightExceededError","signature","defineProperty","prototype","TransactionExpiredTimeoutError","timeoutSeconds","toFixed","TransactionExpiredNonceInvalidError","MessageAccountKeys","staticAccountKeys","accountKeysFromLookups","keySegments","push","writable","readonly","get","index","keySegment","flat","compileInstructions","instructions","U8_MAX","keyIndexMap","findKeyIndex","keyIndex","instruction","programIdIndex","accountKeyIndexes","meta","property","BufferLayout","rustString","rsl","_decode","bind","_encode","rslShim","offset","str","chars","span","authorized","lockup","voteInit","voteAuthorizeWithSeedArgs","getAlloc","type","getItemAlloc","item","field","Array","isArray","elementLayout","layout","decodeLength","bytes","len","size","elem","shift","encodeLength","rem_len","condition","CompiledKeys","payer","keyMetaMap","compile","getOrInsertDefault","keyMeta","isSigner","isWritable","isInvoked","payerKeyMeta","ix","accountMeta","getMessageComponents","mapEntries","entries","writableSigners","filter","readonlySigners","writableNonSigners","readonlyNonSigners","header","numRequiredSignatures","numReadonlySignedAccounts","numReadonlyUnsignedAccounts","payerAddress","extractTableLookup","lookupTable","writableIndexes","drainedWritableKeys","drainKeysFoundInLookupTable","state","addresses","readonlyIndexes","drainedReadonlyKeys","accountKey","lookupTableEntries","keyMetaFilter","lookupTableIndexes","drainedKeys","lookupTableIndex","findIndex","entry","delete","Message","args","accountKeys","recentBlockhash","indexToProgramIds","account","version","compiledInstructions","accounts","addressTableLookups","getAccountKeys","compiledKeys","payerKey","isAccountSigner","isAccountWritable","numSignedAccounts","unsignedAccountIndex","numUnsignedAccounts","numWritableUnsignedAccounts","numWritableSignedAccounts","isProgramId","has","programIds","values","nonProgramIds","_","numKeys","keyCount","shortvec","keyIndicesCount","dataCount","keyIndices","dataLength","instructionCount","instructionBuffer","instructionBufferLength","instructionLayout","signDataLayout","Layout","transaction","signData","byteArray","accountCount","dataSlice","messageArgs","MessageV0","numAccountKeysFromLookups","count","lookup","addressLookupTableAccounts","resolveAddressTableLookups","numStaticAccountKeys","lookupAccountKeysIndex","numWritableLookupAccountKeys","reduce","tableLookup","tableAccount","find","lookupTableAccounts","extractResult","addressTableLookup","encodedStaticAccountKeysLength","serializedInstructions","serializeInstructions","encodedInstructionsLength","serializedAddressTableLookups","serializeAddressTableLookups","encodedAddressTableLookupsLength","messageLayout","serializedMessage","MESSAGE_VERSION_0_PREFIX","serializedMessageLength","prefix","staticAccountKeysLength","instructionsLength","addressTableLookupsLength","serializedLength","encodedAccountKeyIndexesLength","encodedDataLength","encodedWritableIndexesLength","encodedReadonlyIndexesLength","addressTableLookupLayout","maskedPrefix","splice","accountKeyIndexesLength","addressTableLookupsCount","writableIndexesLength","readonlyIndexesLength","VersionedMessage","deserializeMessageVersion","TransactionStatus","DEFAULT_SIGNATURE","fill","TransactionInstruction","opts","Transaction","signatures","feePayer","lastValidBlockHeight","nonceInfo","minNonceContextSlot","_message","_json","hasOwnProperty","call","minContextSlot","blockhash","nonceInstruction","signers","add","items","compileMessage","JSON","stringify","console","warn","accountMetas","includes","uniqueMetas","pubkeyString","uniqueIndex","x","sort","y","options","localeMatcher","usage","sensitivity","ignorePunctuation","numeric","caseFirst","localeCompare","feePayerIndex","payerMeta","unshift","signedKeys","unsignedKeys","indexOf","invariant","_compile","valid","every","pair","serializeMessage","getEstimatedFee","connection","getFeeForMessage","setSigners","seen","Set","uniqueSigners","signer","_partialSign","partialSign","_addSignature","addSignature","sigpair","verifySignatures","requireAllSignatures","_verifySignatures","config","_serialize","signatureCount","transactionLength","wireTransaction","keyObj","populate","sigPubkeyPair","some","TransactionMessage","decompile","compiledIx","compileToLegacyMessage","compileToV0Message","VersionedTransaction","defaultSignatures","encodedSignaturesLength","transactionLayout","serializedTransaction","serializedTransactionLength","signaturesLength","messageData","signerPubkeys","signerIndex","NUM_TICKS_PER_SECOND","DEFAULT_TICKS_PER_SLOT","NUM_SLOTS_PER_SECOND","MS_PER_SLOT","SYSVAR_CLOCK_PUBKEY","SYSVAR_EPOCH_SCHEDULE_PUBKEY","SYSVAR_INSTRUCTIONS_PUBKEY","SYSVAR_RECENT_BLOCKHASHES_PUBKEY","SYSVAR_RENT_PUBKEY","SYSVAR_REWARDS_PUBKEY","SYSVAR_SLOT_HASHES_PUBKEY","SYSVAR_SLOT_HISTORY_PUBKEY","SYSVAR_STAKE_HISTORY_PUBKEY","sendAndConfirmTransaction","sendOptions","skipPreflight","preflightCommitment","commitment","maxRetries","sendTransaction","status","confirmTransaction","abortSignal","nonceAccountPubkey","nonceValue","sleep","ms","Promise","resolve","setTimeout","encodeData","allocLength","layoutFields","decodeData","FeeCalculatorLayout","NonceAccountLayout","NONCE_ACCOUNT_LENGTH","NonceAccount","authorizedPubkey","feeCalculator","fromAccountData","nonceAccount","browser","encodeDecode","bigInt","blob","bigIntLayout","src","toBigIntLE","toBufferLE","SystemInstruction","decodeInstructionType","checkProgramId","instructionTypeLayout","typeIndex","ixType","SYSTEM_INSTRUCTION_LAYOUTS","decodeCreateAccount","checkKeyLength","lamports","space","Create","fromPubkey","newAccountPubkey","decodeTransfer","Transfer","toPubkey","decodeTransferWithSeed","TransferWithSeed","basePubkey","decodeAllocate","Allocate","accountPubkey","decodeAllocateWithSeed","base","AllocateWithSeed","decodeAssign","Assign","decodeAssignWithSeed","AssignWithSeed","decodeCreateWithSeed","CreateWithSeed","decodeNonceInitialize","InitializeNonceAccount","noncePubkey","decodeNonceAdvance","AdvanceNonceAccount","decodeNonceWithdraw","WithdrawNonceAccount","decodeNonceAuthorize","AuthorizeNonceAccount","newAuthorizedPubkey","SystemProgram","expectedLength","freeze","UpgradeNonceAccount","createAccount","params","transfer","BigInt","createAccountWithSeed","createNonceAccount","initParams","nonceInitialize","instructionData","nonceAdvance","nonceWithdraw","nonceAuthorize","allocate","CHUNK_SIZE","Loader","getMinNumSignatures","Math","ceil","chunkSize","load","program","balanceNeeded","getMinimumBalanceForRentExemption","programInfo","getAccountInfo","executable","error","owner","dataLayout","array","transactions","bytesLength","bytesLengthPadding","_rpcEndpoint","REQUESTS_PER_SECOND","all","deployCommitment","finalizeSignature","context","currentSlot","getSlot","slot","round","BPF_LOADER_PROGRAM_ID","BpfLoader","elf","loaderProgramId","validate","uuid","generateRequest","MINIMUM_SLOT_PER_EPOCH","trailingZeros","n","nextPowerOfTwo","EpochSchedule","slotsPerEpoch","leaderScheduleSlotOffset","warmup","firstNormalEpoch","firstNormalSlot","getEpoch","getEpochAndSlotIndex","epoch","epochLen","getSlotsInEpoch","slotIndex","normalSlotIndex","normalEpochIndex","floor","getFirstSlotInEpoch","pow","getLastSlotInEpoch","SendTransactionError","logs","SolanaJSONRPCErrorCode","JSON_RPC_SERVER_ERROR_BLOCK_CLEANED_UP","JSON_RPC_SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE","JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_VERIFICATION_FAILURE","JSON_RPC_SERVER_ERROR_BLOCK_NOT_AVAILABLE","JSON_RPC_SERVER_ERROR_NODE_UNHEALTHY","JSON_RPC_SERVER_ERROR_TRANSACTION_PRECOMPILE_VERIFICATION_FAILURE","JSON_RPC_SERVER_ERROR_SLOT_SKIPPED","JSON_RPC_SERVER_ERROR_NO_SNAPSHOT","JSON_RPC_SERVER_ERROR_LONG_TERM_STORAGE_SLOT_SKIPPED","JSON_RPC_SERVER_ERROR_KEY_EXCLUDED_FROM_SECONDARY_INDEX","JSON_RPC_SERVER_ERROR_TRANSACTION_HISTORY_NOT_AVAILABLE","JSON_RPC_SCAN_ERROR","JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_LEN_MISMATCH","JSON_RPC_SERVER_ERROR_BLOCK_STATUS_NOT_AVAILABLE_YET","JSON_RPC_SERVER_ERROR_UNSUPPORTED_TRANSACTION_VERSION","JSON_RPC_SERVER_ERROR_MIN_CONTEXT_SLOT_NOT_REACHED","SolanaJSONRPCError","code","customMessage","name","globalThis","fetch","require$$3","require$$4","require$$5","require$$6","require$$7","require$$8","require$$9","RpcWebSocketClient","RpcWebSocketCommonClient","generate_request_id","webSocketFactory","url","rpc","createRpc","autoconnect","max_reconnects","reconnect","reconnect_interval","underlyingSocket","socket","readyState","reject","notify","LOOKUP_TABLE_META_SIZE","AddressLookupTableAccount","isActive","U64_MAX","deactivationSlot","accountData","LookupTableMetaLayout","serializedAddressesLen","numSerializedAddresses","lastExtendedSlot","lastExtendedSlotStartIndex","lastExtendedStartIndex","authority","URL_RE","makeWebsocketUrl","endpoint","matches","match","hostish","portWithColon","rest","protocol","startsWith","startPort","parseInt","websocketPort","PublicKeyFromString","coerce","instance","string","RawAccountDataResult","tuple","literal","BufferFromRawAccountData","BLOCKHASH_CACHE_TIMEOUT_MS","assertEndpointUrl","putativeUrl","test","extractCommitmentFromConfig","commitmentOrConfig","specifiedCommitment","specifiedConfig","createRpcResult","result","union","pick","jsonrpc","id","unknown","optional","any","UnknownRpcResult","jsonRpcResult","schema","create","jsonRpcResultAndContext","notificationResultAndContext","versionedMessageFromResponse","response","GetInflationGovernorResult","foundation","foundationTerm","initial","taper","terminal","GetInflationRewardResult","nullable","effectiveSlot","amount","postBalance","commission","GetRecentPrioritizationFeesResult","prioritizationFee","GetInflationRateResult","total","validator","GetEpochInfoResult","slotsInEpoch","absoluteSlot","blockHeight","transactionCount","GetEpochScheduleResult","boolean","GetLeaderScheduleResult","record","TransactionErrorResult","SignatureStatusResult","SignatureReceivedResult","VersionResult","SimulatedTransactionResponseStruct","rentEpoch","unitsConsumed","returnData","BlockProductionResponseStruct","byIdentity","range","firstSlot","lastSlot","createRpcClient","httpHeaders","customFetch","fetchMiddleware","disableRetryOnRateLimit","httpAgent","fetchImpl","agent","fetchWithMiddleware","info","init","modifiedFetchArgs","modifiedInfo","modifiedInit","clientBrowser","RpcClient","request","callback","method","body","headers","COMMON_HTTP_HEADERS","too_many_requests_retries","res","waitTime","log","statusText","text","ok","createRpcRequest","client","createRpcBatchRequest","requests","batch","methodName","GetInflationGovernorRpcResult","GetInflationRateRpcResult","GetRecentPrioritizationFeesRpcResult","GetEpochInfoRpcResult","GetEpochScheduleRpcResult","GetLeaderScheduleRpcResult","SlotRpcResult","GetSupplyRpcResult","circulating","nonCirculating","nonCirculatingAccounts","TokenAmountResult","uiAmount","decimals","uiAmountString","GetTokenLargestAccountsResult","GetTokenAccountsByOwner","ParsedAccountDataResult","parsed","GetParsedTokenAccountsByOwner","GetLargestAccountsRpcResult","AccountInfoResult","KeyedAccountInfoResult","ParsedOrRawAccountData","ParsedAccountInfoResult","KeyedParsedAccountInfoResult","StakeActivationResult","active","inactive","GetConfirmedSignaturesForAddress2RpcResult","memo","blockTime","GetSignaturesForAddressRpcResult","AccountNotificationResult","subscription","ProgramAccountInfoResult","ProgramAccountNotificationResult","SlotInfoResult","parent","root","SlotNotificationResult","SlotUpdateResult","timestamp","stats","numTransactionEntries","numSuccessfulTransactions","numFailedTransactions","maxTransactionsPerEntry","SlotUpdateNotificationResult","SignatureNotificationResult","RootNotificationResult","ContactInfoResult","gossip","tpu","VoteAccountInfoResult","votePubkey","nodePubkey","activatedStake","epochVoteAccount","epochCredits","lastVote","rootSlot","GetVoteAccounts","current","delinquent","ConfirmationStatus","SignatureStatusResponse","confirmations","confirmationStatus","GetSignatureStatusesRpcResult","GetMinimumBalanceForRentExemptionRpcResult","AddressTableLookupStruct","ConfirmedTransactionResult","AnnotatedAccountKey","source","ConfirmedTransactionAccountsModeResult","ParsedInstructionResult","RawInstructionResult","InstructionResult","UnknownInstructionResult","ParsedOrRawInstruction","ParsedConfirmedTransactionResult","TokenBalanceResult","accountIndex","mint","uiTokenAmount","LoadedAddressesResult","ConfirmedTransactionMetaResult","fee","innerInstructions","preBalances","postBalances","logMessages","preTokenBalances","postTokenBalances","loadedAddresses","computeUnitsConsumed","ParsedConfirmedTransactionMetaResult","TransactionVersionStruct","RewardsResult","rewardType","GetBlockRpcResult","previousBlockhash","parentSlot","rewards","GetNoneModeBlockRpcResult","GetAccountsModeBlockRpcResult","GetParsedBlockRpcResult","GetParsedAccountsModeBlockRpcResult","GetParsedNoneModeBlockRpcResult","GetConfirmedBlockRpcResult","GetBlockSignaturesRpcResult","GetTransactionRpcResult","GetParsedTransactionRpcResult","GetRecentBlockhashAndContextRpcResult","lamportsPerSignature","GetLatestBlockhashRpcResult","PerfSampleResult","numTransactions","numSlots","samplePeriodSecs","GetRecentPerformanceSamplesRpcResult","GetFeeCalculatorRpcResult","RequestAirdropRpcResult","SendTransactionRpcResult","LogsResult","LogsNotificationResult","process","Connection","_commitment","_confirmTransactionInitialTimeout","_rpcWsEndpoint","_rpcClient","_rpcRequest","_rpcBatchRequest","_rpcWebSocket","_rpcWebSocketConnected","_rpcWebSocketHeartbeat","_rpcWebSocketIdleTimeout","_rpcWebSocketGeneration","_disableBlockhashCaching","_pollingBlockhash","_blockhashInfo","latestBlockhash","lastFetch","transactionSignatures","simulatedSignatures","_nextClientSubscriptionId","_subscriptionDisposeFunctionsByClientSubscriptionId","_subscriptionHashByClientSubscriptionId","_subscriptionStateChangeCallbacksByHash","_subscriptionCallbacksByServerSubscriptionId","_subscriptionsByHash","_subscriptionsAutoDisposedByRpc","getBlockHeight","requestPromises","_buildArgs","requestHash","fastStableStringify","unsafeRes","wsEndpoint","confirmTransactionInitialTimeout","Infinity","on","_wsOnOpen","_wsOnError","_wsOnClose","_wsOnAccountNotification","_wsOnProgramAccountNotification","_wsOnSlotNotification","_wsOnSlotUpdatesNotification","_wsOnSignatureNotification","_wsOnRootNotification","_wsOnLogsNotification","rpcEndpoint","getBalanceAndContext","getBalance","then","catch","e","getBlockTime","getMinimumLedgerSlot","getFirstAvailableBlock","getSupply","configArg","getTokenSupply","tokenMintAddress","getTokenAccountBalance","tokenAddress","getTokenAccountsByOwner","ownerAddress","_args","getParsedTokenAccountsByOwner","getLargestAccounts","arg","getTokenLargestAccounts","mintAddress","getAccountInfoAndContext","getParsedAccountInfo","getMultipleParsedAccounts","publicKeys","rawConfig","getMultipleAccountsInfoAndContext","getMultipleAccountsInfo","getStakeActivation","getProgramAccounts","configOrCommitment","encoding","configWithoutEncoding","baseSchema","withContext","getParsedProgramAccounts","strategy","rawSignature","aborted","reason","decodedSignature","confirmTransactionUsingLegacyTimeoutStrategy","confirmTransactionUsingBlockHeightExceedanceStrategy","confirmTransactionUsingDurableNonceStrategy","getCancellationPromise","signal","addEventListener","getTransactionConfirmationPromise","signatureSubscriptionId","disposeSignatureSubscriptionStateChangeObserver","done","confirmationPromise","onSignature","__type","PROCESSED","subscriptionSetupPromise","resolveSubscriptionSetup","_onSubscriptionStateChange","nextState","getSignatureStatus","abortConfirmation","removeSignatureListener","expiryPromise","checkBlockHeight","_e","currentBlockHeight","BLOCKHEIGHT_EXCEEDED","cancellationPromise","outcome","race","currentNonceValue","lastCheckedSlot","getCurrentNonceValue","getNonceAndContext","NONCE_INVALID","slotInWhichNonceDidAdvance","signatureStatus","commitmentForStatus","timeoutId","timeoutMs","TIMED_OUT","clearTimeout","getClusterNodes","getVoteAccounts","getSlotLeader","getSlotLeaders","startSlot","limit","getSignatureStatuses","getTransactionCount","getTotalSupply","excludeNonCirculatingAccountsList","getInflationGovernor","getInflationReward","getInflationRate","getEpochInfo","getEpochSchedule","epochSchedule","getLeaderSchedule","getRecentBlockhashAndContext","getRecentPerformanceSamples","getFeeCalculatorForBlockhash","wireMessage","getRecentPrioritizationFees","lockedWritableAccounts","getRecentBlockhash","getLatestBlockhash","getLatestBlockhashAndContext","getVersion","getGenesisHash","getBlock","_buildArgsAtLeastConfirmed","transactionDetails","getParsedBlock","getBlockProduction","extra","c","getTransaction","getParsedTransaction","getParsedTransactions","getTransactions","getConfirmedBlock","block","getBlocks","endSlot","getBlockSignatures","getConfirmedBlockSignatures","getConfirmedTransaction","getParsedConfirmedTransaction","getParsedConfirmedTransactions","getConfirmedSignaturesForAddress","firstAvailableBlock","until","highestConfirmedRoot","before","confirmedSignatureInfo","getConfirmedSignaturesForAddress2","getSignaturesForAddress","getAddressLookupTable","accountInfo","getNonce","requestAirdrop","to","_blockhashWithExpiryBlockHeight","disableCache","timeSinceFetch","Date","now","expired","_pollNewBlockhash","startTime","cachedLatestBlockhash","cachedBlockhash","getStakeMinimumDelegation","simulateTransaction","transactionOrMessage","configOrSigners","includeAccounts","versionedTx","encodedTransaction","originalTx","sigVerify","traceIndent","logTrace","join","signersOrOptions","sendRawTransaction","rawTransaction","sendEncodedTransaction","setInterval","_updateSubscriptions","Number","MAX_SAFE_INTEGER","clearInterval","hash","_setSubscription","nextSubscription","prevState","stateChangeCallbacks","cb","clientSubscriptionId","close","connect","activeWebSocketGeneration","isCurrentConnectionStillActive","callbacks","serverSubscriptionId","unsubscribeMethod","_handleServerNotification","callbackArgs","notification","_makeSubscription","subscriptionConfig","existingSubscription","onAccountChange","removeAccountChangeListener","_unsubscribeClientSubscription","accountId","onProgramAccountChange","filters","removeProgramAccountChangeListener","onLogs","mentions","removeOnLogsListener","onSlotChange","removeSlotChangeListener","onSlotUpdate","removeSlotUpdateListener","subscriptionName","dispose","override","_err","onSignatureWithOptions","onRootChange","removeRootChangeListener","Keypair","keypair","_keypair","generate","fromSecretKey","skipValidation","computedPublicKey","ii","fromSeed","LOOKUP_TABLE_INSTRUCTION_LAYOUTS","CreateLookupTable","bigintLayout","FreezeLookupTable","ExtendLookupTable","DeactivateLookupTable","CloseLookupTable","AddressLookupTableInstruction","layoutType","decodeCreateLookupTable","checkKeysLength","recentSlot","decodeExtendLookupTable","decodeCloseLookupTable","recipient","decodeFreezeLookupTable","decodeDeactivateLookupTable","AddressLookupTableProgram","createLookupTable","lookupTableAddress","bumpSeed","freezeLookupTable","extendLookupTable","addr","deactivateLookupTable","closeLookupTable","ComputeBudgetInstruction","COMPUTE_BUDGET_INSTRUCTION_LAYOUTS","decodeRequestUnits","units","additionalFee","RequestUnits","decodeRequestHeapFrame","RequestHeapFrame","decodeSetComputeUnitLimit","SetComputeUnitLimit","decodeSetComputeUnitPrice","microLamports","SetComputeUnitPrice","ComputeBudgetProgram","requestUnits","requestHeapFrame","setComputeUnitLimit","setComputeUnitPrice","PRIVATE_KEY_BYTES","PUBLIC_KEY_BYTES","SIGNATURE_BYTES","ED25519_INSTRUCTION_LAYOUT","Ed25519Program","createInstructionWithPublicKey","instructionIndex","publicKeyOffset","signatureOffset","messageDataOffset","numSignatures","padding","signatureInstructionIndex","publicKeyInstructionIndex","messageDataSize","messageInstructionIndex","createInstructionWithPrivateKey","privateKey","ut.bytesToNumberBE","mod.mod","mod.invert","ut.numberToBytesBE","ut.hexToBytes","mod.hashToPrivateScalar","ut.bitMask","ut.createHmacDrbg","mod.validateField","htf.isogenyMap","ecdsaSign","msgHash","privKey","secp256k1","toCompactRawBytes","recovery","isValidPrivateKey","publicKeyCreate","ETHEREUM_ADDRESS_BYTES","SIGNATURE_OFFSETS_SERIALIZED_SIZE","SECP256K1_INSTRUCTION_LAYOUT","Secp256k1Program","publicKeyToEthAddress","keccak_256","recoveryId","createInstructionWithEthAddress","ethAddress","rawAddress","substr","dataStart","ethAddressOffset","ethAddressInstructionIndex","pkey","messageHash","STAKE_CONFIG_ID","Authorized","staker","withdrawer","Lockup","unixTimestamp","custodian","StakeInstruction","STAKE_INSTRUCTION_LAYOUTS","decodeInitialize","Initialize","stakePubkey","decodeDelegate","Delegate","decodeAuthorize","newAuthorized","stakeAuthorizationType","Authorize","o","custodianPubkey","decodeAuthorizeWithSeed","authoritySeed","authorityOwner","AuthorizeWithSeed","authorityBase","decodeSplit","Split","splitStakePubkey","decodeMerge","Merge","sourceStakePubKey","decodeWithdraw","Withdraw","decodeDeactivate","Deactivate","StakeProgram","StakeAuthorizationLayout","Staker","Withdrawer","initialize","maybeLockup","delegate","authorize","authorizeWithSeed","splitInstruction","split","splitWithSeed","merge","withdraw","deactivate","VoteInit","authorizedVoter","authorizedWithdrawer","VoteInstruction","VOTE_INSTRUCTION_LAYOUTS","decodeInitializeAccount","InitializeAccount","voteAuthorizationType","currentAuthorityDerivedKeyOwnerPubkey","currentAuthorityDerivedKeySeed","currentAuthorityDerivedKeyBasePubkey","authorizedWithdrawerPubkey","VoteProgram","VoteAuthorizationLayout","Voter","initializeAccount","safeWithdraw","currentVoteAccountBalance","rentExemptMinimum","VALIDATOR_INFO_KEY","InfoString","website","details","keybaseUsername","ValidatorInfo","fromConfigData","configKeyCount","configKeys","rawInfo","parse","assertType","VOTE_PROGRAM_ID","VoteAccountLayout","VoteAccount","votes","authorizedVoters","priorVoters","lastTimestamp","versionOffset","va","rootSlotValid","parseAuthorizedVoter","getPriorVoters","parsePriorVoters","epochOfLastAuthorizedSwitch","targetEpoch","idx","isEmpty","http","devnet","testnet","https","clusterApiUrl","cluster","tls","sendAndConfirmRawTransaction","confirmationStrategyOrConfirmOptions","maybeConfirmOptions","confirmationStrategy","LAMPORTS_PER_SOL"],"mappings":"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AG,CAAC,CAAC,EAAE;CAC/E,QAAQ,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,GAAGA,KAAG,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,EAAE,IAAI,CAAC,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,EAAE;CAC/E,QAAQ,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,GAAGA,KAAG,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,EAAE,IAAI,CAAC,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,EAAE;CAC/E,QAAQ,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,GAAGA,KAAG,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,EAAE,IAAI,CAAC,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,EAAE;CAC/E,QAAQ,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,GAAGA,KAAG,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,EAAE,IAAI,CAAC,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,EAAE;CAC/E,QAAQ,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,GAAGA,KAAG,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,EAAE,IAAI,CAAC,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,EAAE;CAC/E,QAAQ,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,GAAGA,KAAG,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,EAAE,IAAI,CAAC,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,EAAE;CAC/E,QAAQ,IAAI,CAAC,GAAG,CAAC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CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;MACpC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,MAAM,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC;MACvD,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC;MAClD,EAAE,IAAI,SAAS,CAAC;CACpB;MACI,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;MACzB,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;CAC9B,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;MACtC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;CAC7B,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;MACpC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,MAAM,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC;MACvD,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC;MAClD,EAAE,IAAI,SAAS,CAAC;CACpB;MACI,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;MACzB,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;CAC9B,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;MACtC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;CAC7B,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;MACpC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,MAAM,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC;MACvD,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC;MAClD,EAAE,IAAI,SAAS,CAAC;CACpB;MACI,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;MACzB,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;CAC9B,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;MACtC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;CAC7B,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;MACpC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,MAAM,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC;MACvD,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC;MAClD,EAAE,IAAI,SAAS,CAAC;CACpB;MACI,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;MACzB,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;CAC9B,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;MACtC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;CAC7B,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;MACpC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,MAAM,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC;MACvD,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC;MAClD,EAAE,IAAI,SAAS,CAAC;CACpB;MACI,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;MACzB,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;CAC9B,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;MACtC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;CAC7B,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;MACpC,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,MAAM,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC;MACxD,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC;MACnD,GAAG,IAAI,SAAS,CAAC;CACrB;MACI,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;MACzB,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;CAC9B,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;MACtC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;CAC7B,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;MACpC,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,MAAM,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC;MACxD,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC;MACnD,GAAG,IAAI,SAAS,CAAC;CACrB;MACI,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;MACzB,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;CAC9B,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;MACtC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;CAC7B,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,I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,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;CAC/B,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;CAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;CAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;CAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;CAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;CAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;CAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;CAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;CAC/B,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;CAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;CAC/B,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;CAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;CAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;CAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;CAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;CAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;CAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;CAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;CAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;CAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;CAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;CAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;CAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;CAChC,YAAY,OAAO,IAAI,KAAK,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;CACzC,SAAS;CACT;CACA;CACA;CACA;CACA,QAAQ,GAAG,CAAC,KAAK,EAAE;CACnB,YAAY,cAAc,CAAC,KAAK,CAAC,CAAC;CAClC,YAAY,MAAM,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,IAAI,CAAC;CACpD,YAAY,MAAM,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,KAAK,CAAC;CACrD,YAAY,IAAI,EAAE,GAAG,EAAE,CAAC,IAAI,EAAE,EAAE,GAAG,EAAE,CAAC,IAAI,EAAE,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC;CACzD,YAAY,MAAM,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC;CAC9B,YAAY,MAAM,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;CAC5C,YAAY,IAAI,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;CACpC,YAAY,IAAI,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;CACpC,YAAY,IAAI,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;CACpC,YAAY,IAAI,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;CACpC,YAAY,IAAI,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;CACpC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;CAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;CAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;CAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;CAChC,YAAY,IAAI,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;CACpC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;CAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;CAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;CAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;CAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;CAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;CAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;CAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;CAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;CAC/B,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;CAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;CAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;CAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;CAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;CAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;CAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;CAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;CAC/B,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;CAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;CAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;CAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;CAC/B,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;CAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;CAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;CAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;CAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;CAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;CAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;CAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;CAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAA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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,18,19,20,21,22,23,24,29,50,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,102,103,104,105,106]}