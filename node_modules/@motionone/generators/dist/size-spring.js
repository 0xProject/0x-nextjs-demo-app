const t=t=>t/1e3;const e=100,r=10,a=1;const s=({stiffness:s=e,damping:n=r,mass:c=a,from:o=0,to:h=1,velocity:M=0,restSpeed:u=2,restDistance:i=.5}={})=>{M=M?t(M):0;const d={done:!1,hasReachedTarget:!1,current:o,target:h},f=h-o,p=Math.sqrt(s/c)/1e3,g=((t=e,s=r,n=a)=>s/(2*Math.sqrt(t*n)))(s,n,c);let m;if(g<1){const t=p*Math.sqrt(1-g*g);m=e=>h-Math.exp(-g*p*e)*((g*p*f-M)/t*Math.sin(t*e)+f*Math.cos(t*e))}else m=t=>h-Math.exp(-p*t)*(f+(p*f-M)*t);return t=>{d.current=m(t);const e=0===t?M:function(t,e,r){const a=Math.max(e-5,0);return s=r-t(a),(n=e-a)?s*(1e3/n):0;var s,n}(m,t,d.current),r=Math.abs(e)<=u,a=Math.abs(h-d.current)<=i;var s,n,c;return d.done=r&&a,d.hasReachedTarget=(s=o,n=h,c=d.current,s<n&&c>=n||s>n&&c<=n),d}};export{s as spring};
