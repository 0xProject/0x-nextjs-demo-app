import type { TypedData } from 'abitype';
import type { Hex } from '../../types/misc.js';
import type { TypedDataDefinition } from '../../types/typedData.js';
export type HashTypedDataParameters<TTypedData extends TypedData | {
    [key: string]: unknown;
} = TypedData, TPrimaryType extends string = string> = TypedDataDefinition<TTypedData, TPrimaryType>;
export type HashTypedDataReturnType = Hex;
export declare function hashTypedData<TTypedData extends TypedData | {
    [key: string]: unknown;
}, TPrimaryType extends string = string>({ domain: domain_, message, primaryType, types: types_, }: HashTypedDataParameters<TTypedData, TPrimaryType>): HashTypedDataReturnType;
//# sourceMappingURL=hashTypedData.d.ts.map