import type { Hex } from '../../types/misc.js';
import type { TransactionSerializable, TransactionSerialized, TransactionType } from '../../types/transaction.js';
import type { GetTransactionType } from '../../utils/transaction/getTransactionType.js';
export type SignTransactionArgs<TTransactionSerializable extends TransactionSerializable = TransactionSerializable> = {
    privateKey: Hex;
    transaction: TTransactionSerializable;
};
export type SignTransactionReturnType<TTransactionSerializable extends TransactionSerializable = TransactionSerializable, TTransactionType extends TransactionType = GetTransactionType<TTransactionSerializable>> = TransactionSerialized<TTransactionType>;
export declare function signTransaction<TTransactionSerializable extends TransactionSerializable>({ privateKey, transaction, }: SignTransactionArgs<TTransactionSerializable>): Promise<SignTransactionReturnType<TTransactionSerializable>>;
//# sourceMappingURL=signTransaction.d.ts.map