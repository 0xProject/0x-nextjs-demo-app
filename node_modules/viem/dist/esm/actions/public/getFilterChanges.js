import { decodeEventLog } from '../../utils/abi/decodeEventLog.js';
import { formatLog } from '../../utils/formatters/log.js';
export async function getFilterChanges(_client, { filter }) {
    const logs = await filter.request({
        method: 'eth_getFilterChanges',
        params: [filter.id],
    });
    return logs
        .map((log) => {
        if (typeof log === 'string')
            return log;
        try {
            const { eventName, args } = 'abi' in filter && filter.abi
                ? decodeEventLog({
                    abi: filter.abi,
                    data: log.data,
                    topics: log.topics,
                })
                : { eventName: undefined, args: undefined };
            return formatLog(log, { args, eventName });
        }
        catch {
            return;
        }
    })
        .filter(Boolean);
}
//# sourceMappingURL=getFilterChanges.js.map